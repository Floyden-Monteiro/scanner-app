com/epson/epos2/barcodescanner/BarcodeScanner = Com.Epson.Epos2.Barcodescanner.BarcodeScanner
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  EVENT_DISCONNECT = EventDisconnect
  EVENT_RECONNECT = EventReconnect
  EVENT_RECONNECTING = EventReconnecting
  FALSE = False
  PARAM_DEFAULT = ParamDefault
  TRUE = True
  getAdmin()Ljava/lang/String; = Admin
  getLocation()Ljava/lang/String; = Location
  getStatus()Lcom/epson/epos2/barcodescanner/ScannerStatusInfo; = Status
  checkHandle()V = CheckHandle()
  connect(Ljava/lang/String;I)V = Connect(string, int)
  disconnect()V = Disconnect()
  finalize()V = Finalize()
  initializeScannerInstance()V = InitializeScannerInstance()
  nativeEpos2GetAdmin(J)Ljava/lang/String; = NativeEpos2GetAdmin(long)
  nativeEpos2GetLocation(J)Ljava/lang/String; = NativeEpos2GetLocation(long)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/barcodescanner/ScannerStatusInfo; = NativeEpos2GetStatus(long)
  onScanData(Ljava/lang/String;)V = OnScanData(string)
  setConnectionEventListener(Lcom/epson/epos2/ConnectionListener;)V = SetConnectionEventListener(Com.Epson.Epos2.IConnectionListener)
  setScanEventListener(Lcom/epson/epos2/barcodescanner/ScanListener;)V = SetScanEventListener(Com.Epson.Epos2.Barcodescanner.IScanListener)
com/epson/epos2/barcodescanner/BarcodeScanner = Com.Epson.Epos2.Barcodescanner.BarcodeScanner
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  EVENT_DISCONNECT = EventDisconnect
  EVENT_RECONNECT = EventReconnect
  EVENT_RECONNECTING = EventReconnecting
  FALSE = False
  PARAM_DEFAULT = ParamDefault
  TRUE = True
  getAdmin()Ljava/lang/String; = Admin
  getLocation()Ljava/lang/String; = Location
  getStatus()Lcom/epson/epos2/barcodescanner/ScannerStatusInfo; = Status
  checkHandle()V = CheckHandle()
  connect(Ljava/lang/String;I)V = Connect(string, int)
  disconnect()V = Disconnect()
  initializeScannerInstance()V = InitializeScannerInstance()
  nativeEpos2GetAdmin(J)Ljava/lang/String; = NativeEpos2GetAdmin(long)
  nativeEpos2GetLocation(J)Ljava/lang/String; = NativeEpos2GetLocation(long)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/barcodescanner/ScannerStatusInfo; = NativeEpos2GetStatus(long)
  onScanData(Ljava/lang/String;)V = OnScanData(string)
  setConnectionEventListener(Lcom/epson/epos2/ConnectionListener;)V = SetConnectionEventListener(Com.Epson.Epos2.IConnectionListener)
  setScanEventListener(Lcom/epson/epos2/barcodescanner/ScanListener;)V = SetScanEventListener(Com.Epson.Epos2.Barcodescanner.IScanListener)
com/epson/epos2/barcodescanner/ScanListener = Com.Epson.Epos2.Barcodescanner.IScanListener
  onScanData(Lcom/epson/epos2/barcodescanner/BarcodeScanner;Ljava/lang/String;)V = OnScanData(Com.Epson.Epos2.Barcodescanner.BarcodeScanner, string)
com/epson/epos2/barcodescanner/ScanListener = Com.Epson.Epos2.Barcodescanner.IScanListener
  onScanData(Lcom/epson/epos2/barcodescanner/BarcodeScanner;Ljava/lang/String;)V = OnScanData(Com.Epson.Epos2.Barcodescanner.BarcodeScanner, string)
com/epson/epos2/barcodescanner/ScannerStatusInfo = Com.Epson.Epos2.Barcodescanner.ScannerStatusInfo
  <init>()V = .ctor()
  getConnection()I = Connection
com/epson/epos2/barcodescanner/ScannerStatusInfo = Com.Epson.Epos2.Barcodescanner.ScannerStatusInfo
  <init>()V = .ctor()
  getConnection()I = Connection
com/epson/epos2/BuildConfig = Com.Epson.Epos2.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/epson/epos2/BuildConfig = Com.Epson.Epos2.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/epson/epos2/cashchanger/CashChanger = Com.Epson.Epos2.Cashchanger.CashChanger
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  COLLECT_ALL_CASH = CollectAllCash
  COLLECT_PART_OF_CASH = CollectPartOfCash
  COUNT_MODE_AUTO_COUNT = CountModeAutoCount
  COUNT_MODE_MANUAL_INPUT = CountModeManualInput
  DEPOSIT_CHANGE = DepositChange
  DEPOSIT_NOCHANGE = DepositNochange
  DEPOSIT_REPAY = DepositRepay
  EVENT_DISCONNECT = EventDisconnect
  EVENT_RECONNECT = EventReconnect
  EVENT_RECONNECTING = EventReconnecting
  FALSE = False
  PARAM_DEFAULT = ParamDefault
  STATUS_BUSY = StatusBusy
  STATUS_END = StatusEnd
  STATUS_ERR = StatusErr
  STATUS_PAUSE = StatusPause
  ST_EMPTY = StEmpty
  ST_FULL = StFull
  ST_NEAR_EMPTY = StNearEmpty
  ST_NEAR_FULL = StNearFull
  ST_OK = StOk
  SUE_POWER_OFF = SuePowerOff
  SUE_POWER_OFFLINE = SuePowerOffline
  SUE_POWER_OFF_OFFLINE = SuePowerOffOffline
  SUE_POWER_ONLINE = SuePowerOnline
  SUE_STATUS_EMPTY = SueStatusEmpty
  SUE_STATUS_EMPTYOK = SueStatusEmptyok
  SUE_STATUS_FULL = SueStatusFull
  SUE_STATUS_FULLOK = SueStatusFullok
  SUE_STATUS_JAM = SueStatusJam
  SUE_STATUS_JAMOK = SueStatusJamok
  SUE_STATUS_NEAREMPTY = SueStatusNearempty
  SUE_STATUS_NEARFULL = SueStatusNearfull
  TRUE = True
  getAdmin()Ljava/lang/String; = Admin
  getLocation()Ljava/lang/String; = Location
  getOposErrorCode()I = OposErrorCode
  getStatus()Lcom/epson/epos2/cashchanger/CashChangerStatusInfo; = Status
  beginDeposit()V = BeginDeposit()
  checkHandle()V = CheckHandle()
  collectCash(I)V = CollectCash(int)
  connect(Ljava/lang/String;I)V = Connect(string, int)
  disconnect()V = Disconnect()
  dispenseCash(Ljava/util/Map;)V = DispenseCash(System.Collections.Generic.IDictionary<string, Java.Lang.Integer>)
  dispenseChange(I)V = DispenseChange(int)
  endDeposit(I)V = EndDeposit(int)
  finalize()V = Finalize()
  initializeCashChangerInstance()V = InitializeCashChangerInstance()
  nativeEpos2BeginDeposit(J)I = NativeEpos2BeginDeposit(long)
  nativeEpos2CollectCash(JI)I = NativeEpos2CollectCash(long, int)
  nativeEpos2DispenseCash(J[Ljava/lang/String;[JI)I = NativeEpos2DispenseCash(long, string[], long[], int)
  nativeEpos2DispenseChange(JJ)I = NativeEpos2DispenseChange(long, long)
  nativeEpos2EndDeposit(JI)I = NativeEpos2EndDeposit(long, int)
  nativeEpos2GetAdmin(J)Ljava/lang/String; = NativeEpos2GetAdmin(long)
  nativeEpos2GetLocation(J)Ljava/lang/String; = NativeEpos2GetLocation(long)
  nativeEpos2GetOposErrorCode(J)I = NativeEpos2GetOposErrorCode(long)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/cashchanger/CashChangerStatusInfo; = NativeEpos2GetStatus(long)
  nativeEpos2OpenDrawer(J)I = NativeEpos2OpenDrawer(long)
  nativeEpos2PauseDeposit(J)I = NativeEpos2PauseDeposit(long)
  nativeEpos2ReadCashCount(J)I = NativeEpos2ReadCashCount(long)
  nativeEpos2RestartDeposit(J)I = NativeEpos2RestartDeposit(long)
  nativeEpos2SendCommand(J[B)I = NativeEpos2SendCommand(long, byte[])
  nativeEpos2SendDirectIOCommand(JJJLjava/lang/String;)I = NativeEpos2SendDirectIOCommand(long, long, long, string)
  nativeEpos2SetConfigCountMode(JI)I = NativeEpos2SetConfigCountMode(long, int)
  nativeEpos2SetConfigLeftCash(JJJ)I = NativeEpos2SetConfigLeftCash(long, long, long)
  openDrawer()V = OpenDrawer()
  pauseDeposit()V = PauseDeposit()
  readCashCount()V = ReadCashCount()
  restartDeposit()V = RestartDeposit()
  sendCommand([B)V = SendCommand(byte[])
  sendDirectIOCommand(IILjava/lang/String;)V = SendDirectIOCommand(int, int, string)
  setCashCountEventListener(Lcom/epson/epos2/cashchanger/CashCountListener;)V = SetCashCountEventListener(Com.Epson.Epos2.Cashchanger.ICashCountListener)
  setCollectEventListener(Lcom/epson/epos2/cashchanger/CollectListener;)V = SetCollectEventListener(Com.Epson.Epos2.Cashchanger.ICollectListener)
  setCommandReplyEventListener(Lcom/epson/epos2/cashchanger/CommandReplyListener;)V = SetCommandReplyEventListener(Com.Epson.Epos2.Cashchanger.ICommandReplyListener)
  setConfigChangeEventListener(Lcom/epson/epos2/cashchanger/ConfigChangeListener;)V = SetConfigChangeEventListener(Com.Epson.Epos2.Cashchanger.IConfigChangeListener)
  setConfigCountMode(I)V = SetConfigCountMode(int)
  setConfigLeftCash(II)V = SetConfigLeftCash(int, int)
  setConnectionEventListener(Lcom/epson/epos2/ConnectionListener;)V = SetConnectionEventListener(Com.Epson.Epos2.IConnectionListener)
  setDepositEventListener(Lcom/epson/epos2/cashchanger/DepositListener;)V = SetDepositEventListener(Com.Epson.Epos2.Cashchanger.IDepositListener)
  setDirectIOCommandReplyEventListener(Lcom/epson/epos2/cashchanger/DirectIOCommandReplyListener;)V = SetDirectIOCommandReplyEventListener(Com.Epson.Epos2.Cashchanger.IDirectIOCommandReplyListener)
  setDirectIOEventListener(Lcom/epson/epos2/cashchanger/DirectIOListener;)V = SetDirectIOEventListener(Com.Epson.Epos2.Cashchanger.IDirectIOListener)
  setDispenseEventListener(Lcom/epson/epos2/cashchanger/DispenseListener;)V = SetDispenseEventListener(Com.Epson.Epos2.Cashchanger.IDispenseListener)
  setStatusChangeEventListener(Lcom/epson/epos2/cashchanger/StatusChangeListener;)V = SetStatusChangeEventListener(Com.Epson.Epos2.Cashchanger.IStatusChangeListener)
  setStatusUpdateEventListener(Lcom/epson/epos2/cashchanger/StatusUpdateListener;)V = SetStatusUpdateEventListener(Com.Epson.Epos2.Cashchanger.IStatusUpdateListener)
com/epson/epos2/cashchanger/CashChanger = Com.Epson.Epos2.Cashchanger.CashChanger
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  COLLECT_ALL_CASH = CollectAllCash
  COLLECT_PART_OF_CASH = CollectPartOfCash
  COUNT_MODE_AUTO_COUNT = CountModeAutoCount
  COUNT_MODE_MANUAL_INPUT = CountModeManualInput
  DEPOSIT_CHANGE = DepositChange
  DEPOSIT_NOCHANGE = DepositNochange
  DEPOSIT_REPAY = DepositRepay
  EVENT_DISCONNECT = EventDisconnect
  EVENT_RECONNECT = EventReconnect
  EVENT_RECONNECTING = EventReconnecting
  FALSE = False
  PARAM_DEFAULT = ParamDefault
  STATUS_BUSY = StatusBusy
  STATUS_END = StatusEnd
  STATUS_ERR = StatusErr
  STATUS_PAUSE = StatusPause
  ST_EMPTY = StEmpty
  ST_FULL = StFull
  ST_NEAR_EMPTY = StNearEmpty
  ST_NEAR_FULL = StNearFull
  ST_OK = StOk
  SUE_POWER_OFF = SuePowerOff
  SUE_POWER_OFFLINE = SuePowerOffline
  SUE_POWER_OFF_OFFLINE = SuePowerOffOffline
  SUE_POWER_ONLINE = SuePowerOnline
  SUE_STATUS_EMPTY = SueStatusEmpty
  SUE_STATUS_EMPTYOK = SueStatusEmptyok
  SUE_STATUS_FULL = SueStatusFull
  SUE_STATUS_FULLOK = SueStatusFullok
  SUE_STATUS_JAM = SueStatusJam
  SUE_STATUS_JAMOK = SueStatusJamok
  SUE_STATUS_NEAREMPTY = SueStatusNearempty
  SUE_STATUS_NEARFULL = SueStatusNearfull
  TRUE = True
  getAdmin()Ljava/lang/String; = Admin
  getLocation()Ljava/lang/String; = Location
  getOposErrorCode()I = OposErrorCode
  getStatus()Lcom/epson/epos2/cashchanger/CashChangerStatusInfo; = Status
  beginDeposit()V = BeginDeposit()
  checkHandle()V = CheckHandle()
  collectCash(I)V = CollectCash(int)
  connect(Ljava/lang/String;I)V = Connect(string, int)
  disconnect()V = Disconnect()
  dispenseCash(Ljava/util/Map;)V = DispenseCash(System.Collections.Generic.IDictionary<string, Java.Lang.Integer>)
  dispenseChange(I)V = DispenseChange(int)
  endDeposit(I)V = EndDeposit(int)
  initializeCashChangerInstance()V = InitializeCashChangerInstance()
  nativeEpos2BeginDeposit(J)I = NativeEpos2BeginDeposit(long)
  nativeEpos2CollectCash(JI)I = NativeEpos2CollectCash(long, int)
  nativeEpos2DispenseCash(J[Ljava/lang/String;[JI)I = NativeEpos2DispenseCash(long, string[], long[], int)
  nativeEpos2DispenseChange(JJ)I = NativeEpos2DispenseChange(long, long)
  nativeEpos2EndDeposit(JI)I = NativeEpos2EndDeposit(long, int)
  nativeEpos2GetAdmin(J)Ljava/lang/String; = NativeEpos2GetAdmin(long)
  nativeEpos2GetLocation(J)Ljava/lang/String; = NativeEpos2GetLocation(long)
  nativeEpos2GetOposErrorCode(J)I = NativeEpos2GetOposErrorCode(long)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/cashchanger/CashChangerStatusInfo; = NativeEpos2GetStatus(long)
  nativeEpos2OpenDrawer(J)I = NativeEpos2OpenDrawer(long)
  nativeEpos2PauseDeposit(J)I = NativeEpos2PauseDeposit(long)
  nativeEpos2ReadCashCount(J)I = NativeEpos2ReadCashCount(long)
  nativeEpos2RestartDeposit(J)I = NativeEpos2RestartDeposit(long)
  nativeEpos2SendCommand(J[B)I = NativeEpos2SendCommand(long, byte[])
  nativeEpos2SendDirectIOCommand(JJJLjava/lang/String;)I = NativeEpos2SendDirectIOCommand(long, long, long, string)
  nativeEpos2SetConfigCountMode(JI)I = NativeEpos2SetConfigCountMode(long, int)
  nativeEpos2SetConfigLeftCash(JJJ)I = NativeEpos2SetConfigLeftCash(long, long, long)
  openDrawer()V = OpenDrawer()
  pauseDeposit()V = PauseDeposit()
  readCashCount()V = ReadCashCount()
  restartDeposit()V = RestartDeposit()
  sendCommand([B)V = SendCommand(byte[])
  sendDirectIOCommand(IILjava/lang/String;)V = SendDirectIOCommand(int, int, string)
  setCashCountEventListener(Lcom/epson/epos2/cashchanger/CashCountListener;)V = SetCashCountEventListener(Com.Epson.Epos2.Cashchanger.ICashCountListener)
  setCollectEventListener(Lcom/epson/epos2/cashchanger/CollectListener;)V = SetCollectEventListener(Com.Epson.Epos2.Cashchanger.ICollectListener)
  setCommandReplyEventListener(Lcom/epson/epos2/cashchanger/CommandReplyListener;)V = SetCommandReplyEventListener(Com.Epson.Epos2.Cashchanger.ICommandReplyListener)
  setConfigChangeEventListener(Lcom/epson/epos2/cashchanger/ConfigChangeListener;)V = SetConfigChangeEventListener(Com.Epson.Epos2.Cashchanger.IConfigChangeListener)
  setConfigCountMode(I)V = SetConfigCountMode(int)
  setConfigLeftCash(II)V = SetConfigLeftCash(int, int)
  setConnectionEventListener(Lcom/epson/epos2/ConnectionListener;)V = SetConnectionEventListener(Com.Epson.Epos2.IConnectionListener)
  setDepositEventListener(Lcom/epson/epos2/cashchanger/DepositListener;)V = SetDepositEventListener(Com.Epson.Epos2.Cashchanger.IDepositListener)
  setDirectIOCommandReplyEventListener(Lcom/epson/epos2/cashchanger/DirectIOCommandReplyListener;)V = SetDirectIOCommandReplyEventListener(Com.Epson.Epos2.Cashchanger.IDirectIOCommandReplyListener)
  setDirectIOEventListener(Lcom/epson/epos2/cashchanger/DirectIOListener;)V = SetDirectIOEventListener(Com.Epson.Epos2.Cashchanger.IDirectIOListener)
  setDispenseEventListener(Lcom/epson/epos2/cashchanger/DispenseListener;)V = SetDispenseEventListener(Com.Epson.Epos2.Cashchanger.IDispenseListener)
  setStatusChangeEventListener(Lcom/epson/epos2/cashchanger/StatusChangeListener;)V = SetStatusChangeEventListener(Com.Epson.Epos2.Cashchanger.IStatusChangeListener)
  setStatusUpdateEventListener(Lcom/epson/epos2/cashchanger/StatusUpdateListener;)V = SetStatusUpdateEventListener(Com.Epson.Epos2.Cashchanger.IStatusUpdateListener)
com/epson/epos2/cashchanger/CashChangerStatusInfo = Com.Epson.Epos2.Cashchanger.CashChangerStatusInfo
  <init>()V = .ctor()
  getConnection()I = Connection
com/epson/epos2/cashchanger/CashChangerStatusInfo = Com.Epson.Epos2.Cashchanger.CashChangerStatusInfo
  <init>()V = .ctor()
  getConnection()I = Connection
com/epson/epos2/cashchanger/CashCountListener = Com.Epson.Epos2.Cashchanger.ICashCountListener
  onCChangerCashCount(Lcom/epson/epos2/cashchanger/CashChanger;ILjava/util/Map;)V = OnCChangerCashCount(Com.Epson.Epos2.Cashchanger.CashChanger, int, System.Collections.Generic.IDictionary<string, Java.Lang.Integer>)
com/epson/epos2/cashchanger/CashCountListener = Com.Epson.Epos2.Cashchanger.ICashCountListener
  onCChangerCashCount(Lcom/epson/epos2/cashchanger/CashChanger;ILjava/util/Map;)V = OnCChangerCashCount(Com.Epson.Epos2.Cashchanger.CashChanger, int, System.Collections.Generic.IDictionary<string, Java.Lang.Integer>)
com/epson/epos2/cashchanger/CollectListener = Com.Epson.Epos2.Cashchanger.ICollectListener
  onCChangerCollect(Lcom/epson/epos2/cashchanger/CashChanger;I)V = OnCChangerCollect(Com.Epson.Epos2.Cashchanger.CashChanger, int)
com/epson/epos2/cashchanger/CollectListener = Com.Epson.Epos2.Cashchanger.ICollectListener
  onCChangerCollect(Lcom/epson/epos2/cashchanger/CashChanger;I)V = OnCChangerCollect(Com.Epson.Epos2.Cashchanger.CashChanger, int)
com/epson/epos2/cashchanger/CommandReplyListener = Com.Epson.Epos2.Cashchanger.ICommandReplyListener
  onCChangerCommandReply(Lcom/epson/epos2/cashchanger/CashChanger;I[B)V = OnCChangerCommandReply(Com.Epson.Epos2.Cashchanger.CashChanger, int, byte[])
com/epson/epos2/cashchanger/CommandReplyListener = Com.Epson.Epos2.Cashchanger.ICommandReplyListener
  onCChangerCommandReply(Lcom/epson/epos2/cashchanger/CashChanger;I[B)V = OnCChangerCommandReply(Com.Epson.Epos2.Cashchanger.CashChanger, int, byte[])
com/epson/epos2/cashchanger/ConfigChangeListener = Com.Epson.Epos2.Cashchanger.IConfigChangeListener
  onCChangerConfigChange(Lcom/epson/epos2/cashchanger/CashChanger;I)V = OnCChangerConfigChange(Com.Epson.Epos2.Cashchanger.CashChanger, int)
com/epson/epos2/cashchanger/ConfigChangeListener = Com.Epson.Epos2.Cashchanger.IConfigChangeListener
  onCChangerConfigChange(Lcom/epson/epos2/cashchanger/CashChanger;I)V = OnCChangerConfigChange(Com.Epson.Epos2.Cashchanger.CashChanger, int)
com/epson/epos2/cashchanger/DepositListener = Com.Epson.Epos2.Cashchanger.IDepositListener
  onCChangerDeposit(Lcom/epson/epos2/cashchanger/CashChanger;IIILjava/util/Map;)V = OnCChangerDeposit(Com.Epson.Epos2.Cashchanger.CashChanger, int, int, int, System.Collections.Generic.IDictionary<string, Java.Lang.Integer>)
com/epson/epos2/cashchanger/DepositListener = Com.Epson.Epos2.Cashchanger.IDepositListener
  onCChangerDeposit(Lcom/epson/epos2/cashchanger/CashChanger;IIILjava/util/Map;)V = OnCChangerDeposit(Com.Epson.Epos2.Cashchanger.CashChanger, int, int, int, System.Collections.Generic.IDictionary<string, Java.Lang.Integer>)
com/epson/epos2/cashchanger/DirectIOCommandReplyListener = Com.Epson.Epos2.Cashchanger.IDirectIOCommandReplyListener
  onCChangerDirectIOCommandReply(Lcom/epson/epos2/cashchanger/CashChanger;IIILjava/lang/String;)V = OnCChangerDirectIOCommandReply(Com.Epson.Epos2.Cashchanger.CashChanger, int, int, int, string)
com/epson/epos2/cashchanger/DirectIOCommandReplyListener = Com.Epson.Epos2.Cashchanger.IDirectIOCommandReplyListener
  onCChangerDirectIOCommandReply(Lcom/epson/epos2/cashchanger/CashChanger;IIILjava/lang/String;)V = OnCChangerDirectIOCommandReply(Com.Epson.Epos2.Cashchanger.CashChanger, int, int, int, string)
com/epson/epos2/cashchanger/DirectIOListener = Com.Epson.Epos2.Cashchanger.IDirectIOListener
  onCChangerDirectIO(Lcom/epson/epos2/cashchanger/CashChanger;IILjava/lang/String;)V = OnCChangerDirectIO(Com.Epson.Epos2.Cashchanger.CashChanger, int, int, string)
com/epson/epos2/cashchanger/DirectIOListener = Com.Epson.Epos2.Cashchanger.IDirectIOListener
  onCChangerDirectIO(Lcom/epson/epos2/cashchanger/CashChanger;IILjava/lang/String;)V = OnCChangerDirectIO(Com.Epson.Epos2.Cashchanger.CashChanger, int, int, string)
com/epson/epos2/cashchanger/DispenseListener = Com.Epson.Epos2.Cashchanger.IDispenseListener
  onCChangerDispense(Lcom/epson/epos2/cashchanger/CashChanger;I)V = OnCChangerDispense(Com.Epson.Epos2.Cashchanger.CashChanger, int)
com/epson/epos2/cashchanger/DispenseListener = Com.Epson.Epos2.Cashchanger.IDispenseListener
  onCChangerDispense(Lcom/epson/epos2/cashchanger/CashChanger;I)V = OnCChangerDispense(Com.Epson.Epos2.Cashchanger.CashChanger, int)
com/epson/epos2/cashchanger/Epos2CallbackCode = Com.Epson.Epos2.Cashchanger.Epos2CallbackCode
  <init>()V = .ctor()
  CODE_BUSY = CodeBusy
  CODE_DISCREPANCY = CodeDiscrepancy
  CODE_ERR_CASH_IN_TRAY = CodeErrCashInTray
  CODE_ERR_COMMAND = CodeErrCommand
  CODE_ERR_DEVICE = CodeErrDevice
  CODE_ERR_FAILURE = CodeErrFailure
  CODE_ERR_OPOSCODE = CodeErrOposcode
  CODE_ERR_PARAM = CodeErrParam
  CODE_ERR_REJECT_UNIT = CodeErrRejectUnit
  CODE_ERR_SHORTAGE = CodeErrShortage
  CODE_ERR_SYSTEM = CodeErrSystem
  CODE_ERR_UNSUPPORTED = CodeErrUnsupported
  CODE_SUCCESS = CodeSuccess
com/epson/epos2/cashchanger/Epos2CallbackCode = Com.Epson.Epos2.Cashchanger.Epos2CallbackCode
  <init>()V = .ctor()
  CODE_BUSY = CodeBusy
  CODE_DISCREPANCY = CodeDiscrepancy
  CODE_ERR_CASH_IN_TRAY = CodeErrCashInTray
  CODE_ERR_COMMAND = CodeErrCommand
  CODE_ERR_DEVICE = CodeErrDevice
  CODE_ERR_FAILURE = CodeErrFailure
  CODE_ERR_OPOSCODE = CodeErrOposcode
  CODE_ERR_PARAM = CodeErrParam
  CODE_ERR_REJECT_UNIT = CodeErrRejectUnit
  CODE_ERR_SHORTAGE = CodeErrShortage
  CODE_ERR_SYSTEM = CodeErrSystem
  CODE_ERR_UNSUPPORTED = CodeErrUnsupported
  CODE_SUCCESS = CodeSuccess
com/epson/epos2/cashchanger/StatusChangeListener = Com.Epson.Epos2.Cashchanger.IStatusChangeListener
  onCChangerStatusChange(Lcom/epson/epos2/cashchanger/CashChanger;ILjava/util/Map;)V = OnCChangerStatusChange(Com.Epson.Epos2.Cashchanger.CashChanger, int, System.Collections.Generic.IDictionary<string, Java.Lang.Integer>)
com/epson/epos2/cashchanger/StatusChangeListener = Com.Epson.Epos2.Cashchanger.IStatusChangeListener
  onCChangerStatusChange(Lcom/epson/epos2/cashchanger/CashChanger;ILjava/util/Map;)V = OnCChangerStatusChange(Com.Epson.Epos2.Cashchanger.CashChanger, int, System.Collections.Generic.IDictionary<string, Java.Lang.Integer>)
com/epson/epos2/cashchanger/StatusUpdateListener = Com.Epson.Epos2.Cashchanger.IStatusUpdateListener
  onCChangerStatusUpdate(Lcom/epson/epos2/cashchanger/CashChanger;I)V = OnCChangerStatusUpdate(Com.Epson.Epos2.Cashchanger.CashChanger, int)
com/epson/epos2/cashchanger/StatusUpdateListener = Com.Epson.Epos2.Cashchanger.IStatusUpdateListener
  onCChangerStatusUpdate(Lcom/epson/epos2/cashchanger/CashChanger;I)V = OnCChangerStatusUpdate(Com.Epson.Epos2.Cashchanger.CashChanger, int)
com/epson/epos2/cat/AccessDailyLogListener = Com.Epson.Epos2.Cat.IAccessDailyLogListener
  onCatAccessDailyLog(Lcom/epson/epos2/cat/Cat;IIILjava/util/ArrayList;)V = OnCatAccessDailyLog(Com.Epson.Epos2.Cat.Cat, int, int, int, System.Collections.Generic.IList<Com.Epson.Epos2.Cat.DailyLog>)
com/epson/epos2/cat/AccessDailyLogListener = Com.Epson.Epos2.Cat.IAccessDailyLogListener
  onCatAccessDailyLog(Lcom/epson/epos2/cat/Cat;IIILjava/util/ArrayList;)V = OnCatAccessDailyLog(Com.Epson.Epos2.Cat.Cat, int, int, int, System.Collections.Generic.IList<Com.Epson.Epos2.Cat.DailyLog>)
com/epson/epos2/cat/AuthorizeCompletionListener = Com.Epson.Epos2.Cat.IAuthorizeCompletionListener
  onCatAuthorizeCompletion(Lcom/epson/epos2/cat/Cat;IIILcom/epson/epos2/cat/AuthorizeResult;)V = OnCatAuthorizeCompletion(Com.Epson.Epos2.Cat.Cat, int, int, int, Com.Epson.Epos2.Cat.AuthorizeResult)
com/epson/epos2/cat/AuthorizeCompletionListener = Com.Epson.Epos2.Cat.IAuthorizeCompletionListener
  onCatAuthorizeCompletion(Lcom/epson/epos2/cat/Cat;IIILcom/epson/epos2/cat/AuthorizeResult;)V = OnCatAuthorizeCompletion(Com.Epson.Epos2.Cat.Cat, int, int, int, Com.Epson.Epos2.Cat.AuthorizeResult)
com/epson/epos2/cat/AuthorizeRefundListener = Com.Epson.Epos2.Cat.IAuthorizeRefundListener
  onCatAuthorizeRefund(Lcom/epson/epos2/cat/Cat;IIILcom/epson/epos2/cat/AuthorizeResult;)V = OnCatAuthorizeRefund(Com.Epson.Epos2.Cat.Cat, int, int, int, Com.Epson.Epos2.Cat.AuthorizeResult)
com/epson/epos2/cat/AuthorizeRefundListener = Com.Epson.Epos2.Cat.IAuthorizeRefundListener
  onCatAuthorizeRefund(Lcom/epson/epos2/cat/Cat;IIILcom/epson/epos2/cat/AuthorizeResult;)V = OnCatAuthorizeRefund(Com.Epson.Epos2.Cat.Cat, int, int, int, Com.Epson.Epos2.Cat.AuthorizeResult)
com/epson/epos2/cat/AuthorizeResult = Com.Epson.Epos2.Cat.AuthorizeResult
  <init>()V = .ctor()
  getAccountNumber()Ljava/lang/String; = AccountNumber
  getAdditionalSecurityInformation()Ljava/lang/String; = AdditionalSecurityInformation
  getApprovalCode()Ljava/lang/String; = ApprovalCode
  getBalance()I = Balance
  getKid()Ljava/lang/String; = Kid
  getPaymentCondition()I = PaymentCondition
  getSettledAmount()I = SettledAmount
  getSlipNumber()Ljava/lang/String; = SlipNumber
  getTransactionNumber()Ljava/lang/String; = TransactionNumber
  getTransactionType()Ljava/lang/String; = TransactionType
  getVoidSlipNumber()Ljava/lang/String; = VoidSlipNumber
com/epson/epos2/cat/AuthorizeResult = Com.Epson.Epos2.Cat.AuthorizeResult
  <init>()V = .ctor()
  getAccountNumber()Ljava/lang/String; = AccountNumber
  getAdditionalSecurityInformation()Ljava/lang/String; = AdditionalSecurityInformation
  getApprovalCode()Ljava/lang/String; = ApprovalCode
  getBalance()I = Balance
  getKid()Ljava/lang/String; = Kid
  getPaymentCondition()I = PaymentCondition
  getSettledAmount()I = SettledAmount
  getSlipNumber()Ljava/lang/String; = SlipNumber
  getTransactionNumber()Ljava/lang/String; = TransactionNumber
  getTransactionType()Ljava/lang/String; = TransactionType
  getVoidSlipNumber()Ljava/lang/String; = VoidSlipNumber
com/epson/epos2/cat/AuthorizeSalesListener = Com.Epson.Epos2.Cat.IAuthorizeSalesListener
  onCatAuthorizeSales(Lcom/epson/epos2/cat/Cat;IIILcom/epson/epos2/cat/AuthorizeResult;)V = OnCatAuthorizeSales(Com.Epson.Epos2.Cat.Cat, int, int, int, Com.Epson.Epos2.Cat.AuthorizeResult)
com/epson/epos2/cat/AuthorizeSalesListener = Com.Epson.Epos2.Cat.IAuthorizeSalesListener
  onCatAuthorizeSales(Lcom/epson/epos2/cat/Cat;IIILcom/epson/epos2/cat/AuthorizeResult;)V = OnCatAuthorizeSales(Com.Epson.Epos2.Cat.Cat, int, int, int, Com.Epson.Epos2.Cat.AuthorizeResult)
com/epson/epos2/cat/AuthorizeVoidListener = Com.Epson.Epos2.Cat.IAuthorizeVoidListener
  onCatAuthorizeVoid(Lcom/epson/epos2/cat/Cat;IIILcom/epson/epos2/cat/AuthorizeResult;)V = OnCatAuthorizeVoid(Com.Epson.Epos2.Cat.Cat, int, int, int, Com.Epson.Epos2.Cat.AuthorizeResult)
com/epson/epos2/cat/AuthorizeVoidListener = Com.Epson.Epos2.Cat.IAuthorizeVoidListener
  onCatAuthorizeVoid(Lcom/epson/epos2/cat/Cat;IIILcom/epson/epos2/cat/AuthorizeResult;)V = OnCatAuthorizeVoid(Com.Epson.Epos2.Cat.Cat, int, int, int, Com.Epson.Epos2.Cat.AuthorizeResult)
com/epson/epos2/cat/CashDepositListener = Com.Epson.Epos2.Cat.ICashDepositListener
  onCatCashDeposit(Lcom/epson/epos2/cat/Cat;IIILcom/epson/epos2/cat/CashDepositResult;)V = OnCatCashDeposit(Com.Epson.Epos2.Cat.Cat, int, int, int, Com.Epson.Epos2.Cat.CashDepositResult)
com/epson/epos2/cat/CashDepositListener = Com.Epson.Epos2.Cat.ICashDepositListener
  onCatCashDeposit(Lcom/epson/epos2/cat/Cat;IIILcom/epson/epos2/cat/CashDepositResult;)V = OnCatCashDeposit(Com.Epson.Epos2.Cat.Cat, int, int, int, Com.Epson.Epos2.Cat.CashDepositResult)
com/epson/epos2/cat/CashDepositResult = Com.Epson.Epos2.Cat.CashDepositResult
  <init>()V = .ctor()
  getAccountNumber()Ljava/lang/String; = AccountNumber
  getAdditionalSecurityInformation()Ljava/lang/String; = AdditionalSecurityInformation
  getBalance()I = Balance
  getPaymentCondition()I = PaymentCondition
  getSlipNumber()Ljava/lang/String; = SlipNumber
com/epson/epos2/cat/CashDepositResult = Com.Epson.Epos2.Cat.CashDepositResult
  <init>()V = .ctor()
  getAccountNumber()Ljava/lang/String; = AccountNumber
  getAdditionalSecurityInformation()Ljava/lang/String; = AdditionalSecurityInformation
  getBalance()I = Balance
  getPaymentCondition()I = PaymentCondition
  getSlipNumber()Ljava/lang/String; = SlipNumber
com/epson/epos2/cat/Cat = Com.Epson.Epos2.Cat.Cat
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  EVENT_DISCONNECT = EventDisconnect
  EVENT_RECONNECT = EventReconnect
  EVENT_RECONNECTING = EventReconnecting
  FALSE = False
  PARAM_DEFAULT = ParamDefault
  PAYMENT_CONDITION_BONUS_1 = PaymentConditionBonus1
  PAYMENT_CONDITION_BONUS_2 = PaymentConditionBonus2
  PAYMENT_CONDITION_BONUS_3 = PaymentConditionBonus3
  PAYMENT_CONDITION_BONUS_4 = PaymentConditionBonus4
  PAYMENT_CONDITION_BONUS_5 = PaymentConditionBonus5
  PAYMENT_CONDITION_COMBINATION_1 = PaymentConditionCombination1
  PAYMENT_CONDITION_COMBINATION_2 = PaymentConditionCombination2
  PAYMENT_CONDITION_COMBINATION_3 = PaymentConditionCombination3
  PAYMENT_CONDITION_COMBINATION_4 = PaymentConditionCombination4
  PAYMENT_CONDITION_DEBIT = PaymentConditionDebit
  PAYMENT_CONDITION_ELECTRONIC_MONEY = PaymentConditionElectronicMoney
  PAYMENT_CONDITION_INSTALLMENT_1 = PaymentConditionInstallment1
  PAYMENT_CONDITION_INSTALLMENT_2 = PaymentConditionInstallment2
  PAYMENT_CONDITION_INSTALLMENT_3 = PaymentConditionInstallment3
  PAYMENT_CONDITION_LUMP_SUM = PaymentConditionLumpSum
  PAYMENT_CONDITION_OTHER = PaymentConditionOther
  PAYMENT_CONDITION_REVOLVING = PaymentConditionRevolving
  SERVICE_COMMON = ServiceCommon
  SERVICE_CREDIT = ServiceCredit
  SERVICE_CREDIT_DEBIT = ServiceCreditDebit
  SERVICE_DEBIT = ServiceDebit
  SERVICE_EDY = ServiceEdy
  SERVICE_FISC = ServiceFisc
  SERVICE_ID = ServiceId
  SERVICE_MULTI = ServiceMulti
  SERVICE_NANACO = ServiceNanaco
  SERVICE_NFCPAYMENT = ServiceNfcpayment
  SERVICE_PITAPA = ServicePitapa
  SERVICE_POINT = ServicePoint
  SERVICE_QR = ServiceQr
  SERVICE_QUICPAY = ServiceQuicpay
  SERVICE_SUICA = ServiceSuica
  SERVICE_UNIONPAY = ServiceUnionpay
  SERVICE_WAON = ServiceWaon
  SUE_LOGSTATUS_FULL = SueLogstatusFull
  SUE_LOGSTATUS_NEARFULL = SueLogstatusNearfull
  SUE_LOGSTATUS_OK = SueLogstatusOk
  SUE_POWER_OFF_OFFLINE = SuePowerOffOffline
  SUE_POWER_ONLINE = SuePowerOnline
  TRUE = True
  getAdmin()Ljava/lang/String; = Admin
  getLocation()Ljava/lang/String; = Location
  getOposErrorCode()I = OposErrorCode
  getStauts()Lcom/epson/epos2/cat/CatStatusInfo; = Stauts
  getTimeout()I = Timeout
  setTimeout(I)V = Timeout
  getTrainingMode()I = TrainingMode
  setTrainingMode(I)V = TrainingMode
  accessDailyLog(II)V = AccessDailyLog(int, int)
  accessDailyLog(IILjava/lang/String;Ljava/lang/String;)V = AccessDailyLog(int, int, string, string)
  authorizeCompletion(III)V = AuthorizeCompletion(int, int, int)
  authorizeCompletion(IIIIILjava/lang/String;)V = AuthorizeCompletion(int, int, int, int, int, string)
  authorizeRefund(III)V = AuthorizeRefund(int, int, int)
  authorizeRefund(IIIIILjava/lang/String;)V = AuthorizeRefund(int, int, int, int, int, string)
  authorizeSales(III)V = AuthorizeSales(int, int, int)
  authorizeSales(IIIIILjava/lang/String;)V = AuthorizeSales(int, int, int, int, int, string)
  authorizeVoid(III)V = AuthorizeVoid(int, int, int)
  authorizeVoid(IIIIILjava/lang/String;)V = AuthorizeVoid(int, int, int, int, int, string)
  cashDeposit(III)V = CashDeposit(int, int, int)
  checkConnection(Ljava/lang/String;)V = CheckConnection(string)
  checkHandle()V = CheckHandle()
  clearOutput()V = ClearOutput()
  connect(Ljava/lang/String;I)V = Connect(string, int)
  disconnect()V = Disconnect()
  finalize()V = Finalize()
  initializeCatInstance()V = InitializeCatInstance()
  nativeEpos2AccessDailyLog(JIJJILjava/lang/String;Ljava/lang/String;)I = NativeEpos2AccessDailyLog(long, int, long, long, int, string, string)
  nativeEpos2AuthorizeCompletion(JIJJJJJILjava/lang/String;)I = NativeEpos2AuthorizeCompletion(long, int, long, long, long, long, long, int, string)
  nativeEpos2AuthorizeRefund(JIJJJJJILjava/lang/String;)I = NativeEpos2AuthorizeRefund(long, int, long, long, long, long, long, int, string)
  nativeEpos2AuthorizeSale(JIJJJJJILjava/lang/String;)I = NativeEpos2AuthorizeSale(long, int, long, long, long, long, long, int, string)
  nativeEpos2AuthorizeVoid(JIJJJJJILjava/lang/String;)I = NativeEpos2AuthorizeVoid(long, int, long, long, long, long, long, int, string)
  nativeEpos2CashDeposit(JIJJJI)I = NativeEpos2CashDeposit(long, int, long, long, long, int)
  nativeEpos2CheckConnection(JJLjava/lang/String;)I = NativeEpos2CheckConnection(long, long, string)
  nativeEpos2ClearOutput(J)I = NativeEpos2ClearOutput(long)
  nativeEpos2GetAdmin(J)Ljava/lang/String; = NativeEpos2GetAdmin(long)
  nativeEpos2GetLocation(J)Ljava/lang/String; = NativeEpos2GetLocation(long)
  nativeEpos2GetOposErrorCode(J)I = NativeEpos2GetOposErrorCode(long)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/cat/CatStatusInfo; = NativeEpos2GetStatus(long)
  nativeEpos2ScanCode(JJI)I = NativeEpos2ScanCode(long, long, int)
  nativeEpos2ScanData(JJIJLjava/lang/String;)I = NativeEpos2ScanData(long, long, int, long, string)
  nativeEpos2SendDirectIOCommand(JJJLjava/lang/String;IILjava/lang/String;)I = NativeEpos2SendDirectIOCommand(long, long, long, string, int, int, string)
  onCatCashDeposit(IIILcom/epson/epos2/cat/CashDepositResult;)V = OnCatCashDeposit(int, int, int, Com.Epson.Epos2.Cat.CashDepositResult)
  scanCode()V = ScanCode()
  scanData(ILjava/lang/String;)V = ScanData(int, string)
  sendDirectIOCommand(IILjava/lang/String;I)V = SendDirectIOCommand(int, int, string, int)
  sendDirectIOCommand(IILjava/lang/String;ILjava/lang/String;)V = SendDirectIOCommand(int, int, string, int, string)
  setAccessDailyLogEventListener(Lcom/epson/epos2/cat/AccessDailyLogListener;)V = SetAccessDailyLogEventListener(Com.Epson.Epos2.Cat.IAccessDailyLogListener)
  setAuthorizeCompletionEventListener(Lcom/epson/epos2/cat/AuthorizeCompletionListener;)V = SetAuthorizeCompletionEventListener(Com.Epson.Epos2.Cat.IAuthorizeCompletionListener)
  setAuthorizeRefundEventListener(Lcom/epson/epos2/cat/AuthorizeRefundListener;)V = SetAuthorizeRefundEventListener(Com.Epson.Epos2.Cat.IAuthorizeRefundListener)
  setAuthorizeSalesEventListener(Lcom/epson/epos2/cat/AuthorizeSalesListener;)V = SetAuthorizeSalesEventListener(Com.Epson.Epos2.Cat.IAuthorizeSalesListener)
  setAuthorizeVoidEventListener(Lcom/epson/epos2/cat/AuthorizeVoidListener;)V = SetAuthorizeVoidEventListener(Com.Epson.Epos2.Cat.IAuthorizeVoidListener)
  setCashDepositEventListener(Lcom/epson/epos2/cat/CashDepositListener;)V = SetCashDepositEventListener(Com.Epson.Epos2.Cat.ICashDepositListener)
  setCheckConnectionEventListener(Lcom/epson/epos2/cat/CheckConnectionListener;)V = SetCheckConnectionEventListener(Com.Epson.Epos2.Cat.ICheckConnectionListener)
  setClearOutputEventListener(Lcom/epson/epos2/cat/ClearOutputListener;)V = SetClearOutputEventListener(Com.Epson.Epos2.Cat.IClearOutputListener)
  setConnectionEventListener(Lcom/epson/epos2/ConnectionListener;)V = SetConnectionEventListener(Com.Epson.Epos2.IConnectionListener)
  setDirectIOCommandReplyEventListener(Lcom/epson/epos2/cat/DirectIOCommandReplyListener;)V = SetDirectIOCommandReplyEventListener(Com.Epson.Epos2.Cat.IDirectIOCommandReplyListener)
  setDirectIOEventListener(Lcom/epson/epos2/cat/DirectIOListener;)V = SetDirectIOEventListener(Com.Epson.Epos2.Cat.IDirectIOListener)
  setScanCodeEventListener(Lcom/epson/epos2/cat/ScanCodeListener;)V = SetScanCodeEventListener(Com.Epson.Epos2.Cat.IScanCodeListener)
  setScanDataEventListener(Lcom/epson/epos2/cat/ScanDataListener;)V = SetScanDataEventListener(Com.Epson.Epos2.Cat.IScanDataListener)
  setStatusUpdateEventListener(Lcom/epson/epos2/cat/StatusUpdateListener;)V = SetStatusUpdateEventListener(Com.Epson.Epos2.Cat.IStatusUpdateListener)
com/epson/epos2/cat/Cat = Com.Epson.Epos2.Cat.Cat
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  EVENT_DISCONNECT = EventDisconnect
  EVENT_RECONNECT = EventReconnect
  EVENT_RECONNECTING = EventReconnecting
  FALSE = False
  PARAM_DEFAULT = ParamDefault
  PAYMENT_CONDITION_BONUS_1 = PaymentConditionBonus1
  PAYMENT_CONDITION_BONUS_2 = PaymentConditionBonus2
  PAYMENT_CONDITION_BONUS_3 = PaymentConditionBonus3
  PAYMENT_CONDITION_BONUS_4 = PaymentConditionBonus4
  PAYMENT_CONDITION_BONUS_5 = PaymentConditionBonus5
  PAYMENT_CONDITION_COMBINATION_1 = PaymentConditionCombination1
  PAYMENT_CONDITION_COMBINATION_2 = PaymentConditionCombination2
  PAYMENT_CONDITION_COMBINATION_3 = PaymentConditionCombination3
  PAYMENT_CONDITION_COMBINATION_4 = PaymentConditionCombination4
  PAYMENT_CONDITION_DEBIT = PaymentConditionDebit
  PAYMENT_CONDITION_ELECTRONIC_MONEY = PaymentConditionElectronicMoney
  PAYMENT_CONDITION_INSTALLMENT_1 = PaymentConditionInstallment1
  PAYMENT_CONDITION_INSTALLMENT_2 = PaymentConditionInstallment2
  PAYMENT_CONDITION_INSTALLMENT_3 = PaymentConditionInstallment3
  PAYMENT_CONDITION_LUMP_SUM = PaymentConditionLumpSum
  PAYMENT_CONDITION_OTHER = PaymentConditionOther
  PAYMENT_CONDITION_REVOLVING = PaymentConditionRevolving
  SERVICE_COMMON = ServiceCommon
  SERVICE_CREDIT = ServiceCredit
  SERVICE_CREDIT_DEBIT = ServiceCreditDebit
  SERVICE_DEBIT = ServiceDebit
  SERVICE_EDY = ServiceEdy
  SERVICE_FISC = ServiceFisc
  SERVICE_ID = ServiceId
  SERVICE_MULTI = ServiceMulti
  SERVICE_NANACO = ServiceNanaco
  SERVICE_NFCPAYMENT = ServiceNfcpayment
  SERVICE_PITAPA = ServicePitapa
  SERVICE_POINT = ServicePoint
  SERVICE_QR = ServiceQr
  SERVICE_QUICPAY = ServiceQuicpay
  SERVICE_SUICA = ServiceSuica
  SERVICE_UNIONPAY = ServiceUnionpay
  SERVICE_WAON = ServiceWaon
  SUE_LOGSTATUS_FULL = SueLogstatusFull
  SUE_LOGSTATUS_NEARFULL = SueLogstatusNearfull
  SUE_LOGSTATUS_OK = SueLogstatusOk
  SUE_POWER_OFF_OFFLINE = SuePowerOffOffline
  SUE_POWER_ONLINE = SuePowerOnline
  TRUE = True
  getAdmin()Ljava/lang/String; = Admin
  getLocation()Ljava/lang/String; = Location
  getOposErrorCode()I = OposErrorCode
  getStauts()Lcom/epson/epos2/cat/CatStatusInfo; = Stauts
  getTimeout()I = Timeout
  setTimeout(I)V = Timeout
  getTrainingMode()I = TrainingMode
  setTrainingMode(I)V = TrainingMode
  accessDailyLog(II)V = AccessDailyLog(int, int)
  accessDailyLog(IILjava/lang/String;Ljava/lang/String;)V = AccessDailyLog(int, int, string, string)
  authorizeCompletion(III)V = AuthorizeCompletion(int, int, int)
  authorizeCompletion(IIIIILjava/lang/String;)V = AuthorizeCompletion(int, int, int, int, int, string)
  authorizeRefund(III)V = AuthorizeRefund(int, int, int)
  authorizeRefund(IIIIILjava/lang/String;)V = AuthorizeRefund(int, int, int, int, int, string)
  authorizeSales(III)V = AuthorizeSales(int, int, int)
  authorizeSales(IIIIILjava/lang/String;)V = AuthorizeSales(int, int, int, int, int, string)
  authorizeVoid(III)V = AuthorizeVoid(int, int, int)
  authorizeVoid(IIIIILjava/lang/String;)V = AuthorizeVoid(int, int, int, int, int, string)
  cashDeposit(III)V = CashDeposit(int, int, int)
  checkConnection(Ljava/lang/String;)V = CheckConnection(string)
  checkHandle()V = CheckHandle()
  clearOutput()V = ClearOutput()
  connect(Ljava/lang/String;I)V = Connect(string, int)
  disconnect()V = Disconnect()
  initializeCatInstance()V = InitializeCatInstance()
  nativeEpos2AccessDailyLog(JIJJILjava/lang/String;Ljava/lang/String;)I = NativeEpos2AccessDailyLog(long, int, long, long, int, string, string)
  nativeEpos2AuthorizeCompletion(JIJJJJJILjava/lang/String;)I = NativeEpos2AuthorizeCompletion(long, int, long, long, long, long, long, int, string)
  nativeEpos2AuthorizeRefund(JIJJJJJILjava/lang/String;)I = NativeEpos2AuthorizeRefund(long, int, long, long, long, long, long, int, string)
  nativeEpos2AuthorizeSale(JIJJJJJILjava/lang/String;)I = NativeEpos2AuthorizeSale(long, int, long, long, long, long, long, int, string)
  nativeEpos2AuthorizeVoid(JIJJJJJILjava/lang/String;)I = NativeEpos2AuthorizeVoid(long, int, long, long, long, long, long, int, string)
  nativeEpos2CashDeposit(JIJJJI)I = NativeEpos2CashDeposit(long, int, long, long, long, int)
  nativeEpos2CheckConnection(JJLjava/lang/String;)I = NativeEpos2CheckConnection(long, long, string)
  nativeEpos2ClearOutput(J)I = NativeEpos2ClearOutput(long)
  nativeEpos2GetAdmin(J)Ljava/lang/String; = NativeEpos2GetAdmin(long)
  nativeEpos2GetLocation(J)Ljava/lang/String; = NativeEpos2GetLocation(long)
  nativeEpos2GetOposErrorCode(J)I = NativeEpos2GetOposErrorCode(long)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/cat/CatStatusInfo; = NativeEpos2GetStatus(long)
  nativeEpos2ScanCode(JJI)I = NativeEpos2ScanCode(long, long, int)
  nativeEpos2ScanData(JJIJLjava/lang/String;)I = NativeEpos2ScanData(long, long, int, long, string)
  nativeEpos2SendDirectIOCommand(JJJLjava/lang/String;IILjava/lang/String;)I = NativeEpos2SendDirectIOCommand(long, long, long, string, int, int, string)
  onCatCashDeposit(IIILcom/epson/epos2/cat/CashDepositResult;)V = OnCatCashDeposit(int, int, int, Com.Epson.Epos2.Cat.CashDepositResult)
  scanCode()V = ScanCode()
  scanData(ILjava/lang/String;)V = ScanData(int, string)
  sendDirectIOCommand(IILjava/lang/String;I)V = SendDirectIOCommand(int, int, string, int)
  sendDirectIOCommand(IILjava/lang/String;ILjava/lang/String;)V = SendDirectIOCommand(int, int, string, int, string)
  setAccessDailyLogEventListener(Lcom/epson/epos2/cat/AccessDailyLogListener;)V = SetAccessDailyLogEventListener(Com.Epson.Epos2.Cat.IAccessDailyLogListener)
  setAuthorizeCompletionEventListener(Lcom/epson/epos2/cat/AuthorizeCompletionListener;)V = SetAuthorizeCompletionEventListener(Com.Epson.Epos2.Cat.IAuthorizeCompletionListener)
  setAuthorizeRefundEventListener(Lcom/epson/epos2/cat/AuthorizeRefundListener;)V = SetAuthorizeRefundEventListener(Com.Epson.Epos2.Cat.IAuthorizeRefundListener)
  setAuthorizeSalesEventListener(Lcom/epson/epos2/cat/AuthorizeSalesListener;)V = SetAuthorizeSalesEventListener(Com.Epson.Epos2.Cat.IAuthorizeSalesListener)
  setAuthorizeVoidEventListener(Lcom/epson/epos2/cat/AuthorizeVoidListener;)V = SetAuthorizeVoidEventListener(Com.Epson.Epos2.Cat.IAuthorizeVoidListener)
  setCashDepositEventListener(Lcom/epson/epos2/cat/CashDepositListener;)V = SetCashDepositEventListener(Com.Epson.Epos2.Cat.ICashDepositListener)
  setCheckConnectionEventListener(Lcom/epson/epos2/cat/CheckConnectionListener;)V = SetCheckConnectionEventListener(Com.Epson.Epos2.Cat.ICheckConnectionListener)
  setClearOutputEventListener(Lcom/epson/epos2/cat/ClearOutputListener;)V = SetClearOutputEventListener(Com.Epson.Epos2.Cat.IClearOutputListener)
  setConnectionEventListener(Lcom/epson/epos2/ConnectionListener;)V = SetConnectionEventListener(Com.Epson.Epos2.IConnectionListener)
  setDirectIOCommandReplyEventListener(Lcom/epson/epos2/cat/DirectIOCommandReplyListener;)V = SetDirectIOCommandReplyEventListener(Com.Epson.Epos2.Cat.IDirectIOCommandReplyListener)
  setDirectIOEventListener(Lcom/epson/epos2/cat/DirectIOListener;)V = SetDirectIOEventListener(Com.Epson.Epos2.Cat.IDirectIOListener)
  setScanCodeEventListener(Lcom/epson/epos2/cat/ScanCodeListener;)V = SetScanCodeEventListener(Com.Epson.Epos2.Cat.IScanCodeListener)
  setScanDataEventListener(Lcom/epson/epos2/cat/ScanDataListener;)V = SetScanDataEventListener(Com.Epson.Epos2.Cat.IScanDataListener)
  setStatusUpdateEventListener(Lcom/epson/epos2/cat/StatusUpdateListener;)V = SetStatusUpdateEventListener(Com.Epson.Epos2.Cat.IStatusUpdateListener)
com/epson/epos2/cat/CatStatusInfo = Com.Epson.Epos2.Cat.CatStatusInfo
  <init>()V = .ctor()
  getConnection()I = Connection
com/epson/epos2/cat/CatStatusInfo = Com.Epson.Epos2.Cat.CatStatusInfo
  <init>()V = .ctor()
  getConnection()I = Connection
com/epson/epos2/cat/CheckConnectionListener = Com.Epson.Epos2.Cat.ICheckConnectionListener
  onCatCheckConnection(Lcom/epson/epos2/cat/Cat;ILjava/lang/String;)V = OnCatCheckConnection(Com.Epson.Epos2.Cat.Cat, int, string)
com/epson/epos2/cat/CheckConnectionListener = Com.Epson.Epos2.Cat.ICheckConnectionListener
  onCatCheckConnection(Lcom/epson/epos2/cat/Cat;ILjava/lang/String;)V = OnCatCheckConnection(Com.Epson.Epos2.Cat.Cat, int, string)
com/epson/epos2/cat/ClearOutputListener = Com.Epson.Epos2.Cat.IClearOutputListener
  onCatClearOutput(Lcom/epson/epos2/cat/Cat;II)V = OnCatClearOutput(Com.Epson.Epos2.Cat.Cat, int, int)
com/epson/epos2/cat/ClearOutputListener = Com.Epson.Epos2.Cat.IClearOutputListener
  onCatClearOutput(Lcom/epson/epos2/cat/Cat;II)V = OnCatClearOutput(Com.Epson.Epos2.Cat.Cat, int, int)
com/epson/epos2/cat/DailyLog = Com.Epson.Epos2.Cat.DailyLog
  <init>()V = .ctor()
  getKid()Ljava/lang/String; = Kid
  getSalesAmount()J = SalesAmount
  getSalesCount()J = SalesCount
  getVoidAmount()J = VoidAmount
  getVoidCount()J = VoidCount
com/epson/epos2/cat/DailyLog = Com.Epson.Epos2.Cat.DailyLog
  <init>()V = .ctor()
  getKid()Ljava/lang/String; = Kid
  getSalesAmount()J = SalesAmount
  getSalesCount()J = SalesCount
  getVoidAmount()J = VoidAmount
  getVoidCount()J = VoidCount
com/epson/epos2/cat/DirectIOCommandReplyListener = Com.Epson.Epos2.Cat.IDirectIOCommandReplyListener
  onCatDirectIOCommandReply(Lcom/epson/epos2/cat/Cat;IIILjava/lang/String;IILcom/epson/epos2/cat/DirectIOResult;)V = OnCatDirectIOCommandReply(Com.Epson.Epos2.Cat.Cat, int, int, int, string, int, int, Com.Epson.Epos2.Cat.DirectIOResult)
com/epson/epos2/cat/DirectIOCommandReplyListener = Com.Epson.Epos2.Cat.IDirectIOCommandReplyListener
  onCatDirectIOCommandReply(Lcom/epson/epos2/cat/Cat;IIILjava/lang/String;IILcom/epson/epos2/cat/DirectIOResult;)V = OnCatDirectIOCommandReply(Com.Epson.Epos2.Cat.Cat, int, int, int, string, int, int, Com.Epson.Epos2.Cat.DirectIOResult)
com/epson/epos2/cat/DirectIOListener = Com.Epson.Epos2.Cat.IDirectIOListener
  onCatDirectIO(Lcom/epson/epos2/cat/Cat;IILjava/lang/String;)V = OnCatDirectIO(Com.Epson.Epos2.Cat.Cat, int, int, string)
com/epson/epos2/cat/DirectIOListener = Com.Epson.Epos2.Cat.IDirectIOListener
  onCatDirectIO(Lcom/epson/epos2/cat/Cat;IILjava/lang/String;)V = OnCatDirectIO(Com.Epson.Epos2.Cat.Cat, int, int, string)
com/epson/epos2/cat/DirectIOResult = Com.Epson.Epos2.Cat.DirectIOResult
  <init>()V = .ctor()
  getAccountNumber()Ljava/lang/String; = AccountNumber
  getAdditionalSecurityInformation()Ljava/lang/String; = AdditionalSecurityInformation
  getBalance()I = Balance
  getPaymentCondition()I = PaymentCondition
  getSettledAmount()I = SettledAmount
  getSlipNumber()Ljava/lang/String; = SlipNumber
  getTransactionNumber()Ljava/lang/String; = TransactionNumber
com/epson/epos2/cat/DirectIOResult = Com.Epson.Epos2.Cat.DirectIOResult
  <init>()V = .ctor()
  getAccountNumber()Ljava/lang/String; = AccountNumber
  getAdditionalSecurityInformation()Ljava/lang/String; = AdditionalSecurityInformation
  getBalance()I = Balance
  getPaymentCondition()I = PaymentCondition
  getSettledAmount()I = SettledAmount
  getSlipNumber()Ljava/lang/String; = SlipNumber
  getTransactionNumber()Ljava/lang/String; = TransactionNumber
com/epson/epos2/cat/Epos2CallbackCode = Com.Epson.Epos2.Cat.Epos2CallbackCode
  <init>()V = .ctor()
  CODE_ABORT_FAILURE = CodeAbortFailure
  CODE_BUSY = CodeBusy
  CODE_DISAGREEMENT = CodeDisagreement
  CODE_ERR_CENTER = CodeErrCenter
  CODE_ERR_COMMAND = CodeErrCommand
  CODE_ERR_DEVICE = CodeErrDevice
  CODE_ERR_FAILURE = CodeErrFailure
  CODE_ERR_OPOSCODE = CodeErrOposcode
  CODE_ERR_PARAM = CodeErrParam
  CODE_ERR_SYSTEM = CodeErrSystem
  CODE_ERR_TIMEOUT = CodeErrTimeout
  CODE_EXCEEDING_LIMIT = CodeExceedingLimit
  CODE_INVALID_CARD = CodeInvalidCard
  CODE_RESET = CodeReset
  CODE_SUCCESS = CodeSuccess
com/epson/epos2/cat/Epos2CallbackCode = Com.Epson.Epos2.Cat.Epos2CallbackCode
  <init>()V = .ctor()
  CODE_ABORT_FAILURE = CodeAbortFailure
  CODE_BUSY = CodeBusy
  CODE_DISAGREEMENT = CodeDisagreement
  CODE_ERR_CENTER = CodeErrCenter
  CODE_ERR_COMMAND = CodeErrCommand
  CODE_ERR_DEVICE = CodeErrDevice
  CODE_ERR_FAILURE = CodeErrFailure
  CODE_ERR_OPOSCODE = CodeErrOposcode
  CODE_ERR_PARAM = CodeErrParam
  CODE_ERR_SYSTEM = CodeErrSystem
  CODE_ERR_TIMEOUT = CodeErrTimeout
  CODE_EXCEEDING_LIMIT = CodeExceedingLimit
  CODE_INVALID_CARD = CodeInvalidCard
  CODE_RESET = CodeReset
  CODE_SUCCESS = CodeSuccess
com/epson/epos2/cat/ScanCodeListener = Com.Epson.Epos2.Cat.IScanCodeListener
  onCatScanCode(Lcom/epson/epos2/cat/Cat;ILjava/lang/String;)V = OnCatScanCode(Com.Epson.Epos2.Cat.Cat, int, string)
com/epson/epos2/cat/ScanCodeListener = Com.Epson.Epos2.Cat.IScanCodeListener
  onCatScanCode(Lcom/epson/epos2/cat/Cat;ILjava/lang/String;)V = OnCatScanCode(Com.Epson.Epos2.Cat.Cat, int, string)
com/epson/epos2/cat/ScanDataListener = Com.Epson.Epos2.Cat.IScanDataListener
  onCatScanData(Lcom/epson/epos2/cat/Cat;ILjava/lang/String;)V = OnCatScanData(Com.Epson.Epos2.Cat.Cat, int, string)
com/epson/epos2/cat/ScanDataListener = Com.Epson.Epos2.Cat.IScanDataListener
  onCatScanData(Lcom/epson/epos2/cat/Cat;ILjava/lang/String;)V = OnCatScanData(Com.Epson.Epos2.Cat.Cat, int, string)
com/epson/epos2/cat/StatusUpdateListener = Com.Epson.Epos2.Cat.IStatusUpdateListener
  onCatStatusUpdate(Lcom/epson/epos2/cat/Cat;I)V = OnCatStatusUpdate(Com.Epson.Epos2.Cat.Cat, int)
com/epson/epos2/cat/StatusUpdateListener = Com.Epson.Epos2.Cat.IStatusUpdateListener
  onCatStatusUpdate(Lcom/epson/epos2/cat/Cat;I)V = OnCatStatusUpdate(Com.Epson.Epos2.Cat.Cat, int)
com/epson/epos2/commbox/CommBox = Com.Epson.Epos2.Commbox.CommBox
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  EVENT_DISCONNECT = EventDisconnect
  EVENT_RECONNECT = EventReconnect
  EVENT_RECONNECTING = EventReconnecting
  FALSE = False
  PARAM_DEFAULT = ParamDefault
  TRUE = True
  getAdmin()Ljava/lang/String; = Admin
  getLocation()Ljava/lang/String; = Location
  getStatus()Lcom/epson/epos2/commbox/CommBoxStatusInfo; = Status
  checkHandle()V = CheckHandle()
  connect(Ljava/lang/String;ILjava/lang/String;)V = Connect(string, int, string)
  disconnect()V = Disconnect()
  finalize()V = Finalize()
  getCommHistory(Lcom/epson/epos2/commbox/GetCommHistoryCallback;)V = GetCommHistory(Com.Epson.Epos2.Commbox.IGetCommHistoryCallback)
  initializeCommBoxInstance()V = InitializeCommBoxInstance()
  nativeEpos2GetCommHistory(JLcom/epson/epos2/commbox/CommBox$CommBoxHistoryCallbackAdapter;)I = NativeEpos2GetCommHistory(long, Com.Epson.Epos2.Commbox.CommBox.CommBoxHistoryCallbackAdapter)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/commbox/CommBoxStatusInfo; = NativeEpos2GetStatus(long)
  nativeEpos2SendMessage(JLjava/lang/String;Ljava/lang/String;Lcom/epson/epos2/commbox/CommBox$CommBoxSendMessageCallbackAdapter;)I = NativeEpos2SendMessage(long, string, string, Com.Epson.Epos2.Commbox.CommBox.CommBoxSendMessageCallbackAdapter)
  onCommBoxReceive(JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = OnCommBoxReceive(long, string, string, string)
  sendMessage(Ljava/lang/String;Ljava/lang/String;Lcom/epson/epos2/commbox/SendMessageCallback;)V = SendMessage(string, string, Com.Epson.Epos2.Commbox.ISendMessageCallback)
  setConnectionEventListener(Lcom/epson/epos2/ConnectionListener;)V = SetConnectionEventListener(Com.Epson.Epos2.IConnectionListener)
  setReceiveEventListener(Lcom/epson/epos2/commbox/ReceiveListener;)V = SetReceiveEventListener(Com.Epson.Epos2.Commbox.IReceiveListener)
com/epson/epos2/commbox/CommBox = Com.Epson.Epos2.Commbox.CommBox
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  EVENT_DISCONNECT = EventDisconnect
  EVENT_RECONNECT = EventReconnect
  EVENT_RECONNECTING = EventReconnecting
  FALSE = False
  PARAM_DEFAULT = ParamDefault
  TRUE = True
  getAdmin()Ljava/lang/String; = Admin
  getLocation()Ljava/lang/String; = Location
  getStatus()Lcom/epson/epos2/commbox/CommBoxStatusInfo; = Status
  checkHandle()V = CheckHandle()
  connect(Ljava/lang/String;ILjava/lang/String;)V = Connect(string, int, string)
  disconnect()V = Disconnect()
  getCommHistory(Lcom/epson/epos2/commbox/GetCommHistoryCallback;)V = GetCommHistory(Com.Epson.Epos2.Commbox.IGetCommHistoryCallback)
  initializeCommBoxInstance()V = InitializeCommBoxInstance()
  nativeEpos2GetCommHistory(JLcom/epson/epos2/commbox/CommBox$CommBoxHistoryCallbackAdapter;)I = NativeEpos2GetCommHistory(long, Com.Epson.Epos2.Commbox.CommBox.CommBoxHistoryCallbackAdapter)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/commbox/CommBoxStatusInfo; = NativeEpos2GetStatus(long)
  nativeEpos2SendMessage(JLjava/lang/String;Ljava/lang/String;Lcom/epson/epos2/commbox/CommBox$CommBoxSendMessageCallbackAdapter;)I = NativeEpos2SendMessage(long, string, string, Com.Epson.Epos2.Commbox.CommBox.CommBoxSendMessageCallbackAdapter)
  onCommBoxReceive(JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = OnCommBoxReceive(long, string, string, string)
  sendMessage(Ljava/lang/String;Ljava/lang/String;Lcom/epson/epos2/commbox/SendMessageCallback;)V = SendMessage(string, string, Com.Epson.Epos2.Commbox.ISendMessageCallback)
  setConnectionEventListener(Lcom/epson/epos2/ConnectionListener;)V = SetConnectionEventListener(Com.Epson.Epos2.IConnectionListener)
  setReceiveEventListener(Lcom/epson/epos2/commbox/ReceiveListener;)V = SetReceiveEventListener(Com.Epson.Epos2.Commbox.IReceiveListener)
com/epson/epos2/commbox/CommBoxStatusInfo = Com.Epson.Epos2.Commbox.CommBoxStatusInfo
  <init>()V = .ctor()
  getConnection()I = Connection
com/epson/epos2/commbox/CommBoxStatusInfo = Com.Epson.Epos2.Commbox.CommBoxStatusInfo
  <init>()V = .ctor()
  getConnection()I = Connection
com/epson/epos2/commbox/GetCommHistoryCallback = Com.Epson.Epos2.Commbox.IGetCommHistoryCallback
  onGetCommHistory(Lcom/epson/epos2/commbox/CommBox;ILjava/util/ArrayList;)V = OnGetCommHistory(Com.Epson.Epos2.Commbox.CommBox, int, System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string, string>>)
com/epson/epos2/commbox/GetCommHistoryCallback = Com.Epson.Epos2.Commbox.IGetCommHistoryCallback
  onGetCommHistory(Lcom/epson/epos2/commbox/CommBox;ILjava/util/ArrayList;)V = OnGetCommHistory(Com.Epson.Epos2.Commbox.CommBox, int, System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string, string>>)
com/epson/epos2/commbox/ReceiveListener = Com.Epson.Epos2.Commbox.IReceiveListener
  onCommBoxReceive(Lcom/epson/epos2/commbox/CommBox;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = OnCommBoxReceive(Com.Epson.Epos2.Commbox.CommBox, string, string, string)
com/epson/epos2/commbox/ReceiveListener = Com.Epson.Epos2.Commbox.IReceiveListener
  onCommBoxReceive(Lcom/epson/epos2/commbox/CommBox;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = OnCommBoxReceive(Com.Epson.Epos2.Commbox.CommBox, string, string, string)
com/epson/epos2/commbox/SendMessageCallback = Com.Epson.Epos2.Commbox.ISendMessageCallback
  onCommBoxSendMessage(Lcom/epson/epos2/commbox/CommBox;II)V = OnCommBoxSendMessage(Com.Epson.Epos2.Commbox.CommBox, int, int)
com/epson/epos2/commbox/SendMessageCallback = Com.Epson.Epos2.Commbox.ISendMessageCallback
  onCommBoxSendMessage(Lcom/epson/epos2/commbox/CommBox;II)V = OnCommBoxSendMessage(Com.Epson.Epos2.Commbox.CommBox, int, int)
com/epson/epos2/ConnectionListener = Com.Epson.Epos2.IConnectionListener
  EVENT_DISCONNECT = EventDisconnect
  EVENT_RECONNECT = EventReconnect
  EVENT_RECONNECTING = EventReconnecting
  onConnection(Ljava/lang/Object;I)V = OnConnection(Java.Lang.Object, int)
com/epson/epos2/ConnectionListener = Com.Epson.Epos2.IConnectionListener
  EVENT_DISCONNECT = EventDisconnect
  EVENT_RECONNECT = EventReconnect
  EVENT_RECONNECTING = EventReconnecting
  onConnection(Ljava/lang/Object;I)V = OnConnection(Java.Lang.Object, int)
com/epson/epos2/discovery/DeviceInfo = Com.Epson.Epos2.Discovery.DeviceInfo
  <init>()V = .ctor()
  getBdAddress()Ljava/lang/String; = BdAddress
  getDeviceName()Ljava/lang/String; = DeviceName
  getDeviceType()I = DeviceType
  getIpAddress()Ljava/lang/String; = IpAddress
  getLeBdAddress()Ljava/lang/String; = LeBdAddress
  getMacAddress()Ljava/lang/String; = MacAddress
  getTarget()Ljava/lang/String; = Target
  setBdAddress(Ljava/lang/String;)V = SetBdAddress(string)
  setDeviceName(Ljava/lang/String;)V = SetDeviceName(string)
  setDeviceType(I)V = SetDeviceType(int)
  setIpAddress(Ljava/lang/String;)V = SetIpAddress(string)
  setLeBdAddress(Ljava/lang/String;)V = SetLeBdAddress(string)
  setMacAddress(Ljava/lang/String;)V = SetMacAddress(string)
  setTarget(Ljava/lang/String;)V = SetTarget(string)
com/epson/epos2/discovery/DeviceInfo = Com.Epson.Epos2.Discovery.DeviceInfo
  <init>()V = .ctor()
  getBdAddress()Ljava/lang/String; = BdAddress
  getDeviceName()Ljava/lang/String; = DeviceName
  getDeviceType()I = DeviceType
  getIpAddress()Ljava/lang/String; = IpAddress
  getLeBdAddress()Ljava/lang/String; = LeBdAddress
  getMacAddress()Ljava/lang/String; = MacAddress
  getTarget()Ljava/lang/String; = Target
  setBdAddress(Ljava/lang/String;)V = SetBdAddress(string)
  setDeviceName(Ljava/lang/String;)V = SetDeviceName(string)
  setDeviceType(I)V = SetDeviceType(int)
  setIpAddress(Ljava/lang/String;)V = SetIpAddress(string)
  setLeBdAddress(Ljava/lang/String;)V = SetLeBdAddress(string)
  setMacAddress(Ljava/lang/String;)V = SetMacAddress(string)
  setTarget(Ljava/lang/String;)V = SetTarget(string)
com/epson/epos2/discovery/Discovery = Com.Epson.Epos2.Discovery.Discovery
  <init>()V = .ctor()
  FALSE = False
  FILTER_NAME = FilterName
  FILTER_NONE = FilterNone
  MODEL_ALL = ModelAll
  PORTTYPE_ALL = PorttypeAll
  PORTTYPE_BLUETOOTH = PorttypeBluetooth
  PORTTYPE_BLUETOOTH_LE = PorttypeBluetoothLe
  PORTTYPE_TCP = PorttypeTcp
  PORTTYPE_USB = PorttypeUsb
  TRUE = True
  TYPE_ALL = TypeAll
  TYPE_CAT = TypeCat
  TYPE_CCHANGER = TypeCchanger
  TYPE_DISPLAY = TypeDisplay
  TYPE_GFE = TypeGfe
  TYPE_HYBRID_PRINTER = TypeHybridPrinter
  TYPE_KEYBOARD = TypeKeyboard
  TYPE_MSR = TypeMsr
  TYPE_OTHER_PERIPHERAL = TypeOtherPeripheral
  TYPE_POS_KEYBOARD = TypePosKeyboard
  TYPE_PRINTER = TypePrinter
  TYPE_SCANNER = TypeScanner
  TYPE_SERIAL = TypeSerial
  onDiscovery(Lcom/epson/epos2/discovery/DeviceInfo;)V = OnDiscovery(Com.Epson.Epos2.Discovery.DeviceInfo)
  start(Landroid/content/Context;Lcom/epson/epos2/discovery/FilterOption;Lcom/epson/epos2/discovery/DiscoveryListener;)V = Start(Android.Content.Context, Com.Epson.Epos2.Discovery.FilterOption, Com.Epson.Epos2.Discovery.IDiscoveryListener)
  stop()V = Stop()
com/epson/epos2/discovery/Discovery = Com.Epson.Epos2.Discovery.Discovery
  <init>()V = .ctor()
  FALSE = False
  FILTER_NAME = FilterName
  FILTER_NONE = FilterNone
  MODEL_ALL = ModelAll
  PORTTYPE_ALL = PorttypeAll
  PORTTYPE_BLUETOOTH = PorttypeBluetooth
  PORTTYPE_BLUETOOTH_LE = PorttypeBluetoothLe
  PORTTYPE_TCP = PorttypeTcp
  PORTTYPE_USB = PorttypeUsb
  TRUE = True
  TYPE_ALL = TypeAll
  TYPE_CAT = TypeCat
  TYPE_CCHANGER = TypeCchanger
  TYPE_DISPLAY = TypeDisplay
  TYPE_GFE = TypeGfe
  TYPE_HYBRID_PRINTER = TypeHybridPrinter
  TYPE_KEYBOARD = TypeKeyboard
  TYPE_MSR = TypeMsr
  TYPE_OTHER_PERIPHERAL = TypeOtherPeripheral
  TYPE_POS_KEYBOARD = TypePosKeyboard
  TYPE_PRINTER = TypePrinter
  TYPE_SCANNER = TypeScanner
  TYPE_SERIAL = TypeSerial
  onDiscovery(Lcom/epson/epos2/discovery/DeviceInfo;)V = OnDiscovery(Com.Epson.Epos2.Discovery.DeviceInfo)
  start(Landroid/content/Context;Lcom/epson/epos2/discovery/FilterOption;Lcom/epson/epos2/discovery/DiscoveryListener;)V = Start(Android.Content.Context, Com.Epson.Epos2.Discovery.FilterOption, Com.Epson.Epos2.Discovery.IDiscoveryListener)
  stop()V = Stop()
com/epson/epos2/discovery/DiscoveryListener = Com.Epson.Epos2.Discovery.IDiscoveryListener
  onDiscovery(Lcom/epson/epos2/discovery/DeviceInfo;)V = OnDiscovery(Com.Epson.Epos2.Discovery.DeviceInfo)
com/epson/epos2/discovery/DiscoveryListener = Com.Epson.Epos2.Discovery.IDiscoveryListener
  onDiscovery(Lcom/epson/epos2/discovery/DeviceInfo;)V = OnDiscovery(Com.Epson.Epos2.Discovery.DeviceInfo)
com/epson/epos2/discovery/FilterOption = Com.Epson.Epos2.Discovery.FilterOption
  <init>()V = .ctor()
  getBondedDevices()I = BondedDevices
  setBondedDevices(I)V = BondedDevices
  getBroadcast()Ljava/lang/String; = Broadcast
  setBroadcast(Ljava/lang/String;)V = Broadcast
  getDeviceModel()I = DeviceModel
  setDeviceModel(I)V = DeviceModel
  getDeviceType()I = DeviceType
  setDeviceType(I)V = DeviceType
  getEpsonFilter()I = EpsonFilter
  setEpsonFilter(I)V = EpsonFilter
  getPortType()I = PortType
  setPortType(I)V = PortType
  getUsbDeviceName()I = UsbDeviceName
  setUsbDeviceName(I)V = UsbDeviceName
com/epson/epos2/discovery/FilterOption = Com.Epson.Epos2.Discovery.FilterOption
  <init>()V = .ctor()
  getBondedDevices()I = BondedDevices
  setBondedDevices(I)V = BondedDevices
  getBroadcast()Ljava/lang/String; = Broadcast
  setBroadcast(Ljava/lang/String;)V = Broadcast
  getDeviceModel()I = DeviceModel
  setDeviceModel(I)V = DeviceModel
  getDeviceType()I = DeviceType
  setDeviceType(I)V = DeviceType
  getEpsonFilter()I = EpsonFilter
  setEpsonFilter(I)V = EpsonFilter
  getPortType()I = PortType
  setPortType(I)V = PortType
  getUsbDeviceName()I = UsbDeviceName
  setUsbDeviceName(I)V = UsbDeviceName
com/epson/epos2/Epos2CallbackCode = Com.Epson.Epos2.Epos2CallbackCode
  <init>()V = .ctor()
  CODE_CANCELED = CodeCanceled
  CODE_ERR_AUTORECOVER = CodeErrAutorecover
  CODE_ERR_BATTERY_LOW = CodeErrBatteryLow
  CODE_ERR_CANCEL_FAILED = CodeErrCancelFailed
  CODE_ERR_CONNECT = CodeErrConnect
  CODE_ERR_COVER_OPEN = CodeErrCoverOpen
  CODE_ERR_CUTTER = CodeErrCutter
  CODE_ERR_DATA_CORRUPTED = CodeErrDataCorrupted
  CODE_ERR_DEVICE_BUSY = CodeErrDeviceBusy
  CODE_ERR_DIFFERENT_MODEL = CodeErrDifferentModel
  CODE_ERR_DIFFERENT_VERSION = CodeErrDifferentVersion
  CODE_ERR_DISCONNECT = CodeErrDisconnect
  CODE_ERR_EMPTY = CodeErrEmpty
  CODE_ERR_FAILURE = CodeErrFailure
  CODE_ERR_GET_JSON_SIZE = CodeErrGetJsonSize
  CODE_ERR_ILLEGAL = CodeErrIllegal
  CODE_ERR_ILLEGAL_LENGTH = CodeErrIllegalLength
  CODE_ERR_INSERTED = CodeErrInserted
  CODE_ERR_IN_USE = CodeErrInUse
  CODE_ERR_INVALID_FIRM_VERSION = CodeErrInvalidFirmVersion
  CODE_ERR_INVALID_PASSWORD = CodeErrInvalidPassword
  CODE_ERR_INVALID_WINDOW = CodeErrInvalidWindow
  CODE_ERR_IO = CodeErrIo
  CODE_ERR_JOB_NOT_FOUND = CodeErrJobNotFound
  CODE_ERR_JSON_FORMAT = CodeErrJsonFormat
  CODE_ERR_MECHANICAL = CodeErrMechanical
  CODE_ERR_MEMORY = CodeErrMemory
  CODE_ERR_NOISE_DETECTED = CodeErrNoiseDetected
  CODE_ERR_NO_MAGNETIC_DATA = CodeErrNoMagneticData
  CODE_ERR_NO_MICR_DATA = CodeErrNoMicrData
  CODE_ERR_NOT_FOUND = CodeErrNotFound
  CODE_ERR_PAPER_JAM = CodeErrPaperJam
  CODE_ERR_PAPER_PULLED_OUT = CodeErrPaperPulledOut
  CODE_ERR_PAPER_TYPE = CodeErrPaperType
  CODE_ERR_PARAM = CodeErrParam
  CODE_ERR_PORT = CodeErrPort
  CODE_ERR_PROCESSING = CodeErrProcessing
  CODE_ERR_READ = CodeErrRead
  CODE_ERR_RECOGNITION = CodeErrRecognition
  CODE_ERR_RECOVERY_FAILURE = CodeErrRecoveryFailure
  CODE_ERR_REQUEST_ENTITY_TOO_LARGE = CodeErrRequestEntityTooLarge
  CODE_ERR_SPOOLER = CodeErrSpooler
  CODE_ERR_SSL_CERTIFICATION = CodeErrSslCertification
  CODE_ERR_SYSTEM = CodeErrSystem
  CODE_ERR_TIMEOUT = CodeErrTimeout
  CODE_ERR_TOO_MANY_REQUESTS = CodeErrTooManyRequests
  CODE_ERR_UNRECOVERABLE = CodeErrUnrecoverable
  CODE_ERR_WAIT_INSERTION = CodeErrWaitInsertion
  CODE_ERR_WAIT_REMOVAL = CodeErrWaitRemoval
  CODE_NO_PASSWORD = CodeNoPassword
  CODE_PRINTING = CodePrinting
  CODE_RETRY = CodeRetry
  CODE_SUCCESS = CodeSuccess
com/epson/epos2/Epos2CallbackCode = Com.Epson.Epos2.Epos2CallbackCode
  <init>()V = .ctor()
  CODE_CANCELED = CodeCanceled
  CODE_ERR_AUTORECOVER = CodeErrAutorecover
  CODE_ERR_BATTERY_LOW = CodeErrBatteryLow
  CODE_ERR_CANCEL_FAILED = CodeErrCancelFailed
  CODE_ERR_CONNECT = CodeErrConnect
  CODE_ERR_COVER_OPEN = CodeErrCoverOpen
  CODE_ERR_CUTTER = CodeErrCutter
  CODE_ERR_DATA_CORRUPTED = CodeErrDataCorrupted
  CODE_ERR_DEVICE_BUSY = CodeErrDeviceBusy
  CODE_ERR_DIFFERENT_MODEL = CodeErrDifferentModel
  CODE_ERR_DIFFERENT_VERSION = CodeErrDifferentVersion
  CODE_ERR_DISCONNECT = CodeErrDisconnect
  CODE_ERR_EMPTY = CodeErrEmpty
  CODE_ERR_FAILURE = CodeErrFailure
  CODE_ERR_GET_JSON_SIZE = CodeErrGetJsonSize
  CODE_ERR_ILLEGAL = CodeErrIllegal
  CODE_ERR_ILLEGAL_LENGTH = CodeErrIllegalLength
  CODE_ERR_INSERTED = CodeErrInserted
  CODE_ERR_IN_USE = CodeErrInUse
  CODE_ERR_INVALID_FIRM_VERSION = CodeErrInvalidFirmVersion
  CODE_ERR_INVALID_PASSWORD = CodeErrInvalidPassword
  CODE_ERR_INVALID_WINDOW = CodeErrInvalidWindow
  CODE_ERR_IO = CodeErrIo
  CODE_ERR_JOB_NOT_FOUND = CodeErrJobNotFound
  CODE_ERR_JSON_FORMAT = CodeErrJsonFormat
  CODE_ERR_MECHANICAL = CodeErrMechanical
  CODE_ERR_MEMORY = CodeErrMemory
  CODE_ERR_NOISE_DETECTED = CodeErrNoiseDetected
  CODE_ERR_NO_MAGNETIC_DATA = CodeErrNoMagneticData
  CODE_ERR_NO_MICR_DATA = CodeErrNoMicrData
  CODE_ERR_NOT_FOUND = CodeErrNotFound
  CODE_ERR_PAPER_JAM = CodeErrPaperJam
  CODE_ERR_PAPER_PULLED_OUT = CodeErrPaperPulledOut
  CODE_ERR_PAPER_TYPE = CodeErrPaperType
  CODE_ERR_PARAM = CodeErrParam
  CODE_ERR_PORT = CodeErrPort
  CODE_ERR_PROCESSING = CodeErrProcessing
  CODE_ERR_READ = CodeErrRead
  CODE_ERR_RECOGNITION = CodeErrRecognition
  CODE_ERR_RECOVERY_FAILURE = CodeErrRecoveryFailure
  CODE_ERR_REQUEST_ENTITY_TOO_LARGE = CodeErrRequestEntityTooLarge
  CODE_ERR_SPOOLER = CodeErrSpooler
  CODE_ERR_SSL_CERTIFICATION = CodeErrSslCertification
  CODE_ERR_SYSTEM = CodeErrSystem
  CODE_ERR_TIMEOUT = CodeErrTimeout
  CODE_ERR_TOO_MANY_REQUESTS = CodeErrTooManyRequests
  CODE_ERR_UNRECOVERABLE = CodeErrUnrecoverable
  CODE_ERR_WAIT_INSERTION = CodeErrWaitInsertion
  CODE_ERR_WAIT_REMOVAL = CodeErrWaitRemoval
  CODE_NO_PASSWORD = CodeNoPassword
  CODE_PRINTING = CodePrinting
  CODE_RETRY = CodeRetry
  CODE_SUCCESS = CodeSuccess
com/epson/epos2/Epos2Exception = Com.Epson.Epos2.Epos2Exception
  <init>(I)V = .ctor(int)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  ERR_ALREADY_OPENED = ErrAlreadyOpened
  ERR_ALREADY_USED = ErrAlreadyUsed
  ERR_BOX_CLIENT_OVER = ErrBoxClientOver
  ERR_BOX_COUNT_OVER = ErrBoxCountOver
  ERR_CONNECT = ErrConnect
  ERR_DISCONNECT = ErrDisconnect
  ERR_FAILURE = ErrFailure
  ERR_ILLEGAL = ErrIllegal
  ERR_IN_USE = ErrInUse
  ERR_MEMORY = ErrMemory
  ERR_NOT_FOUND = ErrNotFound
  ERR_PARAM = ErrParam
  ERR_PROCESSING = ErrProcessing
  ERR_RECOVERY_FAILURE = ErrRecoveryFailure
  ERR_TIMEOUT = ErrTimeout
  ERR_TYPE_INVALID = ErrTypeInvalid
  ERR_UNSUPPORTED = ErrUnsupported
  getErrorStatus()I = ErrorStatus
com/epson/epos2/Epos2Exception = Com.Epson.Epos2.Epos2Exception
  <init>(I)V = .ctor(int)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  ERR_ALREADY_OPENED = ErrAlreadyOpened
  ERR_ALREADY_USED = ErrAlreadyUsed
  ERR_BOX_CLIENT_OVER = ErrBoxClientOver
  ERR_BOX_COUNT_OVER = ErrBoxCountOver
  ERR_CONNECT = ErrConnect
  ERR_DISCONNECT = ErrDisconnect
  ERR_FAILURE = ErrFailure
  ERR_ILLEGAL = ErrIllegal
  ERR_IN_USE = ErrInUse
  ERR_MEMORY = ErrMemory
  ERR_NOT_FOUND = ErrNotFound
  ERR_PARAM = ErrParam
  ERR_PROCESSING = ErrProcessing
  ERR_RECOVERY_FAILURE = ErrRecoveryFailure
  ERR_TIMEOUT = ErrTimeout
  ERR_TYPE_INVALID = ErrTypeInvalid
  ERR_UNSUPPORTED = ErrUnsupported
  getErrorStatus()I = ErrorStatus
com/epson/epos2/Epos2ExceptionLocal = Com.Epson.Epos2.Epos2ExceptionLocal
  <init>()V = .ctor()
  ERR_DATA_CORRUPTED = ErrDataCorrupted
  ERR_INVALID_PASSWORD = ErrInvalidPassword
  ERR_SSL_CERTIFICATION = ErrSslCertification
com/epson/epos2/Epos2ExceptionLocal = Com.Epson.Epos2.Epos2ExceptionLocal
  <init>()V = .ctor()
  ERR_DATA_CORRUPTED = ErrDataCorrupted
  ERR_INVALID_PASSWORD = ErrInvalidPassword
  ERR_SSL_CERTIFICATION = ErrSslCertification
com/epson/epos2/germanyfiscalelement/GermanyFiscalElement = Com.Epson.Epos2.Germanyfiscalelement.GermanyFiscalElement
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  EVENT_DISCONNECT = EventDisconnect
  EVENT_RECONNECT = EventReconnect
  EVENT_RECONNECTING = EventReconnecting
  FALSE = False
  PARAM_DEFAULT = ParamDefault
  TRUE = True
  getAdmin()Ljava/lang/String; = Admin
  getLocation()Ljava/lang/String; = Location
  getStatus()Lcom/epson/epos2/germanyfiscalelement/GermanyFiscalElementStatusInfo; = Status
  checkHandle()V = CheckHandle()
  connect(Ljava/lang/String;I)V = Connect(string, int)
  disconnect()V = Disconnect()
  finalize()V = Finalize()
  initializeGfeInstance()V = InitializeGfeInstance()
  nativeEpos2GetAdmin(J)Ljava/lang/String; = NativeEpos2GetAdmin(long)
  nativeEpos2GetLocation(J)Ljava/lang/String; = NativeEpos2GetLocation(long)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/germanyfiscalelement/GermanyFiscalElementStatusInfo; = NativeEpos2GetStatus(long)
  nativeEpos2Operate(JLjava/lang/String;J)I = NativeEpos2Operate(long, string, long)
  operate(Ljava/lang/String;I)V = Operate(string, int)
  setConnectionEventListener(Lcom/epson/epos2/ConnectionListener;)V = SetConnectionEventListener(Com.Epson.Epos2.IConnectionListener)
  setReceiveEventListener(Lcom/epson/epos2/germanyfiscalelement/ReceiveListener;)V = SetReceiveEventListener(Com.Epson.Epos2.Germanyfiscalelement.IReceiveListener)
com/epson/epos2/germanyfiscalelement/GermanyFiscalElement = Com.Epson.Epos2.Germanyfiscalelement.GermanyFiscalElement
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  EVENT_DISCONNECT = EventDisconnect
  EVENT_RECONNECT = EventReconnect
  EVENT_RECONNECTING = EventReconnecting
  FALSE = False
  PARAM_DEFAULT = ParamDefault
  TRUE = True
  getAdmin()Ljava/lang/String; = Admin
  getLocation()Ljava/lang/String; = Location
  getStatus()Lcom/epson/epos2/germanyfiscalelement/GermanyFiscalElementStatusInfo; = Status
  checkHandle()V = CheckHandle()
  connect(Ljava/lang/String;I)V = Connect(string, int)
  disconnect()V = Disconnect()
  initializeGfeInstance()V = InitializeGfeInstance()
  nativeEpos2GetAdmin(J)Ljava/lang/String; = NativeEpos2GetAdmin(long)
  nativeEpos2GetLocation(J)Ljava/lang/String; = NativeEpos2GetLocation(long)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/germanyfiscalelement/GermanyFiscalElementStatusInfo; = NativeEpos2GetStatus(long)
  nativeEpos2Operate(JLjava/lang/String;J)I = NativeEpos2Operate(long, string, long)
  operate(Ljava/lang/String;I)V = Operate(string, int)
  setConnectionEventListener(Lcom/epson/epos2/ConnectionListener;)V = SetConnectionEventListener(Com.Epson.Epos2.IConnectionListener)
  setReceiveEventListener(Lcom/epson/epos2/germanyfiscalelement/ReceiveListener;)V = SetReceiveEventListener(Com.Epson.Epos2.Germanyfiscalelement.IReceiveListener)
com/epson/epos2/germanyfiscalelement/GermanyFiscalElementStatusInfo = Com.Epson.Epos2.Germanyfiscalelement.GermanyFiscalElementStatusInfo
  <init>()V = .ctor()
  getConnection()I = Connection
com/epson/epos2/germanyfiscalelement/GermanyFiscalElementStatusInfo = Com.Epson.Epos2.Germanyfiscalelement.GermanyFiscalElementStatusInfo
  <init>()V = .ctor()
  getConnection()I = Connection
com/epson/epos2/germanyfiscalelement/ReceiveListener = Com.Epson.Epos2.Germanyfiscalelement.IReceiveListener
  onGfeReceive(Lcom/epson/epos2/germanyfiscalelement/GermanyFiscalElement;ILjava/lang/String;)V = OnGfeReceive(Com.Epson.Epos2.Germanyfiscalelement.GermanyFiscalElement, int, string)
com/epson/epos2/germanyfiscalelement/ReceiveListener = Com.Epson.Epos2.Germanyfiscalelement.IReceiveListener
  onGfeReceive(Lcom/epson/epos2/germanyfiscalelement/GermanyFiscalElement;ILjava/lang/String;)V = OnGfeReceive(Com.Epson.Epos2.Germanyfiscalelement.GermanyFiscalElement, int, string)
com/epson/epos2/keyboard/Keyboard = Com.Epson.Epos2.Keyboard.Keyboard
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  EVENT_DISCONNECT = EventDisconnect
  EVENT_RECONNECT = EventReconnect
  EVENT_RECONNECTING = EventReconnecting
  FALSE = False
  PARAM_DEFAULT = ParamDefault
  TRUE = True
  VK_0 = Vk0
  VK_1 = Vk1
  VK_2 = Vk2
  VK_3 = Vk3
  VK_4 = Vk4
  VK_5 = Vk5
  VK_6 = Vk6
  VK_7 = Vk7
  VK_8 = Vk8
  VK_9 = Vk9
  VK_A = VkA
  VK_ADD = VkAdd
  VK_B = VkB
  VK_BACK = VkBack
  VK_C = VkC
  VK_CAPITAL = VkCapital
  VK_CONTROL = VkControl
  VK_CONVERT = VkConvert
  VK_D = VkD
  VK_DELETE = VkDelete
  VK_DOWN = VkDown
  VK_E = VkE
  VK_END = VkEnd
  VK_ESCAPE = VkEscape
  VK_F = VkF
  VK_F1 = VkF1
  VK_F10 = VkF10
  VK_F11 = VkF11
  VK_F12 = VkF12
  VK_F2 = VkF2
  VK_F3 = VkF3
  VK_F4 = VkF4
  VK_F5 = VkF5
  VK_F6 = VkF6
  VK_F7 = VkF7
  VK_F8 = VkF8
  VK_F9 = VkF9
  VK_G = VkG
  VK_H = VkH
  VK_HOME = VkHome
  VK_I = VkI
  VK_INSERT = VkInsert
  VK_J = VkJ
  VK_K = VkK
  VK_L = VkL
  VK_LEFT = VkLeft
  VK_M = VkM
  VK_MENU = VkMenu
  VK_MULTIPLY = VkMultiply
  VK_N = VkN
  VK_NEXT = VkNext
  VK_NONCONVERT = VkNonconvert
  VK_O = VkO
  VK_OEM_1 = VkOem1
  VK_OEM_2 = VkOem2
  VK_OEM_3 = VkOem3
  VK_OEM_4 = VkOem4
  VK_OEM_5 = VkOem5
  VK_OEM_6 = VkOem6
  VK_OEM_7 = VkOem7
  VK_OEM_ATTN = VkOemAttn
  VK_OEM_COMMA = VkOemComma
  VK_OEM_MINUS = VkOemMinus
  VK_OEM_PERIOD = VkOemPeriod
  VK_OEM_PLUS = VkOemPlus
  VK_P = VkP
  VK_PRIOR = VkPrior
  VK_Q = VkQ
  VK_R = VkR
  VK_RETURN = VkReturn
  VK_RIGHT = VkRight
  VK_S = VkS
  VK_SHIFT = VkShift
  VK_SPACE = VkSpace
  VK_SUBTRACT = VkSubtract
  VK_T = VkT
  VK_TAB = VkTab
  VK_U = VkU
  VK_UP = VkUp
  VK_V = VkV
  VK_W = VkW
  VK_X = VkX
  VK_Y = VkY
  VK_Z = VkZ
  getAdmin()Ljava/lang/String; = Admin
  getLocation()Ljava/lang/String; = Location
  getStatus()Lcom/epson/epos2/keyboard/KeyboardStatusInfo; = Status
  checkHandle()V = CheckHandle()
  connect(Ljava/lang/String;I)V = Connect(string, int)
  disconnect()V = Disconnect()
  finalize()V = Finalize()
  getPrefix()[I = GetPrefix()
  initializeKeyboardInstance()V = InitializeKeyboardInstance()
  nativeEpos2GetAdmin(J)Ljava/lang/String; = NativeEpos2GetAdmin(long)
  nativeEpos2GetLocation(J)Ljava/lang/String; = NativeEpos2GetLocation(long)
  nativeEpos2GetPrefix(J)[I = NativeEpos2GetPrefix(long)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/keyboard/KeyboardStatusInfo; = NativeEpos2GetStatus(long)
  nativeEpos2SetPrefix(J[I)I = NativeEpos2SetPrefix(long, int[])
  onKbdKeyPress(ILjava/lang/String;)V = OnKbdKeyPress(int, string)
  onKbdReadString(Ljava/lang/String;I)V = OnKbdReadString(string, int)
  setConnectionEventListener(Lcom/epson/epos2/ConnectionListener;)V = SetConnectionEventListener(Com.Epson.Epos2.IConnectionListener)
  setKeyPressEventListener(Lcom/epson/epos2/keyboard/KeyPressListener;)V = SetKeyPressEventListener(Com.Epson.Epos2.Keyboard.IKeyPressListener)
  setPrefix([I)V = SetPrefix(int[])
  setReadStringEventListener(Lcom/epson/epos2/keyboard/ReadStringListener;)V = SetReadStringEventListener(Com.Epson.Epos2.Keyboard.IReadStringListener)
com/epson/epos2/keyboard/Keyboard = Com.Epson.Epos2.Keyboard.Keyboard
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  EVENT_DISCONNECT = EventDisconnect
  EVENT_RECONNECT = EventReconnect
  EVENT_RECONNECTING = EventReconnecting
  FALSE = False
  PARAM_DEFAULT = ParamDefault
  TRUE = True
  VK_0 = Vk0
  VK_1 = Vk1
  VK_2 = Vk2
  VK_3 = Vk3
  VK_4 = Vk4
  VK_5 = Vk5
  VK_6 = Vk6
  VK_7 = Vk7
  VK_8 = Vk8
  VK_9 = Vk9
  VK_A = VkA
  VK_ADD = VkAdd
  VK_B = VkB
  VK_BACK = VkBack
  VK_C = VkC
  VK_CAPITAL = VkCapital
  VK_CONTROL = VkControl
  VK_CONVERT = VkConvert
  VK_D = VkD
  VK_DELETE = VkDelete
  VK_DOWN = VkDown
  VK_E = VkE
  VK_END = VkEnd
  VK_ESCAPE = VkEscape
  VK_F = VkF
  VK_F1 = VkF1
  VK_F10 = VkF10
  VK_F11 = VkF11
  VK_F12 = VkF12
  VK_F2 = VkF2
  VK_F3 = VkF3
  VK_F4 = VkF4
  VK_F5 = VkF5
  VK_F6 = VkF6
  VK_F7 = VkF7
  VK_F8 = VkF8
  VK_F9 = VkF9
  VK_G = VkG
  VK_H = VkH
  VK_HOME = VkHome
  VK_I = VkI
  VK_INSERT = VkInsert
  VK_J = VkJ
  VK_K = VkK
  VK_L = VkL
  VK_LEFT = VkLeft
  VK_M = VkM
  VK_MENU = VkMenu
  VK_MULTIPLY = VkMultiply
  VK_N = VkN
  VK_NEXT = VkNext
  VK_NONCONVERT = VkNonconvert
  VK_O = VkO
  VK_OEM_1 = VkOem1
  VK_OEM_2 = VkOem2
  VK_OEM_3 = VkOem3
  VK_OEM_4 = VkOem4
  VK_OEM_5 = VkOem5
  VK_OEM_6 = VkOem6
  VK_OEM_7 = VkOem7
  VK_OEM_ATTN = VkOemAttn
  VK_OEM_COMMA = VkOemComma
  VK_OEM_MINUS = VkOemMinus
  VK_OEM_PERIOD = VkOemPeriod
  VK_OEM_PLUS = VkOemPlus
  VK_P = VkP
  VK_PRIOR = VkPrior
  VK_Q = VkQ
  VK_R = VkR
  VK_RETURN = VkReturn
  VK_RIGHT = VkRight
  VK_S = VkS
  VK_SHIFT = VkShift
  VK_SPACE = VkSpace
  VK_SUBTRACT = VkSubtract
  VK_T = VkT
  VK_TAB = VkTab
  VK_U = VkU
  VK_UP = VkUp
  VK_V = VkV
  VK_W = VkW
  VK_X = VkX
  VK_Y = VkY
  VK_Z = VkZ
  getAdmin()Ljava/lang/String; = Admin
  getLocation()Ljava/lang/String; = Location
  getStatus()Lcom/epson/epos2/keyboard/KeyboardStatusInfo; = Status
  checkHandle()V = CheckHandle()
  connect(Ljava/lang/String;I)V = Connect(string, int)
  disconnect()V = Disconnect()
  getPrefix()[I = GetPrefix()
  initializeKeyboardInstance()V = InitializeKeyboardInstance()
  nativeEpos2GetAdmin(J)Ljava/lang/String; = NativeEpos2GetAdmin(long)
  nativeEpos2GetLocation(J)Ljava/lang/String; = NativeEpos2GetLocation(long)
  nativeEpos2GetPrefix(J)[I = NativeEpos2GetPrefix(long)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/keyboard/KeyboardStatusInfo; = NativeEpos2GetStatus(long)
  nativeEpos2SetPrefix(J[I)I = NativeEpos2SetPrefix(long, int[])
  onKbdKeyPress(ILjava/lang/String;)V = OnKbdKeyPress(int, string)
  onKbdReadString(Ljava/lang/String;I)V = OnKbdReadString(string, int)
  setConnectionEventListener(Lcom/epson/epos2/ConnectionListener;)V = SetConnectionEventListener(Com.Epson.Epos2.IConnectionListener)
  setKeyPressEventListener(Lcom/epson/epos2/keyboard/KeyPressListener;)V = SetKeyPressEventListener(Com.Epson.Epos2.Keyboard.IKeyPressListener)
  setPrefix([I)V = SetPrefix(int[])
  setReadStringEventListener(Lcom/epson/epos2/keyboard/ReadStringListener;)V = SetReadStringEventListener(Com.Epson.Epos2.Keyboard.IReadStringListener)
com/epson/epos2/keyboard/KeyboardStatusInfo = Com.Epson.Epos2.Keyboard.KeyboardStatusInfo
  <init>()V = .ctor()
  getConnection()I = Connection
com/epson/epos2/keyboard/KeyboardStatusInfo = Com.Epson.Epos2.Keyboard.KeyboardStatusInfo
  <init>()V = .ctor()
  getConnection()I = Connection
com/epson/epos2/keyboard/KeyPressListener = Com.Epson.Epos2.Keyboard.IKeyPressListener
  onKbdKeyPress(Lcom/epson/epos2/keyboard/Keyboard;ILjava/lang/String;)V = OnKbdKeyPress(Com.Epson.Epos2.Keyboard.Keyboard, int, string)
com/epson/epos2/keyboard/KeyPressListener = Com.Epson.Epos2.Keyboard.IKeyPressListener
  onKbdKeyPress(Lcom/epson/epos2/keyboard/Keyboard;ILjava/lang/String;)V = OnKbdKeyPress(Com.Epson.Epos2.Keyboard.Keyboard, int, string)
com/epson/epos2/keyboard/ReadStringListener = Com.Epson.Epos2.Keyboard.IReadStringListener
  onKbdReadString(Lcom/epson/epos2/keyboard/Keyboard;Ljava/lang/String;I)V = OnKbdReadString(Com.Epson.Epos2.Keyboard.Keyboard, string, int)
com/epson/epos2/keyboard/ReadStringListener = Com.Epson.Epos2.Keyboard.IReadStringListener
  onKbdReadString(Lcom/epson/epos2/keyboard/Keyboard;Ljava/lang/String;I)V = OnKbdReadString(Com.Epson.Epos2.Keyboard.Keyboard, string, int)
com/epson/epos2/linedisplay/DisplayStatusInfo = Com.Epson.Epos2.Linedisplay.DisplayStatusInfo
  <init>()V = .ctor()
  getConnection()I = Connection
com/epson/epos2/linedisplay/DisplayStatusInfo = Com.Epson.Epos2.Linedisplay.DisplayStatusInfo
  <init>()V = .ctor()
  getConnection()I = Connection
com/epson/epos2/linedisplay/LineDisplay = Com.Epson.Epos2.Linedisplay.LineDisplay
  <init>(ILandroid/content/Context;)V = .ctor(int, Android.Content.Context)
  ALL_ROWS = AllRows
  BRIGHTNESS_100 = Brightness100
  BRIGHTNESS_20 = Brightness20
  BRIGHTNESS_40 = Brightness40
  BRIGHTNESS_60 = Brightness60
  CURSOR_NONE = CursorNone
  CURSOR_UNDERLINE = CursorUnderline
  DM_D110 = DmD110
  DM_D210 = DmD210
  DM_D30 = DmD30
  DM_D70 = DmD70
  EVEN_ROWS = EvenRows
  EVENT_DISCONNECT = EventDisconnect
  EVENT_RECONNECT = EventReconnect
  EVENT_RECONNECTING = EventReconnecting
  FALSE = False
  LANDSCAPE_LAYOUT_MODE_1 = LandscapeLayoutMode1
  LANDSCAPE_LAYOUT_MODE_2 = LandscapeLayoutMode2
  LANDSCAPE_LAYOUT_MODE_3 = LandscapeLayoutMode3
  LANDSCAPE_LAYOUT_MODE_4 = LandscapeLayoutMode4
  LANDSCAPE_LAYOUT_MODE_5 = LandscapeLayoutMode5
  LANG_EN = LangEn
  LANG_JA = LangJa
  LANG_MULTI = LangMulti
  LAYOUT_MODE_1 = LayoutMode1
  LAYOUT_MODE_10 = LayoutMode10
  LAYOUT_MODE_11 = LayoutMode11
  LAYOUT_MODE_12 = LayoutMode12
  LAYOUT_MODE_13 = LayoutMode13
  LAYOUT_MODE_14 = LayoutMode14
  LAYOUT_MODE_15 = LayoutMode15
  LAYOUT_MODE_2 = LayoutMode2
  LAYOUT_MODE_3 = LayoutMode3
  LAYOUT_MODE_4 = LayoutMode4
  LAYOUT_MODE_5 = LayoutMode5
  LAYOUT_MODE_6 = LayoutMode6
  LAYOUT_MODE_7 = LayoutMode7
  LAYOUT_MODE_8 = LayoutMode8
  LAYOUT_MODE_9 = LayoutMode9
  LEVEL_H = LevelH
  LEVEL_L = LevelL
  LEVEL_M = LevelM
  LEVEL_Q = LevelQ
  MARQUEE_PLACE = MarqueePlace
  MARQUEE_WALK = MarqueeWalk
  MOVE_BOTTOM_LEFT = MoveBottomLeft
  MOVE_BOTTOM_RIGHT = MoveBottomRight
  MOVE_TOP_LEFT = MoveTopLeft
  MOVE_TOP_RIGHT = MoveTopRight
  ODD_ROWS = OddRows
  PARAM_DEFAULT = ParamDefault
  PARAM_UNUSE = ParamUnuse
  PORTRAIT_LAYOUT_MODE_1 = PortraitLayoutMode1
  PORTRAIT_LAYOUT_MODE_2 = PortraitLayoutMode2
  PORTRAIT_LAYOUT_MODE_3 = PortraitLayoutMode3
  PORTRAIT_LAYOUT_MODE_4 = PortraitLayoutMode4
  PORTRAIT_LAYOUT_MODE_5 = PortraitLayoutMode5
  PORTRAIT_LAYOUT_MODE_6 = PortraitLayoutMode6
  PORTRAIT_LAYOUT_MODE_7 = PortraitLayoutMode7
  SCROLL_HORIZONTAL = ScrollHorizontal
  SCROLL_OVERWRITE = ScrollOverwrite
  SCROLL_VERTICAL = ScrollVertical
  SYMBOL_QRCODE_MODEL_1 = SymbolQrcodeModel1
  SYMBOL_QRCODE_MODEL_2 = SymbolQrcodeModel2
  TRUE = True
  getAdmin()Ljava/lang/String; = Admin
  getLocation()Ljava/lang/String; = Location
  getStatus()Lcom/epson/epos2/linedisplay/DisplayStatusInfo; = Status
  addBackgroundColor(IIII)V = AddBackgroundColor(int, int, int, int)
  addClearCurrentTextArea()V = AddClearCurrentTextArea()
  addClearCurrentWindow()V = AddClearCurrentWindow()
  addClearImage()V = AddClearImage()
  addClearSymbol()V = AddClearSymbol()
  addCommand([B)V = AddCommand(byte[])
  addCreateScreen(I)V = AddCreateScreen(int)
  addCreateScreenCustom(III)V = AddCreateScreenCustom(int, int, int)
  addCreateTextArea(IIIIII)V = AddCreateTextArea(int, int, int, int, int, int)
  addCreateWindow(IIIIII)V = AddCreateWindow(int, int, int, int, int, int)
  addDestroyTextArea(I)V = AddDestroyTextArea(int)
  addDestroyWindow(I)V = AddDestroyWindow(int)
  addDownloadImage(IIIIII)V = AddDownloadImage(int, int, int, int, int, int)
  addInitialize()V = AddInitialize()
  addMarqueeText(Ljava/lang/String;IIIII)V = AddMarqueeText(string, int, int, int, int, int)
  addMoveCursorPosition(I)V = AddMoveCursorPosition(int)
  addNVImage(IIIIII)V = AddNVImage(int, int, int, int, int, int)
  addRegisterDownloadImage([BII)V = AddRegisterDownloadImage(byte[], int, int)
  addReverseText(Ljava/lang/String;)V = AddReverseText(string)
  addReverseText(Ljava/lang/String;I)V = AddReverseText(string, int)
  addReverseText(Ljava/lang/String;II)V = AddReverseText(string, int, int)
  addReverseText(Ljava/lang/String;III)V = AddReverseText(string, int, int, int)
  addSetBlink(I)V = AddSetBlink(int)
  addSetBrightness(I)V = AddSetBrightness(int)
  addSetCurrentTextArea(I)V = AddSetCurrentTextArea(int)
  addSetCurrentWindow(I)V = AddSetCurrentWindow(int)
  addSetCursorPosition(II)V = AddSetCursorPosition(int, int)
  addSetCursorType(I)V = AddSetCursorType(int)
  addShowClock()V = AddShowClock()
  addStartSlideShow(I)V = AddStartSlideShow(int)
  addStopSlideShow()V = AddStopSlideShow()
  addSymbol(Ljava/lang/String;IIIIIII)V = AddSymbol(string, int, int, int, int, int, int, int)
  addText(Ljava/lang/String;)V = AddText(string)
  addText(Ljava/lang/String;I)V = AddText(string, int)
  addText(Ljava/lang/String;II)V = AddText(string, int, int)
  addText(Ljava/lang/String;III)V = AddText(string, int, int, int)
  addText(Ljava/lang/String;IIIIII)V = AddText(string, int, int, int, int, int, int)
  checkHandle()V = CheckHandle()
  clearCommandBuffer()V = ClearCommandBuffer()
  connect(Ljava/lang/String;I)V = Connect(string, int)
  disconnect()V = Disconnect()
  finalize()V = Finalize()
  initializeDisplayInstance(I)V = InitializeDisplayInstance(int)
  nativeEpos2AddBackgroundColor(JJJJJ)I = NativeEpos2AddBackgroundColor(long, long, long, long, long)
  nativeEpos2AddClearCurrentTextArea(J)I = NativeEpos2AddClearCurrentTextArea(long)
  nativeEpos2AddClearCurrentWindow(J)I = NativeEpos2AddClearCurrentWindow(long)
  nativeEpos2AddCommand(J[B)I = NativeEpos2AddCommand(long, byte[])
  nativeEpos2AddCreateScreen(JI)I = NativeEpos2AddCreateScreen(long, int)
  nativeEpos2AddCreateScreenCustom(JIJJ)I = NativeEpos2AddCreateScreenCustom(long, int, long, long)
  nativeEpos2AddCreateTextArea(JJJJJJI)I = NativeEpos2AddCreateTextArea(long, long, long, long, long, long, int)
  nativeEpos2AddCreateWindow(JJJJJJI)I = NativeEpos2AddCreateWindow(long, long, long, long, long, long, int)
  nativeEpos2AddDestroyTextArea(JJ)I = NativeEpos2AddDestroyTextArea(long, long)
  nativeEpos2AddDestroyWindow(JJ)I = NativeEpos2AddDestroyWindow(long, long)
  nativeEpos2AddDspClearImage(J)I = NativeEpos2AddDspClearImage(long)
  nativeEpos2AddDspClearSymbol(J)I = NativeEpos2AddDspClearSymbol(long)
  nativeEpos2AddDspDownloadImage(JJJJJJJ)I = NativeEpos2AddDspDownloadImage(long, long, long, long, long, long, long)
  nativeEpos2AddDspNVImage(JJJJJJJ)I = NativeEpos2AddDspNVImage(long, long, long, long, long, long, long)
  nativeEpos2AddDspRegisterDownloadImage(J[BJJ)I = NativeEpos2AddDspRegisterDownloadImage(long, byte[], long, long)
  nativeEpos2AddDspSymbol(JLjava/lang/String;IIJJJJI)I = NativeEpos2AddDspSymbol(long, string, int, int, long, long, long, long, int)
  nativeEpos2AddInitialize(J)I = NativeEpos2AddInitialize(long)
  nativeEpos2AddMarqueeText(JLjava/lang/String;IJJJI)I = NativeEpos2AddMarqueeText(long, string, int, long, long, long, int)
  nativeEpos2AddMoveCursorPosition(JI)I = NativeEpos2AddMoveCursorPosition(long, int)
  nativeEpos2AddReverseText(JLjava/lang/String;)I = NativeEpos2AddReverseText(long, string)
  nativeEpos2AddReverseTextLang(JLjava/lang/String;I)I = NativeEpos2AddReverseTextLang(long, string, int)
  nativeEpos2AddReverseTextPosition(JLjava/lang/String;JJ)I = NativeEpos2AddReverseTextPosition(long, string, long, long)
  nativeEpos2AddReverseTextPositionLang(JLjava/lang/String;JJI)I = NativeEpos2AddReverseTextPositionLang(long, string, long, long, int)
  nativeEpos2AddSetBlink(JJ)I = NativeEpos2AddSetBlink(long, long)
  nativeEpos2AddSetBrightness(JI)I = NativeEpos2AddSetBrightness(long, int)
  nativeEpos2AddSetCurrentTextArea(JJ)I = NativeEpos2AddSetCurrentTextArea(long, long)
  nativeEpos2AddSetCurrentWindow(JJ)I = NativeEpos2AddSetCurrentWindow(long, long)
  nativeEpos2AddSetCursorPosition(JJJ)I = NativeEpos2AddSetCursorPosition(long, long, long)
  nativeEpos2AddSetCursorType(JI)I = NativeEpos2AddSetCursorType(long, int)
  nativeEpos2AddShowClock(J)I = NativeEpos2AddShowClock(long)
  nativeEpos2AddStartSlideShow(JJ)I = NativeEpos2AddStartSlideShow(long, long)
  nativeEpos2AddStopSlideShow(J)I = NativeEpos2AddStopSlideShow(long)
  nativeEpos2ClearCommandBuffer(J)I = NativeEpos2ClearCommandBuffer(long)
  nativeEpos2DspAddText(JLjava/lang/String;JJIJJJ)I = NativeEpos2DspAddText(long, string, long, long, int, long, long, long)
  nativeEpos2GetAdmin(J)Ljava/lang/String; = NativeEpos2GetAdmin(long)
  nativeEpos2GetLocation(J)Ljava/lang/String; = NativeEpos2GetLocation(long)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/linedisplay/DisplayStatusInfo; = NativeEpos2GetStatus(long)
  nativeEpos2SendData(J)I = NativeEpos2SendData(long)
  sendData()V = SendData()
  setConnectionEventListener(Lcom/epson/epos2/ConnectionListener;)V = SetConnectionEventListener(Com.Epson.Epos2.IConnectionListener)
  setReceiveEventListener(Lcom/epson/epos2/linedisplay/ReceiveListener;)V = SetReceiveEventListener(Com.Epson.Epos2.Linedisplay.IReceiveListener)
com/epson/epos2/linedisplay/LineDisplay = Com.Epson.Epos2.Linedisplay.LineDisplay
  <init>(ILandroid/content/Context;)V = .ctor(int, Android.Content.Context)
  ALL_ROWS = AllRows
  BRIGHTNESS_100 = Brightness100
  BRIGHTNESS_20 = Brightness20
  BRIGHTNESS_40 = Brightness40
  BRIGHTNESS_60 = Brightness60
  CURSOR_NONE = CursorNone
  CURSOR_UNDERLINE = CursorUnderline
  DM_D110 = DmD110
  DM_D210 = DmD210
  DM_D30 = DmD30
  DM_D70 = DmD70
  EVEN_ROWS = EvenRows
  EVENT_DISCONNECT = EventDisconnect
  EVENT_RECONNECT = EventReconnect
  EVENT_RECONNECTING = EventReconnecting
  FALSE = False
  LANDSCAPE_LAYOUT_MODE_1 = LandscapeLayoutMode1
  LANDSCAPE_LAYOUT_MODE_2 = LandscapeLayoutMode2
  LANDSCAPE_LAYOUT_MODE_3 = LandscapeLayoutMode3
  LANDSCAPE_LAYOUT_MODE_4 = LandscapeLayoutMode4
  LANDSCAPE_LAYOUT_MODE_5 = LandscapeLayoutMode5
  LANG_EN = LangEn
  LANG_JA = LangJa
  LANG_MULTI = LangMulti
  LAYOUT_MODE_1 = LayoutMode1
  LAYOUT_MODE_10 = LayoutMode10
  LAYOUT_MODE_11 = LayoutMode11
  LAYOUT_MODE_12 = LayoutMode12
  LAYOUT_MODE_13 = LayoutMode13
  LAYOUT_MODE_14 = LayoutMode14
  LAYOUT_MODE_15 = LayoutMode15
  LAYOUT_MODE_2 = LayoutMode2
  LAYOUT_MODE_3 = LayoutMode3
  LAYOUT_MODE_4 = LayoutMode4
  LAYOUT_MODE_5 = LayoutMode5
  LAYOUT_MODE_6 = LayoutMode6
  LAYOUT_MODE_7 = LayoutMode7
  LAYOUT_MODE_8 = LayoutMode8
  LAYOUT_MODE_9 = LayoutMode9
  LEVEL_H = LevelH
  LEVEL_L = LevelL
  LEVEL_M = LevelM
  LEVEL_Q = LevelQ
  MARQUEE_PLACE = MarqueePlace
  MARQUEE_WALK = MarqueeWalk
  MOVE_BOTTOM_LEFT = MoveBottomLeft
  MOVE_BOTTOM_RIGHT = MoveBottomRight
  MOVE_TOP_LEFT = MoveTopLeft
  MOVE_TOP_RIGHT = MoveTopRight
  ODD_ROWS = OddRows
  PARAM_DEFAULT = ParamDefault
  PARAM_UNUSE = ParamUnuse
  PORTRAIT_LAYOUT_MODE_1 = PortraitLayoutMode1
  PORTRAIT_LAYOUT_MODE_2 = PortraitLayoutMode2
  PORTRAIT_LAYOUT_MODE_3 = PortraitLayoutMode3
  PORTRAIT_LAYOUT_MODE_4 = PortraitLayoutMode4
  PORTRAIT_LAYOUT_MODE_5 = PortraitLayoutMode5
  PORTRAIT_LAYOUT_MODE_6 = PortraitLayoutMode6
  PORTRAIT_LAYOUT_MODE_7 = PortraitLayoutMode7
  SCROLL_HORIZONTAL = ScrollHorizontal
  SCROLL_OVERWRITE = ScrollOverwrite
  SCROLL_VERTICAL = ScrollVertical
  SYMBOL_QRCODE_MODEL_1 = SymbolQrcodeModel1
  SYMBOL_QRCODE_MODEL_2 = SymbolQrcodeModel2
  TRUE = True
  getAdmin()Ljava/lang/String; = Admin
  getLocation()Ljava/lang/String; = Location
  getStatus()Lcom/epson/epos2/linedisplay/DisplayStatusInfo; = Status
  addBackgroundColor(IIII)V = AddBackgroundColor(int, int, int, int)
  addClearCurrentTextArea()V = AddClearCurrentTextArea()
  addClearCurrentWindow()V = AddClearCurrentWindow()
  addClearImage()V = AddClearImage()
  addClearSymbol()V = AddClearSymbol()
  addCommand([B)V = AddCommand(byte[])
  addCreateScreen(I)V = AddCreateScreen(int)
  addCreateScreenCustom(III)V = AddCreateScreenCustom(int, int, int)
  addCreateTextArea(IIIIII)V = AddCreateTextArea(int, int, int, int, int, int)
  addCreateWindow(IIIIII)V = AddCreateWindow(int, int, int, int, int, int)
  addDestroyTextArea(I)V = AddDestroyTextArea(int)
  addDestroyWindow(I)V = AddDestroyWindow(int)
  addDownloadImage(IIIIII)V = AddDownloadImage(int, int, int, int, int, int)
  addInitialize()V = AddInitialize()
  addMarqueeText(Ljava/lang/String;IIIII)V = AddMarqueeText(string, int, int, int, int, int)
  addMoveCursorPosition(I)V = AddMoveCursorPosition(int)
  addNVImage(IIIIII)V = AddNVImage(int, int, int, int, int, int)
  addRegisterDownloadImage([BII)V = AddRegisterDownloadImage(byte[], int, int)
  addReverseText(Ljava/lang/String;)V = AddReverseText(string)
  addReverseText(Ljava/lang/String;I)V = AddReverseText(string, int)
  addReverseText(Ljava/lang/String;II)V = AddReverseText(string, int, int)
  addReverseText(Ljava/lang/String;III)V = AddReverseText(string, int, int, int)
  addSetBlink(I)V = AddSetBlink(int)
  addSetBrightness(I)V = AddSetBrightness(int)
  addSetCurrentTextArea(I)V = AddSetCurrentTextArea(int)
  addSetCurrentWindow(I)V = AddSetCurrentWindow(int)
  addSetCursorPosition(II)V = AddSetCursorPosition(int, int)
  addSetCursorType(I)V = AddSetCursorType(int)
  addShowClock()V = AddShowClock()
  addStartSlideShow(I)V = AddStartSlideShow(int)
  addStopSlideShow()V = AddStopSlideShow()
  addSymbol(Ljava/lang/String;IIIIIII)V = AddSymbol(string, int, int, int, int, int, int, int)
  addText(Ljava/lang/String;)V = AddText(string)
  addText(Ljava/lang/String;I)V = AddText(string, int)
  addText(Ljava/lang/String;II)V = AddText(string, int, int)
  addText(Ljava/lang/String;III)V = AddText(string, int, int, int)
  addText(Ljava/lang/String;IIIIII)V = AddText(string, int, int, int, int, int, int)
  checkHandle()V = CheckHandle()
  clearCommandBuffer()V = ClearCommandBuffer()
  connect(Ljava/lang/String;I)V = Connect(string, int)
  disconnect()V = Disconnect()
  initializeDisplayInstance(I)V = InitializeDisplayInstance(int)
  nativeEpos2AddBackgroundColor(JJJJJ)I = NativeEpos2AddBackgroundColor(long, long, long, long, long)
  nativeEpos2AddClearCurrentTextArea(J)I = NativeEpos2AddClearCurrentTextArea(long)
  nativeEpos2AddClearCurrentWindow(J)I = NativeEpos2AddClearCurrentWindow(long)
  nativeEpos2AddCommand(J[B)I = NativeEpos2AddCommand(long, byte[])
  nativeEpos2AddCreateScreen(JI)I = NativeEpos2AddCreateScreen(long, int)
  nativeEpos2AddCreateScreenCustom(JIJJ)I = NativeEpos2AddCreateScreenCustom(long, int, long, long)
  nativeEpos2AddCreateTextArea(JJJJJJI)I = NativeEpos2AddCreateTextArea(long, long, long, long, long, long, int)
  nativeEpos2AddCreateWindow(JJJJJJI)I = NativeEpos2AddCreateWindow(long, long, long, long, long, long, int)
  nativeEpos2AddDestroyTextArea(JJ)I = NativeEpos2AddDestroyTextArea(long, long)
  nativeEpos2AddDestroyWindow(JJ)I = NativeEpos2AddDestroyWindow(long, long)
  nativeEpos2AddDspClearImage(J)I = NativeEpos2AddDspClearImage(long)
  nativeEpos2AddDspClearSymbol(J)I = NativeEpos2AddDspClearSymbol(long)
  nativeEpos2AddDspDownloadImage(JJJJJJJ)I = NativeEpos2AddDspDownloadImage(long, long, long, long, long, long, long)
  nativeEpos2AddDspNVImage(JJJJJJJ)I = NativeEpos2AddDspNVImage(long, long, long, long, long, long, long)
  nativeEpos2AddDspRegisterDownloadImage(J[BJJ)I = NativeEpos2AddDspRegisterDownloadImage(long, byte[], long, long)
  nativeEpos2AddDspSymbol(JLjava/lang/String;IIJJJJI)I = NativeEpos2AddDspSymbol(long, string, int, int, long, long, long, long, int)
  nativeEpos2AddInitialize(J)I = NativeEpos2AddInitialize(long)
  nativeEpos2AddMarqueeText(JLjava/lang/String;IJJJI)I = NativeEpos2AddMarqueeText(long, string, int, long, long, long, int)
  nativeEpos2AddMoveCursorPosition(JI)I = NativeEpos2AddMoveCursorPosition(long, int)
  nativeEpos2AddReverseText(JLjava/lang/String;)I = NativeEpos2AddReverseText(long, string)
  nativeEpos2AddReverseTextLang(JLjava/lang/String;I)I = NativeEpos2AddReverseTextLang(long, string, int)
  nativeEpos2AddReverseTextPosition(JLjava/lang/String;JJ)I = NativeEpos2AddReverseTextPosition(long, string, long, long)
  nativeEpos2AddReverseTextPositionLang(JLjava/lang/String;JJI)I = NativeEpos2AddReverseTextPositionLang(long, string, long, long, int)
  nativeEpos2AddSetBlink(JJ)I = NativeEpos2AddSetBlink(long, long)
  nativeEpos2AddSetBrightness(JI)I = NativeEpos2AddSetBrightness(long, int)
  nativeEpos2AddSetCurrentTextArea(JJ)I = NativeEpos2AddSetCurrentTextArea(long, long)
  nativeEpos2AddSetCurrentWindow(JJ)I = NativeEpos2AddSetCurrentWindow(long, long)
  nativeEpos2AddSetCursorPosition(JJJ)I = NativeEpos2AddSetCursorPosition(long, long, long)
  nativeEpos2AddSetCursorType(JI)I = NativeEpos2AddSetCursorType(long, int)
  nativeEpos2AddShowClock(J)I = NativeEpos2AddShowClock(long)
  nativeEpos2AddStartSlideShow(JJ)I = NativeEpos2AddStartSlideShow(long, long)
  nativeEpos2AddStopSlideShow(J)I = NativeEpos2AddStopSlideShow(long)
  nativeEpos2ClearCommandBuffer(J)I = NativeEpos2ClearCommandBuffer(long)
  nativeEpos2DspAddText(JLjava/lang/String;JJIJJJ)I = NativeEpos2DspAddText(long, string, long, long, int, long, long, long)
  nativeEpos2GetAdmin(J)Ljava/lang/String; = NativeEpos2GetAdmin(long)
  nativeEpos2GetLocation(J)Ljava/lang/String; = NativeEpos2GetLocation(long)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/linedisplay/DisplayStatusInfo; = NativeEpos2GetStatus(long)
  nativeEpos2SendData(J)I = NativeEpos2SendData(long)
  sendData()V = SendData()
  setConnectionEventListener(Lcom/epson/epos2/ConnectionListener;)V = SetConnectionEventListener(Com.Epson.Epos2.IConnectionListener)
  setReceiveEventListener(Lcom/epson/epos2/linedisplay/ReceiveListener;)V = SetReceiveEventListener(Com.Epson.Epos2.Linedisplay.IReceiveListener)
com/epson/epos2/linedisplay/ReceiveListener = Com.Epson.Epos2.Linedisplay.IReceiveListener
  onDispReceive(Lcom/epson/epos2/linedisplay/LineDisplay;I)V = OnDispReceive(Com.Epson.Epos2.Linedisplay.LineDisplay, int)
com/epson/epos2/linedisplay/ReceiveListener = Com.Epson.Epos2.Linedisplay.IReceiveListener
  onDispReceive(Lcom/epson/epos2/linedisplay/LineDisplay;I)V = OnDispReceive(Com.Epson.Epos2.Linedisplay.LineDisplay, int)
com/epson/epos2/Log = Com.Epson.Epos2.Log
  <init>()V = .ctor()
  LOGLEVEL_LOW = LoglevelLow
  OUTPUT_DISABLE = OutputDisable
  OUTPUT_STORAGE = OutputStorage
  OUTPUT_TCP = OutputTcp
  PERIOD_PERMANENT = PeriodPermanent
  PERIOD_TEMPORARY = PeriodTemporary
  getSdkVersion()Ljava/lang/String; = SdkVersion
  setLogSettings(Landroid/content/Context;IILjava/lang/String;III)V = SetLogSettings(Android.Content.Context, int, int, string, int, int, int)
com/epson/epos2/Log = Com.Epson.Epos2.Log
  <init>()V = .ctor()
  LOGLEVEL_LOW = LoglevelLow
  OUTPUT_DISABLE = OutputDisable
  OUTPUT_STORAGE = OutputStorage
  OUTPUT_TCP = OutputTcp
  PERIOD_PERMANENT = PeriodPermanent
  PERIOD_TEMPORARY = PeriodTemporary
  getSdkVersion()Ljava/lang/String; = SdkVersion
  setLogSettings(Landroid/content/Context;IILjava/lang/String;III)V = SetLogSettings(Android.Content.Context, int, int, string, int, int, int)
com/epson/epos2/msr/Data = Com.Epson.Epos2.Msr.Data
  <init>()V = .ctor()
  getAccountNumber()Ljava/lang/String; = AccountNumber
  getExpirationData()Ljava/lang/String; = ExpirationData
  getFirstName()Ljava/lang/String; = FirstName
  getMiddleInitial()Ljava/lang/String; = MiddleInitial
  getServiceCode()Ljava/lang/String; = ServiceCode
  getSurname()Ljava/lang/String; = Surname
  getTitle()Ljava/lang/String; = Title
  getTrack1()Ljava/lang/String; = Track1
  getTrack1_dd()Ljava/lang/String; = Track1_dd
  getTrack2()Ljava/lang/String; = Track2
  getTrack2_dd()Ljava/lang/String; = Track2_dd
  getTrack4()Ljava/lang/String; = Track4
com/epson/epos2/msr/Data = Com.Epson.Epos2.Msr.Data
  <init>()V = .ctor()
  getAccountNumber()Ljava/lang/String; = AccountNumber
  getExpirationData()Ljava/lang/String; = ExpirationData
  getFirstName()Ljava/lang/String; = FirstName
  getMiddleInitial()Ljava/lang/String; = MiddleInitial
  getServiceCode()Ljava/lang/String; = ServiceCode
  getSurname()Ljava/lang/String; = Surname
  getTitle()Ljava/lang/String; = Title
  getTrack1()Ljava/lang/String; = Track1
  getTrack1_dd()Ljava/lang/String; = Track1_dd
  getTrack2()Ljava/lang/String; = Track2
  getTrack2_dd()Ljava/lang/String; = Track2_dd
  getTrack4()Ljava/lang/String; = Track4
com/epson/epos2/msr/DataListener = Com.Epson.Epos2.Msr.IDataListener
  onData(Lcom/epson/epos2/msr/Msr;Lcom/epson/epos2/msr/Data;)V = OnData(Com.Epson.Epos2.Msr.Msr, Com.Epson.Epos2.Msr.Data)
com/epson/epos2/msr/DataListener = Com.Epson.Epos2.Msr.IDataListener
  onData(Lcom/epson/epos2/msr/Msr;Lcom/epson/epos2/msr/Data;)V = OnData(Com.Epson.Epos2.Msr.Msr, Com.Epson.Epos2.Msr.Data)
com/epson/epos2/msr/Msr = Com.Epson.Epos2.Msr.Msr
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  EVENT_DISCONNECT = EventDisconnect
  EVENT_RECONNECT = EventReconnect
  EVENT_RECONNECTING = EventReconnecting
  FALSE = False
  PARAM_DEFAULT = ParamDefault
  TRUE = True
  getAdmin()Ljava/lang/String; = Admin
  getLocation()Ljava/lang/String; = Location
  getStauts()Lcom/epson/epos2/msr/MsrStatusInfo; = Stauts
  checkHandle()V = CheckHandle()
  connect(Ljava/lang/String;I)V = Connect(string, int)
  disconnect()V = Disconnect()
  finalize()V = Finalize()
  initializeMsrInstance()V = InitializeMsrInstance()
  nativeEpos2GetAdmin(J)Ljava/lang/String; = NativeEpos2GetAdmin(long)
  nativeEpos2GetLocation(J)Ljava/lang/String; = NativeEpos2GetLocation(long)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/msr/MsrStatusInfo; = NativeEpos2GetStatus(long)
  onData(Lcom/epson/epos2/msr/Data;)V = OnData(Com.Epson.Epos2.Msr.Data)
  setConnectionEventListener(Lcom/epson/epos2/ConnectionListener;)V = SetConnectionEventListener(Com.Epson.Epos2.IConnectionListener)
  setDataEventListener(Lcom/epson/epos2/msr/DataListener;)V = SetDataEventListener(Com.Epson.Epos2.Msr.IDataListener)
com/epson/epos2/msr/Msr = Com.Epson.Epos2.Msr.Msr
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  EVENT_DISCONNECT = EventDisconnect
  EVENT_RECONNECT = EventReconnect
  EVENT_RECONNECTING = EventReconnecting
  FALSE = False
  PARAM_DEFAULT = ParamDefault
  TRUE = True
  getAdmin()Ljava/lang/String; = Admin
  getLocation()Ljava/lang/String; = Location
  getStauts()Lcom/epson/epos2/msr/MsrStatusInfo; = Stauts
  checkHandle()V = CheckHandle()
  connect(Ljava/lang/String;I)V = Connect(string, int)
  disconnect()V = Disconnect()
  initializeMsrInstance()V = InitializeMsrInstance()
  nativeEpos2GetAdmin(J)Ljava/lang/String; = NativeEpos2GetAdmin(long)
  nativeEpos2GetLocation(J)Ljava/lang/String; = NativeEpos2GetLocation(long)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/msr/MsrStatusInfo; = NativeEpos2GetStatus(long)
  onData(Lcom/epson/epos2/msr/Data;)V = OnData(Com.Epson.Epos2.Msr.Data)
  setConnectionEventListener(Lcom/epson/epos2/ConnectionListener;)V = SetConnectionEventListener(Com.Epson.Epos2.IConnectionListener)
  setDataEventListener(Lcom/epson/epos2/msr/DataListener;)V = SetDataEventListener(Com.Epson.Epos2.Msr.IDataListener)
com/epson/epos2/msr/MsrStatusInfo = Com.Epson.Epos2.Msr.MsrStatusInfo
  <init>()V = .ctor()
  getConnection()I = Connection
com/epson/epos2/msr/MsrStatusInfo = Com.Epson.Epos2.Msr.MsrStatusInfo
  <init>()V = .ctor()
  getConnection()I = Connection
com/epson/epos2/otherperipheral/OtherPeripheral = Com.Epson.Epos2.Otherperipheral.OtherPeripheral
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  EVENT_DISCONNECT = EventDisconnect
  EVENT_RECONNECT = EventReconnect
  EVENT_RECONNECTING = EventReconnecting
  FALSE = False
  PARAM_DEFAULT = ParamDefault
  TRUE = True
  getAdmin()Ljava/lang/String; = Admin
  getLocation()Ljava/lang/String; = Location
  getStauts()Lcom/epson/epos2/otherperipheral/OtherPeripheralStatusInfo; = Stauts
  checkHandle()V = CheckHandle()
  connect(Ljava/lang/String;I)V = Connect(string, int)
  disconnect()V = Disconnect()
  finalize()V = Finalize()
  initializeOtherInstance()V = InitializeOtherInstance()
  nativeEpos2GetAdmin(J)Ljava/lang/String; = NativeEpos2GetAdmin(long)
  nativeEpos2GetLocation(J)Ljava/lang/String; = NativeEpos2GetLocation(long)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/otherperipheral/OtherPeripheralStatusInfo; = NativeEpos2GetStatus(long)
  nativeEpos2SendData(JLjava/lang/String;Ljava/lang/String;)I = NativeEpos2SendData(long, string, string)
  onOtherReceive(Ljava/lang/String;Ljava/lang/String;)V = OnOtherReceive(string, string)
  sendData(Ljava/lang/String;Ljava/lang/String;)V = SendData(string, string)
  setConnectionEventListener(Lcom/epson/epos2/ConnectionListener;)V = SetConnectionEventListener(Com.Epson.Epos2.IConnectionListener)
  setReceiveEventListener(Lcom/epson/epos2/otherperipheral/ReceiveListener;)V = SetReceiveEventListener(Com.Epson.Epos2.Otherperipheral.IReceiveListener)
com/epson/epos2/otherperipheral/OtherPeripheral = Com.Epson.Epos2.Otherperipheral.OtherPeripheral
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  EVENT_DISCONNECT = EventDisconnect
  EVENT_RECONNECT = EventReconnect
  EVENT_RECONNECTING = EventReconnecting
  FALSE = False
  PARAM_DEFAULT = ParamDefault
  TRUE = True
  getAdmin()Ljava/lang/String; = Admin
  getLocation()Ljava/lang/String; = Location
  getStauts()Lcom/epson/epos2/otherperipheral/OtherPeripheralStatusInfo; = Stauts
  checkHandle()V = CheckHandle()
  connect(Ljava/lang/String;I)V = Connect(string, int)
  disconnect()V = Disconnect()
  initializeOtherInstance()V = InitializeOtherInstance()
  nativeEpos2GetAdmin(J)Ljava/lang/String; = NativeEpos2GetAdmin(long)
  nativeEpos2GetLocation(J)Ljava/lang/String; = NativeEpos2GetLocation(long)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/otherperipheral/OtherPeripheralStatusInfo; = NativeEpos2GetStatus(long)
  nativeEpos2SendData(JLjava/lang/String;Ljava/lang/String;)I = NativeEpos2SendData(long, string, string)
  onOtherReceive(Ljava/lang/String;Ljava/lang/String;)V = OnOtherReceive(string, string)
  sendData(Ljava/lang/String;Ljava/lang/String;)V = SendData(string, string)
  setConnectionEventListener(Lcom/epson/epos2/ConnectionListener;)V = SetConnectionEventListener(Com.Epson.Epos2.IConnectionListener)
  setReceiveEventListener(Lcom/epson/epos2/otherperipheral/ReceiveListener;)V = SetReceiveEventListener(Com.Epson.Epos2.Otherperipheral.IReceiveListener)
com/epson/epos2/otherperipheral/OtherPeripheralStatusInfo = Com.Epson.Epos2.Otherperipheral.OtherPeripheralStatusInfo
  <init>()V = .ctor()
  getConnection()I = Connection
com/epson/epos2/otherperipheral/OtherPeripheralStatusInfo = Com.Epson.Epos2.Otherperipheral.OtherPeripheralStatusInfo
  <init>()V = .ctor()
  getConnection()I = Connection
com/epson/epos2/otherperipheral/ReceiveListener = Com.Epson.Epos2.Otherperipheral.IReceiveListener
  onOtherReceive(Lcom/epson/epos2/otherperipheral/OtherPeripheral;Ljava/lang/String;Ljava/lang/String;)V = OnOtherReceive(Com.Epson.Epos2.Otherperipheral.OtherPeripheral, string, string)
com/epson/epos2/otherperipheral/ReceiveListener = Com.Epson.Epos2.Otherperipheral.IReceiveListener
  onOtherReceive(Lcom/epson/epos2/otherperipheral/OtherPeripheral;Ljava/lang/String;Ljava/lang/String;)V = OnOtherReceive(Com.Epson.Epos2.Otherperipheral.OtherPeripheral, string, string)
com/epson/epos2/poskeyboard/KeyPressListener = Com.Epson.Epos2.Poskeyboard.IKeyPressListener
  onPosKbdKeyPress(Lcom/epson/epos2/poskeyboard/PosKeyboard;I)V = OnPosKbdKeyPress(Com.Epson.Epos2.Poskeyboard.PosKeyboard, int)
com/epson/epos2/poskeyboard/KeyPressListener = Com.Epson.Epos2.Poskeyboard.IKeyPressListener
  onPosKbdKeyPress(Lcom/epson/epos2/poskeyboard/PosKeyboard;I)V = OnPosKbdKeyPress(Com.Epson.Epos2.Poskeyboard.PosKeyboard, int)
com/epson/epos2/poskeyboard/PosKeyboard = Com.Epson.Epos2.Poskeyboard.PosKeyboard
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  EVENT_DISCONNECT = EventDisconnect
  EVENT_RECONNECT = EventReconnect
  EVENT_RECONNECTING = EventReconnecting
  FALSE = False
  PARAM_DEFAULT = ParamDefault
  TRUE = True
  getAdmin()Ljava/lang/String; = Admin
  getLocation()Ljava/lang/String; = Location
  getStauts()Lcom/epson/epos2/poskeyboard/PosKeyboardStatusInfo; = Stauts
  checkHandle()V = CheckHandle()
  connect(Ljava/lang/String;I)V = Connect(string, int)
  disconnect()V = Disconnect()
  finalize()V = Finalize()
  initializePosKbdInstance()V = InitializePosKbdInstance()
  nativeEpos2GetAdmin(J)Ljava/lang/String; = NativeEpos2GetAdmin(long)
  nativeEpos2GetLocation(J)Ljava/lang/String; = NativeEpos2GetLocation(long)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/poskeyboard/PosKeyboardStatusInfo; = NativeEpos2GetStatus(long)
  onPosKbdKeyPress(I)V = OnPosKbdKeyPress(int)
  setConnectionEventListener(Lcom/epson/epos2/ConnectionListener;)V = SetConnectionEventListener(Com.Epson.Epos2.IConnectionListener)
  setKeyPressEventListener(Lcom/epson/epos2/poskeyboard/KeyPressListener;)V = SetKeyPressEventListener(Com.Epson.Epos2.Poskeyboard.IKeyPressListener)
com/epson/epos2/poskeyboard/PosKeyboard = Com.Epson.Epos2.Poskeyboard.PosKeyboard
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  EVENT_DISCONNECT = EventDisconnect
  EVENT_RECONNECT = EventReconnect
  EVENT_RECONNECTING = EventReconnecting
  FALSE = False
  PARAM_DEFAULT = ParamDefault
  TRUE = True
  getAdmin()Ljava/lang/String; = Admin
  getLocation()Ljava/lang/String; = Location
  getStauts()Lcom/epson/epos2/poskeyboard/PosKeyboardStatusInfo; = Stauts
  checkHandle()V = CheckHandle()
  connect(Ljava/lang/String;I)V = Connect(string, int)
  disconnect()V = Disconnect()
  initializePosKbdInstance()V = InitializePosKbdInstance()
  nativeEpos2GetAdmin(J)Ljava/lang/String; = NativeEpos2GetAdmin(long)
  nativeEpos2GetLocation(J)Ljava/lang/String; = NativeEpos2GetLocation(long)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/poskeyboard/PosKeyboardStatusInfo; = NativeEpos2GetStatus(long)
  onPosKbdKeyPress(I)V = OnPosKbdKeyPress(int)
  setConnectionEventListener(Lcom/epson/epos2/ConnectionListener;)V = SetConnectionEventListener(Com.Epson.Epos2.IConnectionListener)
  setKeyPressEventListener(Lcom/epson/epos2/poskeyboard/KeyPressListener;)V = SetKeyPressEventListener(Com.Epson.Epos2.Poskeyboard.IKeyPressListener)
com/epson/epos2/poskeyboard/PosKeyboardStatusInfo = Com.Epson.Epos2.Poskeyboard.PosKeyboardStatusInfo
  <init>()V = .ctor()
  getConnection()I = Connection
com/epson/epos2/poskeyboard/PosKeyboardStatusInfo = Com.Epson.Epos2.Poskeyboard.PosKeyboardStatusInfo
  <init>()V = .ctor()
  getConnection()I = Connection
com/epson/epos2/printer/EposSdkJson = Com.Epson.Epos2.Printer.EposSdkJson
  <init>()V = .ctor()
  appendSdkJson(Lorg/json/JSONObject;[Ljava/lang/String;Ljava/lang/String;)V = AppendSdkJson(Org.Json.JSONObject, string[], string)
  createSdkJson([[Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = CreateSdkJson(string[][], string)
  jsonToSdkJson(Ljava/lang/String;)Ljava/lang/String; = JsonToSdkJson(string)
  jsonToSdkJsonDeprecated(Ljava/lang/String;)Ljava/lang/String; = JsonToSdkJsonDeprecated(string)
com/epson/epos2/printer/EposSdkJson = Com.Epson.Epos2.Printer.EposSdkJson
  <init>()V = .ctor()
  appendSdkJson(Lorg/json/JSONObject;[Ljava/lang/String;Ljava/lang/String;)V = AppendSdkJson(Org.Json.JSONObject, string[], string)
  createSdkJson([[Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = CreateSdkJson(string[][], string)
  jsonToSdkJson(Ljava/lang/String;)Ljava/lang/String; = JsonToSdkJson(string)
  jsonToSdkJsonDeprecated(Ljava/lang/String;)Ljava/lang/String; = JsonToSdkJsonDeprecated(string)
com/epson/epos2/printer/FirmwareHttpsUpdater = Com.Epson.Epos2.Printer.FirmwareHttpsUpdater
  <init>(Lcom/epson/epos2/printer/FirmwareOption;)V = .ctor(Com.Epson.Epos2.Printer.FirmwareOption)
  mClassOutputLog = MClassOutputLog
  mOutputLogInfoMethod = MOutputLogInfoMethod
  checkSecurity(Ljava/lang/String;I)I = CheckSecurity(string, int)
  createFirmwareFile(Landroid/content/Context;[BLjava/lang/String;)Ljava/lang/String; = CreateFirmwareFile(Android.Content.Context, byte[], string)
  createFirmwareFileWithMultiPart(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = CreateFirmwareFileWithMultiPart(Android.Content.Context, string, string)
  deleteFirmwareFile(Ljava/lang/String;)V = DeleteFirmwareFile(string)
  initializeOuputLogFunctions()V = InitializeOuputLogFunctions()
  outputLogInfo([Ljava/lang/Object;)V = OutputLogInfo(params Java.Lang.Object[])
  preUpdate(Ljava/lang/String;I)I = PreUpdate(string, int)
  update(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Lcom/epson/epos2/printer/FirmwareHttpsUpdater$OnProgressListener;)I = Update(Android.Content.Context, string, string, Com.Epson.Epos2.Printer.FirmwareHttpsUpdater.IOnProgressListener)
com/epson/epos2/printer/FirmwareHttpsUpdater = Com.Epson.Epos2.Printer.FirmwareHttpsUpdater
  <init>(Lcom/epson/epos2/printer/FirmwareOption;)V = .ctor(Com.Epson.Epos2.Printer.FirmwareOption)
  mClassOutputLog = MClassOutputLog
  mOutputLogInfoMethod = MOutputLogInfoMethod
  checkSecurity(Ljava/lang/String;I)I = CheckSecurity(string, int)
  createFirmwareFile(Landroid/content/Context;[BLjava/lang/String;)Ljava/lang/String; = CreateFirmwareFile(Android.Content.Context, byte[], string)
  createFirmwareFileWithMultiPart(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = CreateFirmwareFileWithMultiPart(Android.Content.Context, string, string)
  deleteFirmwareFile(Ljava/lang/String;)V = DeleteFirmwareFile(string)
  initializeOuputLogFunctions()V = InitializeOuputLogFunctions()
  outputLogInfo([Ljava/lang/Object;)V = OutputLogInfo(params Java.Lang.Object[])
  preUpdate(Ljava/lang/String;I)I = PreUpdate(string, int)
  update(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Lcom/epson/epos2/printer/FirmwareHttpsUpdater$OnProgressListener;)I = Update(Android.Content.Context, string, string, Com.Epson.Epos2.Printer.FirmwareHttpsUpdater.IOnProgressListener)
com/epson/epos2/printer/FirmwareInfo = Com.Epson.Epos2.Printer.FirmwareInfo
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string)
  getJson()Lorg/json/JSONObject; = Json
  getModel()Ljava/lang/String; = Model
  getRequestModel()Ljava/lang/String; = RequestModel
  getVersion()Ljava/lang/String; = Version
  makePrinterUnits(Lorg/json/JSONObject;)Ljava/util/ArrayList; = MakePrinterUnits(Org.Json.JSONObject)
  setVersion(Ljava/lang/String;)V = SetVersion(string)
com/epson/epos2/printer/FirmwareInfo = Com.Epson.Epos2.Printer.FirmwareInfo
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string)
  getJson()Lorg/json/JSONObject; = Json
  getModel()Ljava/lang/String; = Model
  getRequestModel()Ljava/lang/String; = RequestModel
  getVersion()Ljava/lang/String; = Version
  makePrinterUnits(Lorg/json/JSONObject;)Ljava/util/ArrayList; = MakePrinterUnits(Org.Json.JSONObject)
  setVersion(Ljava/lang/String;)V = SetVersion(string)
com/epson/epos2/printer/FirmwareInfoEx = Com.Epson.Epos2.Printer.FirmwareInfoEx
  <init>(ILcom/epson/epos2/printer/FirmwareInfo;Ljava/lang/String;)V = .ctor(int, Com.Epson.Epos2.Printer.FirmwareInfo, string)
  getBootId()Ljava/lang/String; = BootId
  getFirmwareInfo()Lcom/epson/epos2/printer/FirmwareInfo; = FirmwareInfo
  getPrinterMode()I = PrinterMode
com/epson/epos2/printer/FirmwareInfoEx = Com.Epson.Epos2.Printer.FirmwareInfoEx
  <init>(ILcom/epson/epos2/printer/FirmwareInfo;Ljava/lang/String;)V = .ctor(int, Com.Epson.Epos2.Printer.FirmwareInfo, string)
  getBootId()Ljava/lang/String; = BootId
  getFirmwareInfo()Lcom/epson/epos2/printer/FirmwareInfo; = FirmwareInfo
  getPrinterMode()I = PrinterMode
com/epson/epos2/printer/FirmwareOption = Com.Epson.Epos2.Printer.FirmwareOption
  <init>()V = .ctor()
  getDoVerification()Ljava/lang/Boolean; = DoVerification
  setDoVerification(Ljava/lang/Boolean;)V = DoVerification
  getPrinterId()Ljava/lang/String; = PrinterId
  setPrinterId(Ljava/lang/String;)V = PrinterId
  getPrinterPassword()Ljava/lang/String; = PrinterPassword
  setPrinterPassword(Ljava/lang/String;)V = PrinterPassword
com/epson/epos2/printer/FirmwareOption = Com.Epson.Epos2.Printer.FirmwareOption
  <init>()V = .ctor()
  getDoVerification()Ljava/lang/Boolean; = DoVerification
  setDoVerification(Ljava/lang/Boolean;)V = DoVerification
  getPrinterId()Ljava/lang/String; = PrinterId
  setPrinterId(Ljava/lang/String;)V = PrinterId
  getPrinterPassword()Ljava/lang/String; = PrinterPassword
  setPrinterPassword(Ljava/lang/String;)V = PrinterPassword
com/epson/epos2/printer/FirmwareType = Com.Epson.Epos2.Printer.FirmwareType
  <init>()V = .ctor()
  FIRMWARE_FILE_EFX = FirmwareFileEfx
  FIRMWARE_FILE_EFX_HUBBOX = FirmwareFileEfxHubbox
  FIRMWARE_FILE_EFX_SECURE = FirmwareFileEfxSecure
  FIRMWARE_FILE_MOT = FirmwareFileMot
com/epson/epos2/printer/FirmwareType = Com.Epson.Epos2.Printer.FirmwareType
  <init>()V = .ctor()
  FIRMWARE_FILE_EFX = FirmwareFileEfx
  FIRMWARE_FILE_EFX_HUBBOX = FirmwareFileEfxHubbox
  FIRMWARE_FILE_EFX_SECURE = FirmwareFileEfxSecure
  FIRMWARE_FILE_MOT = FirmwareFileMot
com/epson/epos2/printer/FirmwareUpdateListener = Com.Epson.Epos2.Printer.IFirmwareUpdateListener
  onDownloadFirmwareList(I[Lcom/epson/epos2/printer/FirmwareInfo;)V = OnDownloadFirmwareList(int, Com.Epson.Epos2.Printer.FirmwareInfo[])
  onFirmwareUpdateProgress(Ljava/lang/String;F)V = OnFirmwareUpdateProgress(string, float)
  onReceiveFirmwareInformation(Lcom/epson/epos2/printer/FirmwareInfo;)V = OnReceiveFirmwareInformation(Com.Epson.Epos2.Printer.FirmwareInfo)
  onUpdateFirmware(II)V = OnUpdateFirmware(int, int)
  onUpdateVerify(I)V = OnUpdateVerify(int)
com/epson/epos2/printer/FirmwareUpdateListener = Com.Epson.Epos2.Printer.IFirmwareUpdateListener
  onDownloadFirmwareList(I[Lcom/epson/epos2/printer/FirmwareInfo;)V = OnDownloadFirmwareList(int, Com.Epson.Epos2.Printer.FirmwareInfo[])
  onFirmwareUpdateProgress(Ljava/lang/String;F)V = OnFirmwareUpdateProgress(string, float)
  onReceiveFirmwareInformation(Lcom/epson/epos2/printer/FirmwareInfo;)V = OnReceiveFirmwareInformation(Com.Epson.Epos2.Printer.FirmwareInfo)
  onUpdateFirmware(II)V = OnUpdateFirmware(int, int)
  onUpdateVerify(I)V = OnUpdateVerify(int)
com/epson/epos2/printer/FirmwareUpdateProgress = Com.Epson.Epos2.Printer.FirmwareUpdateProgress
  mClassOutputLog = MClassOutputLog
  mOutputLogInfoMethod = MOutputLogInfoMethod
  initializeOuputLogFunctions()V = InitializeOuputLogFunctions()
  nativeEpos2GetFirmUpdateProgress(J)F = NativeEpos2GetFirmUpdateProgress(long)
  nativeEpos2SetFirmUpdateProgress(JF)V = NativeEpos2SetFirmUpdateProgress(long, float)
  OnUpdateFirmwareHttpsProgress(F)V = OnUpdateFirmwareHttpsProgress(float)
  outputLogInfo([Ljava/lang/Object;)V = OutputLogInfo(params Java.Lang.Object[])
  startMonitor(J)V = StartMonitor(long)
  stopMonitor()V = StopMonitor()
com/epson/epos2/printer/FirmwareUpdateProgress = Com.Epson.Epos2.Printer.FirmwareUpdateProgress
  mClassOutputLog = MClassOutputLog
  mOutputLogInfoMethod = MOutputLogInfoMethod
  initializeOuputLogFunctions()V = InitializeOuputLogFunctions()
  nativeEpos2GetFirmUpdateProgress(J)F = NativeEpos2GetFirmUpdateProgress(long)
  nativeEpos2SetFirmUpdateProgress(JF)V = NativeEpos2SetFirmUpdateProgress(long, float)
  OnUpdateFirmwareHttpsProgress(F)V = OnUpdateFirmwareHttpsProgress(float)
  outputLogInfo([Ljava/lang/Object;)V = OutputLogInfo(params Java.Lang.Object[])
  startMonitor(J)V = StartMonitor(long)
  stopMonitor()V = StopMonitor()
com/epson/epos2/printer/GetPrinterSettingExListener = Com.Epson.Epos2.Printer.IGetPrinterSettingExListener
  onGetPrinterSettingEx(Lcom/epson/epos2/printer/Printer;ILjava/lang/String;)V = OnGetPrinterSettingEx(Com.Epson.Epos2.Printer.Printer, int, string)
com/epson/epos2/printer/GetPrinterSettingExListener = Com.Epson.Epos2.Printer.IGetPrinterSettingExListener
  onGetPrinterSettingEx(Lcom/epson/epos2/printer/Printer;ILjava/lang/String;)V = OnGetPrinterSettingEx(Com.Epson.Epos2.Printer.Printer, int, string)
com/epson/epos2/printer/HybdReceiveListener = Com.Epson.Epos2.Printer.IHybdReceiveListener
  onHybdReceive(Lcom/epson/epos2/printer/HybridPrinter;IILjava/lang/String;Lcom/epson/epos2/printer/HybridPrinterStatusInfo;)V = OnHybdReceive(Com.Epson.Epos2.Printer.HybridPrinter, int, int, string, Com.Epson.Epos2.Printer.HybridPrinterStatusInfo)
com/epson/epos2/printer/HybdReceiveListener = Com.Epson.Epos2.Printer.IHybdReceiveListener
  onHybdReceive(Lcom/epson/epos2/printer/HybridPrinter;IILjava/lang/String;Lcom/epson/epos2/printer/HybridPrinterStatusInfo;)V = OnHybdReceive(Com.Epson.Epos2.Printer.HybridPrinter, int, int, string, Com.Epson.Epos2.Printer.HybridPrinterStatusInfo)
com/epson/epos2/printer/HybdStatusChangeListener = Com.Epson.Epos2.Printer.IHybdStatusChangeListener
  onHybdStatusChange(Lcom/epson/epos2/printer/HybridPrinter;I)V = OnHybdStatusChange(Com.Epson.Epos2.Printer.HybridPrinter, int)
com/epson/epos2/printer/HybdStatusChangeListener = Com.Epson.Epos2.Printer.IHybdStatusChangeListener
  onHybdStatusChange(Lcom/epson/epos2/printer/HybridPrinter;I)V = OnHybdStatusChange(Com.Epson.Epos2.Printer.HybridPrinter, int)
com/epson/epos2/printer/HybridPrinter = Com.Epson.Epos2.Printer.HybridPrinter
  <init>(ILandroid/content/Context;)V = .ctor(int, Android.Content.Context)
  EVENT_INSERTION_WAIT_MICR = EventInsertionWaitMicr
  EVENT_INSERTION_WAIT_NONE = EventInsertionWaitNone
  EVENT_INSERTION_WAIT_SLIP = EventInsertionWaitSlip
  EVENT_INSERTION_WAIT_VALIDATION = EventInsertionWaitValidation
  EVENT_REMOVAL_WAIT_NONE = EventRemovalWaitNone
  EVENT_REMOVAL_WAIT_PAPER = EventRemovalWaitPaper
  EVENT_SLIP_PAPER_EMPTY = EventSlipPaperEmpty
  EVENT_SLIP_PAPER_OK = EventSlipPaperOk
  INSERTION_WAIT_MICR = InsertionWaitMicr
  INSERTION_WAIT_NONE = InsertionWaitNone
  INSERTION_WAIT_SLIP = InsertionWaitSlip
  INSERTION_WAIT_VALIDATION = InsertionWaitValidation
  METHOD_CANCELINSERTION = MethodCancelinsertion
  METHOD_CLEANMICRREADER = MethodCleanmicrreader
  METHOD_EJECTPAPER = MethodEjectpaper
  METHOD_READMICRDATA = MethodReadmicrdata
  METHOD_SENDDATA = MethodSenddata
  METHOD_WAITINSERTION = MethodWaitinsertion
  MICR_FONT_CMC7 = MicrFontCmc7
  MICR_FONT_E13B = MicrFontE13b
  PAPER_TYPE_ENDORSE = PaperTypeEndorse
  PAPER_TYPE_RECEIPT = PaperTypeReceipt
  PAPER_TYPE_SLIP = PaperTypeSlip
  PAPER_TYPE_VALIDATION = PaperTypeValidation
  SLIP_PAPER_EMPTY = SlipPaperEmpty
  SLIP_PAPER_OK = SlipPaperOk
  getAdmin()Ljava/lang/String; = Admin
  getInterval()I = Interval
  setInterval(I)V = Interval
  getLocation()Ljava/lang/String; = Location
  getMode40Cpl()I = Mode40Cpl
  setMode40Cpl(I)V = Mode40Cpl
  getPaperType()I = PaperType
  getStatus()Lcom/epson/epos2/printer/HybridPrinterStatusInfo; = Status
  getWaitTime()I = WaitTime
  setWaitTime(I)V = WaitTime
  addBarcode(Ljava/lang/String;IIIII)V = AddBarcode(string, int, int, int, int, int)
  addCommand([B)V = AddCommand(byte[])
  addCut(I)V = AddCut(int)
  addFeedLine(I)V = AddFeedLine(int)
  addFeedPosition(I)V = AddFeedPosition(int)
  addFeedUnit(I)V = AddFeedUnit(int)
  addHPosition(I)V = AddHPosition(int)
  addImage(Landroid/graphics/Bitmap;IIIIIIIDI)V = AddImage(Android.Graphics.Bitmap, int, int, int, int, int, int, int, double, int)
  addLineSpace(I)V = AddLineSpace(int)
  addLogo(II)V = AddLogo(int, int)
  addPageArea(IIII)V = AddPageArea(int, int, int, int)
  addPageBegin()V = AddPageBegin()
  addPageDirection(I)V = AddPageDirection(int)
  addPageEnd()V = AddPageEnd()
  addPageLine(IIIII)V = AddPageLine(int, int, int, int, int)
  addPagePosition(II)V = AddPagePosition(int, int)
  addPageRectangle(IIIII)V = AddPageRectangle(int, int, int, int, int)
  addPulse(II)V = AddPulse(int, int)
  addRotateBegin()V = AddRotateBegin()
  addRotateEnd()V = AddRotateEnd()
  addSound(III)V = AddSound(int, int, int)
  addSymbol(Ljava/lang/String;IIIII)V = AddSymbol(string, int, int, int, int, int)
  addText(Ljava/lang/String;)V = AddText(string)
  addTextAlign(I)V = AddTextAlign(int)
  addTextFont(I)V = AddTextFont(int)
  addTextLang(I)V = AddTextLang(int)
  addTextRotate(I)V = AddTextRotate(int)
  addTextSize(II)V = AddTextSize(int, int)
  addTextSmooth(I)V = AddTextSmooth(int)
  addTextStyle(IIII)V = AddTextStyle(int, int, int, int)
  beginTransaction()V = BeginTransaction()
  cancelInsertion()V = CancelInsertion()
  checkHandle()V = CheckHandle()
  cleanMicrReader(I)V = CleanMicrReader(int)
  clearCommandBuffer()V = ClearCommandBuffer()
  connect(Ljava/lang/String;I)V = Connect(string, int)
  disconnect()V = Disconnect()
  ejectPaper()V = EjectPaper()
  endTransaction()V = EndTransaction()
  finalize()V = Finalize()
  forceCommand([BI)V = ForceCommand(byte[], int)
  forcePulse(III)V = ForcePulse(int, int, int)
  forceRecover(I)V = ForceRecover(int)
  forceReset(I)V = ForceReset(int)
  nativeEpos2AddBarcode(JLjava/lang/String;IIIJJ)I = NativeEpos2AddBarcode(long, string, int, int, int, long, long)
  nativeEpos2AddCommand(J[B)I = NativeEpos2AddCommand(long, byte[])
  nativeEpos2AddCut(JI)I = NativeEpos2AddCut(long, int)
  nativeEpos2AddFeedLine(JJ)I = NativeEpos2AddFeedLine(long, long)
  nativeEpos2AddFeedPosition(JI)I = NativeEpos2AddFeedPosition(long, int)
  nativeEpos2AddFeedUnit(JJ)I = NativeEpos2AddFeedUnit(long, long)
  nativeEpos2AddHPosition(JJ)I = NativeEpos2AddHPosition(long, long)
  nativeEpos2AddImage(J[BJJJJJJIIIDI)I = NativeEpos2AddImage(long, byte[], long, long, long, long, long, long, int, int, int, double, int)
  nativeEpos2AddLineSpace(JJ)I = NativeEpos2AddLineSpace(long, long)
  nativeEpos2AddLogo(JJJ)I = NativeEpos2AddLogo(long, long, long)
  nativeEpos2AddPageArea(JJJJJ)I = NativeEpos2AddPageArea(long, long, long, long, long)
  nativeEpos2AddPageBegin(J)I = NativeEpos2AddPageBegin(long)
  nativeEpos2AddPageDirection(JI)I = NativeEpos2AddPageDirection(long, int)
  nativeEpos2AddPageEnd(J)I = NativeEpos2AddPageEnd(long)
  nativeEpos2AddPageLine(JJJJJI)I = NativeEpos2AddPageLine(long, long, long, long, long, int)
  nativeEpos2AddPagePosition(JJJ)I = NativeEpos2AddPagePosition(long, long, long)
  nativeEpos2AddPageRectangle(JJJJJI)I = NativeEpos2AddPageRectangle(long, long, long, long, long, int)
  nativeEpos2AddPulse(JII)I = NativeEpos2AddPulse(long, int, int)
  nativeEpos2AddRotateBegin(J)I = NativeEpos2AddRotateBegin(long)
  nativeEpos2AddRotateEnd(J)I = NativeEpos2AddRotateEnd(long)
  nativeEpos2AddSound(JIJJ)I = NativeEpos2AddSound(long, int, long, long)
  nativeEpos2AddSymbol(JLjava/lang/String;IIJJJ)I = NativeEpos2AddSymbol(long, string, int, int, long, long, long)
  nativeEpos2AddText(JLjava/lang/String;)I = NativeEpos2AddText(long, string)
  nativeEpos2AddTextAlign(JI)I = NativeEpos2AddTextAlign(long, int)
  nativeEpos2AddTextFont(JI)I = NativeEpos2AddTextFont(long, int)
  nativeEpos2AddTextLang(JI)I = NativeEpos2AddTextLang(long, int)
  nativeEpos2AddTextRotate(JI)I = NativeEpos2AddTextRotate(long, int)
  nativeEpos2AddTextSize(JJJ)I = NativeEpos2AddTextSize(long, long, long)
  nativeEpos2AddTextSmooth(JI)I = NativeEpos2AddTextSmooth(long, int)
  nativeEpos2AddTextStyle(JIIII)I = NativeEpos2AddTextStyle(long, int, int, int, int)
  nativeEpos2BeginTransaction(J)I = NativeEpos2BeginTransaction(long)
  nativeEpos2CancelInsertion(J)I = NativeEpos2CancelInsertion(long)
  nativeEpos2CleanMicrReader(JJJ)I = NativeEpos2CleanMicrReader(long, long, long)
  nativeEpos2ClearCommandBuffer(J)I = NativeEpos2ClearCommandBuffer(long)
  nativeEpos2Connect(JLjava/lang/String;JLjava/lang/Object;)I = NativeEpos2Connect(long, string, long, Java.Lang.Object)
  nativeEpos2CreateHandle(I[J)I = NativeEpos2CreateHandle(int, long[])
  nativeEpos2DestroyHandle(J)I = NativeEpos2DestroyHandle(long)
  nativeEpos2Disconnect(J)I = NativeEpos2Disconnect(long)
  nativeEpos2EjectPaper(J)I = NativeEpos2EjectPaper(long)
  nativeEpos2EndTransaction(J)I = NativeEpos2EndTransaction(long)
  nativeEpos2ForceCommand(J[BII)I = NativeEpos2ForceCommand(long, byte[], int, int)
  nativeEpos2ForcePulse(JIII)I = NativeEpos2ForcePulse(long, int, int, int)
  nativeEpos2ForceRecover(JI)I = NativeEpos2ForceRecover(long, int)
  nativeEpos2ForceReset(JI)I = NativeEpos2ForceReset(long, int)
  nativeEpos2GetAdmin(J)Ljava/lang/String; = NativeEpos2GetAdmin(long)
  nativeEpos2GetCommandBuffer(JI)I = NativeEpos2GetCommandBuffer(long, int)
  nativeEpos2GetLocation(J)Ljava/lang/String; = NativeEpos2GetLocation(long)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/printer/HybridPrinterStatusInfo; = NativeEpos2GetStatus(long)
  nativeEpos2ReadMicrData(JIJJ)I = NativeEpos2ReadMicrData(long, int, long, long)
  nativeEpos2SelectPaperType(JI)I = NativeEpos2SelectPaperType(long, int)
  nativeEpos2SendData(JIJI)I = NativeEpos2SendData(long, int, long, int)
  nativeEpos2SetInterval(JJ)I = NativeEpos2SetInterval(long, long)
  nativeEpos2SetMode40Cpl(JI)I = NativeEpos2SetMode40Cpl(long, int)
  nativeEpos2SetWaitTime(JJ)I = NativeEpos2SetWaitTime(long, long)
  nativeEpos2StartMonitor(J)I = NativeEpos2StartMonitor(long)
  nativeEpos2StopMonitor(J)I = NativeEpos2StopMonitor(long)
  nativeEpos2WaitInsertion(JJJ)I = NativeEpos2WaitInsertion(long, long, long)
  readMicrData(II)V = ReadMicrData(int, int)
  selectPaperType(I)V = SelectPaperType(int)
  sendData(I)V = SendData(int)
  setConnectionEventListener(Lcom/epson/epos2/ConnectionListener;)V = SetConnectionEventListener(Com.Epson.Epos2.IConnectionListener)
  setReceiveEventListener(Lcom/epson/epos2/printer/HybdReceiveListener;)V = SetReceiveEventListener(Com.Epson.Epos2.Printer.IHybdReceiveListener)
  setStatusChangeEventListener(Lcom/epson/epos2/printer/HybdStatusChangeListener;)V = SetStatusChangeEventListener(Com.Epson.Epos2.Printer.IHybdStatusChangeListener)
  startMonitor()V = StartMonitor()
  stopMonitor()V = StopMonitor()
  waitInsertion(I)V = WaitInsertion(int)
com/epson/epos2/printer/HybridPrinter = Com.Epson.Epos2.Printer.HybridPrinter
  <init>(ILandroid/content/Context;)V = .ctor(int, Android.Content.Context)
  EVENT_INSERTION_WAIT_MICR = EventInsertionWaitMicr
  EVENT_INSERTION_WAIT_NONE = EventInsertionWaitNone
  EVENT_INSERTION_WAIT_SLIP = EventInsertionWaitSlip
  EVENT_INSERTION_WAIT_VALIDATION = EventInsertionWaitValidation
  EVENT_REMOVAL_WAIT_NONE = EventRemovalWaitNone
  EVENT_REMOVAL_WAIT_PAPER = EventRemovalWaitPaper
  EVENT_SLIP_PAPER_EMPTY = EventSlipPaperEmpty
  EVENT_SLIP_PAPER_OK = EventSlipPaperOk
  INSERTION_WAIT_MICR = InsertionWaitMicr
  INSERTION_WAIT_NONE = InsertionWaitNone
  INSERTION_WAIT_SLIP = InsertionWaitSlip
  INSERTION_WAIT_VALIDATION = InsertionWaitValidation
  METHOD_CANCELINSERTION = MethodCancelinsertion
  METHOD_CLEANMICRREADER = MethodCleanmicrreader
  METHOD_EJECTPAPER = MethodEjectpaper
  METHOD_READMICRDATA = MethodReadmicrdata
  METHOD_SENDDATA = MethodSenddata
  METHOD_WAITINSERTION = MethodWaitinsertion
  MICR_FONT_CMC7 = MicrFontCmc7
  MICR_FONT_E13B = MicrFontE13b
  PAPER_TYPE_ENDORSE = PaperTypeEndorse
  PAPER_TYPE_RECEIPT = PaperTypeReceipt
  PAPER_TYPE_SLIP = PaperTypeSlip
  PAPER_TYPE_VALIDATION = PaperTypeValidation
  SLIP_PAPER_EMPTY = SlipPaperEmpty
  SLIP_PAPER_OK = SlipPaperOk
  getAdmin()Ljava/lang/String; = Admin
  getInterval()I = Interval
  setInterval(I)V = Interval
  getLocation()Ljava/lang/String; = Location
  getMode40Cpl()I = Mode40Cpl
  setMode40Cpl(I)V = Mode40Cpl
  getPaperType()I = PaperType
  getStatus()Lcom/epson/epos2/printer/HybridPrinterStatusInfo; = Status
  getWaitTime()I = WaitTime
  setWaitTime(I)V = WaitTime
  addBarcode(Ljava/lang/String;IIIII)V = AddBarcode(string, int, int, int, int, int)
  addCommand([B)V = AddCommand(byte[])
  addCut(I)V = AddCut(int)
  addFeedLine(I)V = AddFeedLine(int)
  addFeedPosition(I)V = AddFeedPosition(int)
  addFeedUnit(I)V = AddFeedUnit(int)
  addHPosition(I)V = AddHPosition(int)
  addImage(Landroid/graphics/Bitmap;IIIIIIIDI)V = AddImage(Android.Graphics.Bitmap, int, int, int, int, int, int, int, double, int)
  addLineSpace(I)V = AddLineSpace(int)
  addLogo(II)V = AddLogo(int, int)
  addPageArea(IIII)V = AddPageArea(int, int, int, int)
  addPageBegin()V = AddPageBegin()
  addPageDirection(I)V = AddPageDirection(int)
  addPageEnd()V = AddPageEnd()
  addPageLine(IIIII)V = AddPageLine(int, int, int, int, int)
  addPagePosition(II)V = AddPagePosition(int, int)
  addPageRectangle(IIIII)V = AddPageRectangle(int, int, int, int, int)
  addPulse(II)V = AddPulse(int, int)
  addRotateBegin()V = AddRotateBegin()
  addRotateEnd()V = AddRotateEnd()
  addSound(III)V = AddSound(int, int, int)
  addSymbol(Ljava/lang/String;IIIII)V = AddSymbol(string, int, int, int, int, int)
  addText(Ljava/lang/String;)V = AddText(string)
  addTextAlign(I)V = AddTextAlign(int)
  addTextFont(I)V = AddTextFont(int)
  addTextLang(I)V = AddTextLang(int)
  addTextRotate(I)V = AddTextRotate(int)
  addTextSize(II)V = AddTextSize(int, int)
  addTextSmooth(I)V = AddTextSmooth(int)
  addTextStyle(IIII)V = AddTextStyle(int, int, int, int)
  beginTransaction()V = BeginTransaction()
  cancelInsertion()V = CancelInsertion()
  checkHandle()V = CheckHandle()
  cleanMicrReader(I)V = CleanMicrReader(int)
  clearCommandBuffer()V = ClearCommandBuffer()
  connect(Ljava/lang/String;I)V = Connect(string, int)
  disconnect()V = Disconnect()
  ejectPaper()V = EjectPaper()
  endTransaction()V = EndTransaction()
  forceCommand([BI)V = ForceCommand(byte[], int)
  forcePulse(III)V = ForcePulse(int, int, int)
  forceRecover(I)V = ForceRecover(int)
  forceReset(I)V = ForceReset(int)
  nativeEpos2AddBarcode(JLjava/lang/String;IIIJJ)I = NativeEpos2AddBarcode(long, string, int, int, int, long, long)
  nativeEpos2AddCommand(J[B)I = NativeEpos2AddCommand(long, byte[])
  nativeEpos2AddCut(JI)I = NativeEpos2AddCut(long, int)
  nativeEpos2AddFeedLine(JJ)I = NativeEpos2AddFeedLine(long, long)
  nativeEpos2AddFeedPosition(JI)I = NativeEpos2AddFeedPosition(long, int)
  nativeEpos2AddFeedUnit(JJ)I = NativeEpos2AddFeedUnit(long, long)
  nativeEpos2AddHPosition(JJ)I = NativeEpos2AddHPosition(long, long)
  nativeEpos2AddImage(J[BJJJJJJIIIDI)I = NativeEpos2AddImage(long, byte[], long, long, long, long, long, long, int, int, int, double, int)
  nativeEpos2AddLineSpace(JJ)I = NativeEpos2AddLineSpace(long, long)
  nativeEpos2AddLogo(JJJ)I = NativeEpos2AddLogo(long, long, long)
  nativeEpos2AddPageArea(JJJJJ)I = NativeEpos2AddPageArea(long, long, long, long, long)
  nativeEpos2AddPageBegin(J)I = NativeEpos2AddPageBegin(long)
  nativeEpos2AddPageDirection(JI)I = NativeEpos2AddPageDirection(long, int)
  nativeEpos2AddPageEnd(J)I = NativeEpos2AddPageEnd(long)
  nativeEpos2AddPageLine(JJJJJI)I = NativeEpos2AddPageLine(long, long, long, long, long, int)
  nativeEpos2AddPagePosition(JJJ)I = NativeEpos2AddPagePosition(long, long, long)
  nativeEpos2AddPageRectangle(JJJJJI)I = NativeEpos2AddPageRectangle(long, long, long, long, long, int)
  nativeEpos2AddPulse(JII)I = NativeEpos2AddPulse(long, int, int)
  nativeEpos2AddRotateBegin(J)I = NativeEpos2AddRotateBegin(long)
  nativeEpos2AddRotateEnd(J)I = NativeEpos2AddRotateEnd(long)
  nativeEpos2AddSound(JIJJ)I = NativeEpos2AddSound(long, int, long, long)
  nativeEpos2AddSymbol(JLjava/lang/String;IIJJJ)I = NativeEpos2AddSymbol(long, string, int, int, long, long, long)
  nativeEpos2AddText(JLjava/lang/String;)I = NativeEpos2AddText(long, string)
  nativeEpos2AddTextAlign(JI)I = NativeEpos2AddTextAlign(long, int)
  nativeEpos2AddTextFont(JI)I = NativeEpos2AddTextFont(long, int)
  nativeEpos2AddTextLang(JI)I = NativeEpos2AddTextLang(long, int)
  nativeEpos2AddTextRotate(JI)I = NativeEpos2AddTextRotate(long, int)
  nativeEpos2AddTextSize(JJJ)I = NativeEpos2AddTextSize(long, long, long)
  nativeEpos2AddTextSmooth(JI)I = NativeEpos2AddTextSmooth(long, int)
  nativeEpos2AddTextStyle(JIIII)I = NativeEpos2AddTextStyle(long, int, int, int, int)
  nativeEpos2BeginTransaction(J)I = NativeEpos2BeginTransaction(long)
  nativeEpos2CancelInsertion(J)I = NativeEpos2CancelInsertion(long)
  nativeEpos2CleanMicrReader(JJJ)I = NativeEpos2CleanMicrReader(long, long, long)
  nativeEpos2ClearCommandBuffer(J)I = NativeEpos2ClearCommandBuffer(long)
  nativeEpos2Connect(JLjava/lang/String;JLjava/lang/Object;)I = NativeEpos2Connect(long, string, long, Java.Lang.Object)
  nativeEpos2CreateHandle(I[J)I = NativeEpos2CreateHandle(int, long[])
  nativeEpos2DestroyHandle(J)I = NativeEpos2DestroyHandle(long)
  nativeEpos2Disconnect(J)I = NativeEpos2Disconnect(long)
  nativeEpos2EjectPaper(J)I = NativeEpos2EjectPaper(long)
  nativeEpos2EndTransaction(J)I = NativeEpos2EndTransaction(long)
  nativeEpos2ForceCommand(J[BII)I = NativeEpos2ForceCommand(long, byte[], int, int)
  nativeEpos2ForcePulse(JIII)I = NativeEpos2ForcePulse(long, int, int, int)
  nativeEpos2ForceRecover(JI)I = NativeEpos2ForceRecover(long, int)
  nativeEpos2ForceReset(JI)I = NativeEpos2ForceReset(long, int)
  nativeEpos2GetAdmin(J)Ljava/lang/String; = NativeEpos2GetAdmin(long)
  nativeEpos2GetCommandBuffer(JI)I = NativeEpos2GetCommandBuffer(long, int)
  nativeEpos2GetLocation(J)Ljava/lang/String; = NativeEpos2GetLocation(long)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/printer/HybridPrinterStatusInfo; = NativeEpos2GetStatus(long)
  nativeEpos2ReadMicrData(JIJJ)I = NativeEpos2ReadMicrData(long, int, long, long)
  nativeEpos2SelectPaperType(JI)I = NativeEpos2SelectPaperType(long, int)
  nativeEpos2SendData(JIJI)I = NativeEpos2SendData(long, int, long, int)
  nativeEpos2SetInterval(JJ)I = NativeEpos2SetInterval(long, long)
  nativeEpos2SetMode40Cpl(JI)I = NativeEpos2SetMode40Cpl(long, int)
  nativeEpos2SetWaitTime(JJ)I = NativeEpos2SetWaitTime(long, long)
  nativeEpos2StartMonitor(J)I = NativeEpos2StartMonitor(long)
  nativeEpos2StopMonitor(J)I = NativeEpos2StopMonitor(long)
  nativeEpos2WaitInsertion(JJJ)I = NativeEpos2WaitInsertion(long, long, long)
  readMicrData(II)V = ReadMicrData(int, int)
  selectPaperType(I)V = SelectPaperType(int)
  sendData(I)V = SendData(int)
  setConnectionEventListener(Lcom/epson/epos2/ConnectionListener;)V = SetConnectionEventListener(Com.Epson.Epos2.IConnectionListener)
  setReceiveEventListener(Lcom/epson/epos2/printer/HybdReceiveListener;)V = SetReceiveEventListener(Com.Epson.Epos2.Printer.IHybdReceiveListener)
  setStatusChangeEventListener(Lcom/epson/epos2/printer/HybdStatusChangeListener;)V = SetStatusChangeEventListener(Com.Epson.Epos2.Printer.IHybdStatusChangeListener)
  startMonitor()V = StartMonitor()
  stopMonitor()V = StopMonitor()
  waitInsertion(I)V = WaitInsertion(int)
com/epson/epos2/printer/HybridPrinterStatusInfo = Com.Epson.Epos2.Printer.HybridPrinterStatusInfo
  <init>()V = .ctor()
  getAutoRecoverError()I = AutoRecoverError
  getConnection()I = Connection
  getCoverOpen()I = CoverOpen
  getDrawer()I = Drawer
  getErrorStatus()I = ErrorStatus
  getInsertionWaiting()I = InsertionWaiting
  getOnline()I = Online
  getPanelSwitch()I = PanelSwitch
  getPaper()I = Paper
  getPaperFeed()I = PaperFeed
  getRemovalWaiting()I = RemovalWaiting
  getSlipPaper()I = SlipPaper
  getWaitOnline()I = WaitOnline
com/epson/epos2/printer/HybridPrinterStatusInfo = Com.Epson.Epos2.Printer.HybridPrinterStatusInfo
  <init>()V = .ctor()
  getAutoRecoverError()I = AutoRecoverError
  getConnection()I = Connection
  getCoverOpen()I = CoverOpen
  getDrawer()I = Drawer
  getErrorStatus()I = ErrorStatus
  getInsertionWaiting()I = InsertionWaiting
  getOnline()I = Online
  getPanelSwitch()I = PanelSwitch
  getPaper()I = Paper
  getPaperFeed()I = PaperFeed
  getRemovalWaiting()I = RemovalWaiting
  getSlipPaper()I = SlipPaper
  getWaitOnline()I = WaitOnline
com/epson/epos2/printer/LFCPrintCompleteListener = Com.Epson.Epos2.Printer.ILFCPrintCompleteListener
  onPrintComplete(Lcom/epson/epos2/printer/LFCPrinter;I)V = OnPrintComplete(Com.Epson.Epos2.Printer.LFCPrinter, int)
com/epson/epos2/printer/LFCPrintCompleteListener = Com.Epson.Epos2.Printer.ILFCPrintCompleteListener
  onPrintComplete(Lcom/epson/epos2/printer/LFCPrinter;I)V = OnPrintComplete(Com.Epson.Epos2.Printer.LFCPrinter, int)
com/epson/epos2/printer/LFCPrinter = Com.Epson.Epos2.Printer.LFCPrinter
  <init>(IILandroid/content/Context;)V = .ctor(int, int, Android.Content.Context)
  BATTERY_LEVEL_0 = BatteryLevel0
  BATTERY_LEVEL_1 = BatteryLevel1
  BATTERY_LEVEL_2 = BatteryLevel2
  BATTERY_LEVEL_3 = BatteryLevel3
  BATTERY_LEVEL_4 = BatteryLevel4
  BATTERY_LEVEL_5 = BatteryLevel5
  BATTERY_LEVEL_6 = BatteryLevel6
  EVENT_BATTERY_EMPTY = EventBatteryEmpty
  EVENT_BATTERY_ENOUGH = EventBatteryEnough
  EVENT_REMOVAL_WAIT_NONE = EventRemovalWaitNone
  EVENT_REMOVAL_WAIT_PAPER = EventRemovalWaitPaper
  TM_L100 = TmL100
  TM_L90LFC = TmL90lfc
  getAdmin()Ljava/lang/String; = Admin
  getInterval()I = Interval
  setInterval(I)V = Interval
  getLocation()Ljava/lang/String; = Location
  getStatus()Lcom/epson/epos2/printer/LFCPrinterStatusInfo; = Status
  addBarcode(Ljava/lang/String;IIIII)V = AddBarcode(string, int, int, int, int, int)
  addCommand([B)V = AddCommand(byte[])
  addCut(I)V = AddCut(int)
  addFeedLine(I)V = AddFeedLine(int)
  addFeedPosition(I)V = AddFeedPosition(int)
  addFeedUnit(I)V = AddFeedUnit(int)
  addHPosition(I)V = AddHPosition(int)
  addImage(Landroid/graphics/Bitmap;IIIIIIIDI)V = AddImage(Android.Graphics.Bitmap, int, int, int, int, int, int, int, double, int)
  addLineSpace(I)V = AddLineSpace(int)
  addLogo(II)V = AddLogo(int, int)
  addPageArea(IIII)V = AddPageArea(int, int, int, int)
  addPageBegin()V = AddPageBegin()
  addPageDirection(I)V = AddPageDirection(int)
  addPageEnd()V = AddPageEnd()
  addPageLine(IIIII)V = AddPageLine(int, int, int, int, int)
  addPagePosition(II)V = AddPagePosition(int, int)
  addPageRectangle(IIIII)V = AddPageRectangle(int, int, int, int, int)
  addPulse(II)V = AddPulse(int, int)
  addRotateBegin()V = AddRotateBegin()
  addRotateEnd()V = AddRotateEnd()
  addSound(III)V = AddSound(int, int, int)
  addSymbol(Ljava/lang/String;IIIII)V = AddSymbol(string, int, int, int, int, int)
  addText(Ljava/lang/String;)V = AddText(string)
  addTextAlign(I)V = AddTextAlign(int)
  addTextFont(I)V = AddTextFont(int)
  addTextLang(I)V = AddTextLang(int)
  addTextRotate(I)V = AddTextRotate(int)
  addTextSize(II)V = AddTextSize(int, int)
  addTextSmooth(I)V = AddTextSmooth(int)
  addTextStyle(IIII)V = AddTextStyle(int, int, int, int)
  beginTransaction()V = BeginTransaction()
  checkHandle()V = CheckHandle()
  clearCommandBuffer()V = ClearCommandBuffer()
  connect(Ljava/lang/String;I)V = Connect(string, int)
  disconnect()V = Disconnect()
  endTransaction()V = EndTransaction()
  finalize()V = Finalize()
  forcePulse(III)V = ForcePulse(int, int, int)
  forceRecover(I)V = ForceRecover(int)
  forceReset(I)V = ForceReset(int)
  nativeEpos2AddBarcode(JLjava/lang/String;IIIJJ)I = NativeEpos2AddBarcode(long, string, int, int, int, long, long)
  nativeEpos2AddCommand(J[B)I = NativeEpos2AddCommand(long, byte[])
  nativeEpos2AddCut(JI)I = NativeEpos2AddCut(long, int)
  nativeEpos2AddFeedLine(JJ)I = NativeEpos2AddFeedLine(long, long)
  nativeEpos2AddFeedPosition(JI)I = NativeEpos2AddFeedPosition(long, int)
  nativeEpos2AddFeedUnit(JJ)I = NativeEpos2AddFeedUnit(long, long)
  nativeEpos2AddHPosition(JJ)I = NativeEpos2AddHPosition(long, long)
  nativeEpos2AddImage(J[BJJJJJJIIIDI)I = NativeEpos2AddImage(long, byte[], long, long, long, long, long, long, int, int, int, double, int)
  nativeEpos2AddLineSpace(JJ)I = NativeEpos2AddLineSpace(long, long)
  nativeEpos2AddLogo(JJJ)I = NativeEpos2AddLogo(long, long, long)
  nativeEpos2AddPageArea(JJJJJ)I = NativeEpos2AddPageArea(long, long, long, long, long)
  nativeEpos2AddPageBegin(J)I = NativeEpos2AddPageBegin(long)
  nativeEpos2AddPageDirection(JI)I = NativeEpos2AddPageDirection(long, int)
  nativeEpos2AddPageEnd(J)I = NativeEpos2AddPageEnd(long)
  nativeEpos2AddPageLine(JJJJJI)I = NativeEpos2AddPageLine(long, long, long, long, long, int)
  nativeEpos2AddPagePosition(JJJ)I = NativeEpos2AddPagePosition(long, long, long)
  nativeEpos2AddPageRectangle(JJJJJI)I = NativeEpos2AddPageRectangle(long, long, long, long, long, int)
  nativeEpos2AddPulse(JII)I = NativeEpos2AddPulse(long, int, int)
  nativeEpos2AddRotateBegin(J)I = NativeEpos2AddRotateBegin(long)
  nativeEpos2AddRotateEnd(J)I = NativeEpos2AddRotateEnd(long)
  nativeEpos2AddSound(JIJJ)I = NativeEpos2AddSound(long, int, long, long)
  nativeEpos2AddSymbol(JLjava/lang/String;IIJJJ)I = NativeEpos2AddSymbol(long, string, int, int, long, long, long)
  nativeEpos2AddText(JLjava/lang/String;)I = NativeEpos2AddText(long, string)
  nativeEpos2AddTextAlign(JI)I = NativeEpos2AddTextAlign(long, int)
  nativeEpos2AddTextFont(JI)I = NativeEpos2AddTextFont(long, int)
  nativeEpos2AddTextLang(JI)I = NativeEpos2AddTextLang(long, int)
  nativeEpos2AddTextRotate(JI)I = NativeEpos2AddTextRotate(long, int)
  nativeEpos2AddTextSize(JJJ)I = NativeEpos2AddTextSize(long, long, long)
  nativeEpos2AddTextSmooth(JI)I = NativeEpos2AddTextSmooth(long, int)
  nativeEpos2AddTextStyle(JIIII)I = NativeEpos2AddTextStyle(long, int, int, int, int)
  nativeEpos2BeginTransaction(J)I = NativeEpos2BeginTransaction(long)
  nativeEpos2ClearCommandBuffer(J)I = NativeEpos2ClearCommandBuffer(long)
  nativeEpos2Connect(JLjava/lang/String;JLjava/lang/Object;)I = NativeEpos2Connect(long, string, long, Java.Lang.Object)
  nativeEpos2CreateHandle(II[J)I = NativeEpos2CreateHandle(int, int, long[])
  nativeEpos2DestroyHandle(J)I = NativeEpos2DestroyHandle(long)
  nativeEpos2Disconnect(J)I = NativeEpos2Disconnect(long)
  nativeEpos2EndTransaction(J)I = NativeEpos2EndTransaction(long)
  nativeEpos2ForcePulse(JIII)I = NativeEpos2ForcePulse(long, int, int, int)
  nativeEpos2ForceRecover(JI)I = NativeEpos2ForceRecover(long, int)
  nativeEpos2ForceReset(JI)I = NativeEpos2ForceReset(long, int)
  nativeEpos2GetAdmin(J)Ljava/lang/String; = NativeEpos2GetAdmin(long)
  nativeEpos2GetCommandBuffer(JI)I = NativeEpos2GetCommandBuffer(long, int)
  nativeEpos2GetLocation(J)Ljava/lang/String; = NativeEpos2GetLocation(long)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/printer/LFCPrinterStatusInfo; = NativeEpos2GetStatus(long)
  nativeEpos2SendLFCData(JJJ)I = NativeEpos2SendLFCData(long, long, long)
  nativeEpos2SetInterval(JJ)I = NativeEpos2SetInterval(long, long)
  nativeEpos2StartMonitor(J)I = NativeEpos2StartMonitor(long)
  nativeEpos2StopMonitor(J)I = NativeEpos2StopMonitor(long)
  registerLogo(IILandroid/graphics/Bitmap;IIIIIIID)V = RegisterLogo(int, int, Android.Graphics.Bitmap, int, int, int, int, int, int, int, double)
  sendLFCData(II)V = SendLFCData(int, int)
  setPrintCompleteEventListener(Lcom/epson/epos2/printer/LFCPrintCompleteListener;)V = SetPrintCompleteEventListener(Com.Epson.Epos2.Printer.ILFCPrintCompleteListener)
  setSendCompleteEventListener(Lcom/epson/epos2/printer/LFCSendCompleteListener;)V = SetSendCompleteEventListener(Com.Epson.Epos2.Printer.ILFCSendCompleteListener)
  setStatusChangeEventListener(Lcom/epson/epos2/printer/LFCStatusChangeListener;)V = SetStatusChangeEventListener(Com.Epson.Epos2.Printer.ILFCStatusChangeListener)
  startMonitor()V = StartMonitor()
  stopMonitor()V = StopMonitor()
  unregisterAllLogo()V = UnregisterAllLogo()
  unregisterLogo(II)V = UnregisterLogo(int, int)
com/epson/epos2/printer/LFCPrinter = Com.Epson.Epos2.Printer.LFCPrinter
  <init>(IILandroid/content/Context;)V = .ctor(int, int, Android.Content.Context)
  BATTERY_LEVEL_0 = BatteryLevel0
  BATTERY_LEVEL_1 = BatteryLevel1
  BATTERY_LEVEL_2 = BatteryLevel2
  BATTERY_LEVEL_3 = BatteryLevel3
  BATTERY_LEVEL_4 = BatteryLevel4
  BATTERY_LEVEL_5 = BatteryLevel5
  BATTERY_LEVEL_6 = BatteryLevel6
  EVENT_BATTERY_EMPTY = EventBatteryEmpty
  EVENT_BATTERY_ENOUGH = EventBatteryEnough
  EVENT_REMOVAL_WAIT_NONE = EventRemovalWaitNone
  EVENT_REMOVAL_WAIT_PAPER = EventRemovalWaitPaper
  TM_L100 = TmL100
  TM_L90LFC = TmL90lfc
  getAdmin()Ljava/lang/String; = Admin
  getInterval()I = Interval
  setInterval(I)V = Interval
  getLocation()Ljava/lang/String; = Location
  getStatus()Lcom/epson/epos2/printer/LFCPrinterStatusInfo; = Status
  addBarcode(Ljava/lang/String;IIIII)V = AddBarcode(string, int, int, int, int, int)
  addCommand([B)V = AddCommand(byte[])
  addCut(I)V = AddCut(int)
  addFeedLine(I)V = AddFeedLine(int)
  addFeedPosition(I)V = AddFeedPosition(int)
  addFeedUnit(I)V = AddFeedUnit(int)
  addHPosition(I)V = AddHPosition(int)
  addImage(Landroid/graphics/Bitmap;IIIIIIIDI)V = AddImage(Android.Graphics.Bitmap, int, int, int, int, int, int, int, double, int)
  addLineSpace(I)V = AddLineSpace(int)
  addLogo(II)V = AddLogo(int, int)
  addPageArea(IIII)V = AddPageArea(int, int, int, int)
  addPageBegin()V = AddPageBegin()
  addPageDirection(I)V = AddPageDirection(int)
  addPageEnd()V = AddPageEnd()
  addPageLine(IIIII)V = AddPageLine(int, int, int, int, int)
  addPagePosition(II)V = AddPagePosition(int, int)
  addPageRectangle(IIIII)V = AddPageRectangle(int, int, int, int, int)
  addPulse(II)V = AddPulse(int, int)
  addRotateBegin()V = AddRotateBegin()
  addRotateEnd()V = AddRotateEnd()
  addSound(III)V = AddSound(int, int, int)
  addSymbol(Ljava/lang/String;IIIII)V = AddSymbol(string, int, int, int, int, int)
  addText(Ljava/lang/String;)V = AddText(string)
  addTextAlign(I)V = AddTextAlign(int)
  addTextFont(I)V = AddTextFont(int)
  addTextLang(I)V = AddTextLang(int)
  addTextRotate(I)V = AddTextRotate(int)
  addTextSize(II)V = AddTextSize(int, int)
  addTextSmooth(I)V = AddTextSmooth(int)
  addTextStyle(IIII)V = AddTextStyle(int, int, int, int)
  beginTransaction()V = BeginTransaction()
  checkHandle()V = CheckHandle()
  clearCommandBuffer()V = ClearCommandBuffer()
  connect(Ljava/lang/String;I)V = Connect(string, int)
  disconnect()V = Disconnect()
  endTransaction()V = EndTransaction()
  forcePulse(III)V = ForcePulse(int, int, int)
  forceRecover(I)V = ForceRecover(int)
  forceReset(I)V = ForceReset(int)
  nativeEpos2AddBarcode(JLjava/lang/String;IIIJJ)I = NativeEpos2AddBarcode(long, string, int, int, int, long, long)
  nativeEpos2AddCommand(J[B)I = NativeEpos2AddCommand(long, byte[])
  nativeEpos2AddCut(JI)I = NativeEpos2AddCut(long, int)
  nativeEpos2AddFeedLine(JJ)I = NativeEpos2AddFeedLine(long, long)
  nativeEpos2AddFeedPosition(JI)I = NativeEpos2AddFeedPosition(long, int)
  nativeEpos2AddFeedUnit(JJ)I = NativeEpos2AddFeedUnit(long, long)
  nativeEpos2AddHPosition(JJ)I = NativeEpos2AddHPosition(long, long)
  nativeEpos2AddImage(J[BJJJJJJIIIDI)I = NativeEpos2AddImage(long, byte[], long, long, long, long, long, long, int, int, int, double, int)
  nativeEpos2AddLineSpace(JJ)I = NativeEpos2AddLineSpace(long, long)
  nativeEpos2AddLogo(JJJ)I = NativeEpos2AddLogo(long, long, long)
  nativeEpos2AddPageArea(JJJJJ)I = NativeEpos2AddPageArea(long, long, long, long, long)
  nativeEpos2AddPageBegin(J)I = NativeEpos2AddPageBegin(long)
  nativeEpos2AddPageDirection(JI)I = NativeEpos2AddPageDirection(long, int)
  nativeEpos2AddPageEnd(J)I = NativeEpos2AddPageEnd(long)
  nativeEpos2AddPageLine(JJJJJI)I = NativeEpos2AddPageLine(long, long, long, long, long, int)
  nativeEpos2AddPagePosition(JJJ)I = NativeEpos2AddPagePosition(long, long, long)
  nativeEpos2AddPageRectangle(JJJJJI)I = NativeEpos2AddPageRectangle(long, long, long, long, long, int)
  nativeEpos2AddPulse(JII)I = NativeEpos2AddPulse(long, int, int)
  nativeEpos2AddRotateBegin(J)I = NativeEpos2AddRotateBegin(long)
  nativeEpos2AddRotateEnd(J)I = NativeEpos2AddRotateEnd(long)
  nativeEpos2AddSound(JIJJ)I = NativeEpos2AddSound(long, int, long, long)
  nativeEpos2AddSymbol(JLjava/lang/String;IIJJJ)I = NativeEpos2AddSymbol(long, string, int, int, long, long, long)
  nativeEpos2AddText(JLjava/lang/String;)I = NativeEpos2AddText(long, string)
  nativeEpos2AddTextAlign(JI)I = NativeEpos2AddTextAlign(long, int)
  nativeEpos2AddTextFont(JI)I = NativeEpos2AddTextFont(long, int)
  nativeEpos2AddTextLang(JI)I = NativeEpos2AddTextLang(long, int)
  nativeEpos2AddTextRotate(JI)I = NativeEpos2AddTextRotate(long, int)
  nativeEpos2AddTextSize(JJJ)I = NativeEpos2AddTextSize(long, long, long)
  nativeEpos2AddTextSmooth(JI)I = NativeEpos2AddTextSmooth(long, int)
  nativeEpos2AddTextStyle(JIIII)I = NativeEpos2AddTextStyle(long, int, int, int, int)
  nativeEpos2BeginTransaction(J)I = NativeEpos2BeginTransaction(long)
  nativeEpos2ClearCommandBuffer(J)I = NativeEpos2ClearCommandBuffer(long)
  nativeEpos2Connect(JLjava/lang/String;JLjava/lang/Object;)I = NativeEpos2Connect(long, string, long, Java.Lang.Object)
  nativeEpos2CreateHandle(II[J)I = NativeEpos2CreateHandle(int, int, long[])
  nativeEpos2DestroyHandle(J)I = NativeEpos2DestroyHandle(long)
  nativeEpos2Disconnect(J)I = NativeEpos2Disconnect(long)
  nativeEpos2EndTransaction(J)I = NativeEpos2EndTransaction(long)
  nativeEpos2ForcePulse(JIII)I = NativeEpos2ForcePulse(long, int, int, int)
  nativeEpos2ForceRecover(JI)I = NativeEpos2ForceRecover(long, int)
  nativeEpos2ForceReset(JI)I = NativeEpos2ForceReset(long, int)
  nativeEpos2GetAdmin(J)Ljava/lang/String; = NativeEpos2GetAdmin(long)
  nativeEpos2GetCommandBuffer(JI)I = NativeEpos2GetCommandBuffer(long, int)
  nativeEpos2GetLocation(J)Ljava/lang/String; = NativeEpos2GetLocation(long)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/printer/LFCPrinterStatusInfo; = NativeEpos2GetStatus(long)
  nativeEpos2SendLFCData(JJJ)I = NativeEpos2SendLFCData(long, long, long)
  nativeEpos2SetInterval(JJ)I = NativeEpos2SetInterval(long, long)
  nativeEpos2StartMonitor(J)I = NativeEpos2StartMonitor(long)
  nativeEpos2StopMonitor(J)I = NativeEpos2StopMonitor(long)
  registerLogo(IILandroid/graphics/Bitmap;IIIIIIID)V = RegisterLogo(int, int, Android.Graphics.Bitmap, int, int, int, int, int, int, int, double)
  sendLFCData(II)V = SendLFCData(int, int)
  setPrintCompleteEventListener(Lcom/epson/epos2/printer/LFCPrintCompleteListener;)V = SetPrintCompleteEventListener(Com.Epson.Epos2.Printer.ILFCPrintCompleteListener)
  setSendCompleteEventListener(Lcom/epson/epos2/printer/LFCSendCompleteListener;)V = SetSendCompleteEventListener(Com.Epson.Epos2.Printer.ILFCSendCompleteListener)
  setStatusChangeEventListener(Lcom/epson/epos2/printer/LFCStatusChangeListener;)V = SetStatusChangeEventListener(Com.Epson.Epos2.Printer.ILFCStatusChangeListener)
  startMonitor()V = StartMonitor()
  stopMonitor()V = StopMonitor()
  unregisterAllLogo()V = UnregisterAllLogo()
  unregisterLogo(II)V = UnregisterLogo(int, int)
com/epson/epos2/printer/LFCPrinterStatusInfo = Com.Epson.Epos2.Printer.LFCPrinterStatusInfo
  <init>()V = .ctor()
  getAdapter()I = Adapter
  getAutoRecoverError()I = AutoRecoverError
  getBatteryLevel()I = BatteryLevel
  getBuzzer()I = Buzzer
  getConnection()I = Connection
  getCoverOpen()I = CoverOpen
  getDrawer()I = Drawer
  getErrorStatus()I = ErrorStatus
  getOnline()I = Online
  getPanelSwitch()I = PanelSwitch
  getPaper()I = Paper
  getPaperFeed()I = PaperFeed
  getRemovalWaiting()I = RemovalWaiting
  getWaitOnline()I = WaitOnline
com/epson/epos2/printer/LFCPrinterStatusInfo = Com.Epson.Epos2.Printer.LFCPrinterStatusInfo
  <init>()V = .ctor()
  getAdapter()I = Adapter
  getAutoRecoverError()I = AutoRecoverError
  getBatteryLevel()I = BatteryLevel
  getBuzzer()I = Buzzer
  getConnection()I = Connection
  getCoverOpen()I = CoverOpen
  getDrawer()I = Drawer
  getErrorStatus()I = ErrorStatus
  getOnline()I = Online
  getPanelSwitch()I = PanelSwitch
  getPaper()I = Paper
  getPaperFeed()I = PaperFeed
  getRemovalWaiting()I = RemovalWaiting
  getWaitOnline()I = WaitOnline
com/epson/epos2/printer/LFCSendCompleteListener = Com.Epson.Epos2.Printer.ILFCSendCompleteListener
  onSendComplete(Lcom/epson/epos2/printer/LFCPrinter;IILcom/epson/epos2/printer/LFCPrinterStatusInfo;)V = OnSendComplete(Com.Epson.Epos2.Printer.LFCPrinter, int, int, Com.Epson.Epos2.Printer.LFCPrinterStatusInfo)
com/epson/epos2/printer/LFCSendCompleteListener = Com.Epson.Epos2.Printer.ILFCSendCompleteListener
  onSendComplete(Lcom/epson/epos2/printer/LFCPrinter;IILcom/epson/epos2/printer/LFCPrinterStatusInfo;)V = OnSendComplete(Com.Epson.Epos2.Printer.LFCPrinter, int, int, Com.Epson.Epos2.Printer.LFCPrinterStatusInfo)
com/epson/epos2/printer/LFCStatusChangeListener = Com.Epson.Epos2.Printer.ILFCStatusChangeListener
  onLFCStatusChange(Lcom/epson/epos2/printer/LFCPrinter;I)V = OnLFCStatusChange(Com.Epson.Epos2.Printer.LFCPrinter, int)
com/epson/epos2/printer/LFCStatusChangeListener = Com.Epson.Epos2.Printer.ILFCStatusChangeListener
  onLFCStatusChange(Lcom/epson/epos2/printer/LFCPrinter;I)V = OnLFCStatusChange(Com.Epson.Epos2.Printer.LFCPrinter, int)
com/epson/epos2/printer/MaintenanceCounterListener = Com.Epson.Epos2.Printer.IMaintenanceCounterListener
  onGetMaintenanceCounter(III)V = OnGetMaintenanceCounter(int, int, int)
  onResetMaintenanceCounter(II)V = OnResetMaintenanceCounter(int, int)
com/epson/epos2/printer/MaintenanceCounterListener = Com.Epson.Epos2.Printer.IMaintenanceCounterListener
  onGetMaintenanceCounter(III)V = OnGetMaintenanceCounter(int, int, int)
  onResetMaintenanceCounter(II)V = OnResetMaintenanceCounter(int, int)
com/epson/epos2/printer/Printer = Com.Epson.Epos2.Printer.Printer
  <init>()V = .ctor()
  <init>(IILandroid/content/Context;)V = .ctor(int, int, Android.Content.Context)
  BATTERY_LEVEL_0 = BatteryLevel0
  BATTERY_LEVEL_1 = BatteryLevel1
  BATTERY_LEVEL_2 = BatteryLevel2
  BATTERY_LEVEL_3 = BatteryLevel3
  BATTERY_LEVEL_4 = BatteryLevel4
  BATTERY_LEVEL_5 = BatteryLevel5
  BATTERY_LEVEL_6 = BatteryLevel6
  currentImagesFirmwareInfo = CurrentImagesFirmwareInfo
  EU_M30 = EuM30
  EVENT_AUTO_RECOVER_ERROR = EventAutoRecoverError
  EVENT_AUTO_RECOVER_OK = EventAutoRecoverOk
  EVENT_BATTERY_EMPTY = EventBatteryEmpty
  EVENT_BATTERY_ENOUGH = EventBatteryEnough
  EVENT_REMOVAL_DETECT_PAPER = EventRemovalDetectPaper
  EVENT_REMOVAL_DETECT_PAPER_NONE = EventRemovalDetectPaperNone
  EVENT_REMOVAL_DETECT_UNKNOWN = EventRemovalDetectUnknown
  EVENT_REMOVAL_WAIT_NONE = EventRemovalWaitNone
  EVENT_REMOVAL_WAIT_PAPER = EventRemovalWaitPaper
  EVENT_UNRECOVERABLE_ERROR = EventUnrecoverableError
  firmwareImage = FirmwareImage
  FIRMWARE_MODE_MEMORY_REWRITE = FirmwareModeMemoryRewrite
  FIRMWARE_MODE_NORMAL = FirmwareModeNormal
  HIGH_VOLTAGE_ERR = HighVoltageErr
  HTTPS_TIMEOUT = HttpsTimeout
  JSON_KEY_MAINTENANCE_NAME = JsonKeyMaintenanceName
  JSON_KEY_N_BROKENDOT_NAME = JsonKeyNBrokendotName
  JSON_KEY_N_WARNINGDOT_NAME = JsonKeyNWarningdotName
  JSON_KEY_P_BROKENDOT_NAME = JsonKeyPBrokendotName
  JSON_KEY_PRINTERSPEC_NAME = JsonKeyPrinterspecName
  JSON_KEY_PRODUCT_NAME = JsonKeyProductName
  JSON_KEY_P_WARNINGDOT_NAME = JsonKeyPWarningdotName
  JSON_KEY_SERIALNO_NAME = JsonKeySerialnoName
  JSON_KEY_SETTING_NWCSAUTH_PASSWORD_KEY = JsonKeySettingNwcsauthPasswordKey
  JSON_KEY_SETTING_NWDEVINFO_ADMINID_KEY = JsonKeySettingNwdevinfoAdminidKey
  JSON_KEY_SETTING_NWDEVINFO_PASSWORDAUTH_KEY = JsonKeySettingNwdevinfoPasswordauthKey
  JSON_KEY_SETTING_WIFICFG_WPAPSK_KEY = JsonKeySettingWificfgWpapskKey
  JSON_KEY_THERMALHEAD_NAME = JsonKeyThermalheadName
  LAYOUT_LABEL = LayoutLabel
  LAYOUT_LABEL_BM = LayoutLabelBm
  LAYOUT_RECEIPT = LayoutReceipt
  LAYOUT_RECEIPT_BM = LayoutReceiptBm
  LOW_VOLTAGE_ERR = LowVoltageErr
  MAINTENANCE_COUNTER_AUTOCUTTER = MaintenanceCounterAutocutter
  MAINTENANCE_COUNTER_OTHER = MaintenanceCounterOther
  MAINTENANCE_COUNTER_PAPERFEED = MaintenanceCounterPaperfeed
  PREFIX_ENCRYPT = PrefixEncrypt
  REMOVAL_DETECT_PAPER = RemovalDetectPaper
  REMOVAL_DETECT_PAPER_NONE = RemovalDetectPaperNone
  REMOVAL_DETECT_UNKNOWN = RemovalDetectUnknown
  SB_H50 = SbH50
  SETTING_OTHER = SettingOther
  SETTING_PAPERWIDTH = SettingPaperwidth
  SETTING_PAPERWIDTH_58_0 = SettingPaperwidth580
  SETTING_PAPERWIDTH_60_0 = SettingPaperwidth600
  SETTING_PAPERWIDTH_70_0 = SettingPaperwidth700
  SETTING_PAPERWIDTH_76_0 = SettingPaperwidth760
  SETTING_PAPERWIDTH_80_0 = SettingPaperwidth800
  SETTING_PAPERWIDTH_NOT_SETTING_TARGET = SettingPaperwidthNotSettingTarget
  SETTING_PRINTDENSITY = SettingPrintdensity
  SETTING_PRINTDENSITY_100 = SettingPrintdensity100
  SETTING_PRINTDENSITY_105 = SettingPrintdensity105
  SETTING_PRINTDENSITY_110 = SettingPrintdensity110
  SETTING_PRINTDENSITY_115 = SettingPrintdensity115
  SETTING_PRINTDENSITY_120 = SettingPrintdensity120
  SETTING_PRINTDENSITY_125 = SettingPrintdensity125
  SETTING_PRINTDENSITY_130 = SettingPrintdensity130
  SETTING_PRINTDENSITY_70 = SettingPrintdensity70
  SETTING_PRINTDENSITY_75 = SettingPrintdensity75
  SETTING_PRINTDENSITY_80 = SettingPrintdensity80
  SETTING_PRINTDENSITY_85 = SettingPrintdensity85
  SETTING_PRINTDENSITY_90 = SettingPrintdensity90
  SETTING_PRINTDENSITY_95 = SettingPrintdensity95
  SETTING_PRINTDENSITY_DIP = SettingPrintdensityDip
  SETTING_PRINTDENSITY_NOT_SETTING_TARGET = SettingPrintdensityNotSettingTarget
  SETTING_PRINTSPEED = SettingPrintspeed
  SETTING_PRINTSPEED_1 = SettingPrintspeed1
  SETTING_PRINTSPEED_10 = SettingPrintspeed10
  SETTING_PRINTSPEED_11 = SettingPrintspeed11
  SETTING_PRINTSPEED_12 = SettingPrintspeed12
  SETTING_PRINTSPEED_13 = SettingPrintspeed13
  SETTING_PRINTSPEED_14 = SettingPrintspeed14
  SETTING_PRINTSPEED_15 = SettingPrintspeed15
  SETTING_PRINTSPEED_16 = SettingPrintspeed16
  SETTING_PRINTSPEED_17 = SettingPrintspeed17
  SETTING_PRINTSPEED_2 = SettingPrintspeed2
  SETTING_PRINTSPEED_3 = SettingPrintspeed3
  SETTING_PRINTSPEED_4 = SettingPrintspeed4
  SETTING_PRINTSPEED_5 = SettingPrintspeed5
  SETTING_PRINTSPEED_6 = SettingPrintspeed6
  SETTING_PRINTSPEED_7 = SettingPrintspeed7
  SETTING_PRINTSPEED_8 = SettingPrintspeed8
  SETTING_PRINTSPEED_9 = SettingPrintspeed9
  SETTING_PRINTSPEED_NOT_SETTING_TARGET = SettingPrintspeedNotSettingTarget
  TM_M30 = TM_M30
  TM_H6000 = TmH6000
  TM_L100 = TmL100
  TM_L90 = TmL90
  TM_L90LFC = TmL90lfc
  TM_M10 = TmM10
  TM_M30II = TmM30ii
  TM_M30III = TmM30iii
  TM_M50 = TmM50
  TM_M50II = TmM50ii
  TM_M55 = TmM55
  TM_P20 = TmP20
  TM_P20II = TmP20ii
  TM_P60 = TmP60
  TM_P60II = TmP60ii
  TM_P80 = TmP80
  TM_P80II = TmP80ii
  TM_T100 = TmT100
  TM_T20 = TmT20
  TM_T60 = TmT60
  TM_T70 = TmT70
  TM_T81 = TmT81
  TM_T82 = TmT82
  TM_T83 = TmT83
  TM_T83III = TmT83iii
  TM_T88 = TmT88
  TM_T88VII = TmT88vii
  TM_T90 = TmT90
  TM_T90KP = TmT90kp
  TM_U220 = TmU220
  TM_U220II = TmU220ii
  TM_U330 = TmU330
  TS_100 = Ts100
  WIFI_SIGNAL_EXCELLENT = WifiSignalExcellent
  WIFI_SIGNAL_FAIL = WifiSignalFail
  WIFI_SIGNAL_GOOD = WifiSignalGood
  WIFI_SIGNAL_NO = WifiSignalNo
  getAdmin()Ljava/lang/String; = Admin
  getInterval()I = Interval
  setInterval(I)V = Interval
  getLocation()Ljava/lang/String; = Location
  getStatus()Lcom/epson/epos2/printer/PrinterStatusInfo; = Status
  addBarcode(Ljava/lang/String;IIIII)V = AddBarcode(string, int, int, int, int, int)
  addCommand([B)V = AddCommand(byte[])
  addCut(I)V = AddCut(int)
  addFeedLine(I)V = AddFeedLine(int)
  addFeedPosition(I)V = AddFeedPosition(int)
  addFeedUnit(I)V = AddFeedUnit(int)
  addHLine(III)V = AddHLine(int, int, int)
  addHPosition(I)V = AddHPosition(int)
  addImage(Landroid/graphics/Bitmap;IIIIIIIDI)V = AddImage(Android.Graphics.Bitmap, int, int, int, int, int, int, int, double, int)
  addLayout(IIIIIII)V = AddLayout(int, int, int, int, int, int, int)
  addLineSpace(I)V = AddLineSpace(int)
  addLogo(II)V = AddLogo(int, int)
  addPageArea(IIII)V = AddPageArea(int, int, int, int)
  addPageBegin()V = AddPageBegin()
  addPageDirection(I)V = AddPageDirection(int)
  addPageEnd()V = AddPageEnd()
  addPageLine(IIIII)V = AddPageLine(int, int, int, int, int)
  addPagePosition(II)V = AddPagePosition(int, int)
  addPageRectangle(IIIII)V = AddPageRectangle(int, int, int, int, int)
  addPulse(II)V = AddPulse(int, int)
  addRotateBegin()V = AddRotateBegin()
  addRotateEnd()V = AddRotateEnd()
  addSound(III)V = AddSound(int, int, int)
  addSymbol(Ljava/lang/String;IIIII)V = AddSymbol(string, int, int, int, int, int)
  addText(Ljava/lang/String;)V = AddText(string)
  addTextAlign(I)V = AddTextAlign(int)
  addTextFont(I)V = AddTextFont(int)
  addTextLang(I)V = AddTextLang(int)
  addTextRotate(I)V = AddTextRotate(int)
  addTextSize(II)V = AddTextSize(int, int)
  addTextSmooth(I)V = AddTextSmooth(int)
  addTextStyle(IIII)V = AddTextStyle(int, int, int, int)
  addVLineBegin(II[I)V = AddVLineBegin(int, int, int[])
  addVLineEnd(I)V = AddVLineEnd(int)
  beginTransaction()V = BeginTransaction()
  checkHandle()V = CheckHandle()
  clearCommandBuffer()V = ClearCommandBuffer()
  connect(Ljava/lang/String;I)V = Connect(string, int)
  disconnect()V = Disconnect()
  downloadFirmwareList(Ljava/lang/String;Lcom/epson/epos2/printer/FirmwareUpdateListener;)V = DownloadFirmwareList(string, Com.Epson.Epos2.Printer.IFirmwareUpdateListener)
  downloadFirmwareList(Ljava/lang/String;Ljava/lang/String;Lcom/epson/epos2/printer/FirmwareUpdateListener;)V = DownloadFirmwareList(string, string, Com.Epson.Epos2.Printer.IFirmwareUpdateListener)
  endTransaction()V = EndTransaction()
  finalize()V = Finalize()
  forceCommand([BI)V = ForceCommand(byte[], int)
  forcePulse(III)V = ForcePulse(int, int, int)
  forceRecover(I)V = ForceRecover(int)
  forceReset(I)V = ForceReset(int)
  forceStopSound(I)V = ForceStopSound(int)
  getMaintenanceCounter(IILcom/epson/epos2/printer/MaintenanceCounterListener;)V = GetMaintenanceCounter(int, int, Com.Epson.Epos2.Printer.IMaintenanceCounterListener)
  getNetworkStatus(I)Lcom/epson/epos2/printer/PrinterNetworkStatusInfo; = GetNetworkStatus(int)
  getPrinterFirmwareInfo(ILcom/epson/epos2/printer/FirmwareUpdateListener;)V = GetPrinterFirmwareInfo(int, Com.Epson.Epos2.Printer.IFirmwareUpdateListener)
  getPrinterInformation(ILcom/epson/epos2/printer/PrinterInformationListener;)V = GetPrinterInformation(int, Com.Epson.Epos2.Printer.IPrinterInformationListener)
  getPrinterSetting(IILcom/epson/epos2/printer/PrinterSettingListener;)V = GetPrinterSetting(int, int, Com.Epson.Epos2.Printer.IPrinterSettingListener)
  getPrinterSettingEx(I)V = GetPrinterSettingEx(int)
  nativeEpos2AddBarcode(JLjava/lang/String;IIIJJ)I = NativeEpos2AddBarcode(long, string, int, int, int, long, long)
  nativeEpos2AddCommand(J[B)I = NativeEpos2AddCommand(long, byte[])
  nativeEpos2AddCut(JI)I = NativeEpos2AddCut(long, int)
  nativeEpos2AddFeedLine(JJ)I = NativeEpos2AddFeedLine(long, long)
  nativeEpos2AddFeedPosition(JI)I = NativeEpos2AddFeedPosition(long, int)
  nativeEpos2AddFeedUnit(JJ)I = NativeEpos2AddFeedUnit(long, long)
  nativeEpos2AddHLine(JJJI)I = NativeEpos2AddHLine(long, long, long, int)
  nativeEpos2AddHPosition(JJ)I = NativeEpos2AddHPosition(long, long)
  nativeEpos2AddImage(J[BJJJJJJIIIDI)I = NativeEpos2AddImage(long, byte[], long, long, long, long, long, long, int, int, int, double, int)
  nativeEpos2AddLayout(JIJJJJJJ)I = NativeEpos2AddLayout(long, int, long, long, long, long, long, long)
  nativeEpos2AddLineSpace(JJ)I = NativeEpos2AddLineSpace(long, long)
  nativeEpos2AddLogo(JJJ)I = NativeEpos2AddLogo(long, long, long)
  nativeEpos2AddPageArea(JJJJJ)I = NativeEpos2AddPageArea(long, long, long, long, long)
  nativeEpos2AddPageBegin(J)I = NativeEpos2AddPageBegin(long)
  nativeEpos2AddPageDirection(JI)I = NativeEpos2AddPageDirection(long, int)
  nativeEpos2AddPageEnd(J)I = NativeEpos2AddPageEnd(long)
  nativeEpos2AddPageLine(JJJJJI)I = NativeEpos2AddPageLine(long, long, long, long, long, int)
  nativeEpos2AddPagePosition(JJJ)I = NativeEpos2AddPagePosition(long, long, long)
  nativeEpos2AddPageRectangle(JJJJJI)I = NativeEpos2AddPageRectangle(long, long, long, long, long, int)
  nativeEpos2AddPulse(JII)I = NativeEpos2AddPulse(long, int, int)
  nativeEpos2AddRotateBegin(J)I = NativeEpos2AddRotateBegin(long)
  nativeEpos2AddRotateEnd(J)I = NativeEpos2AddRotateEnd(long)
  nativeEpos2AddSound(JIJJ)I = NativeEpos2AddSound(long, int, long, long)
  nativeEpos2AddSymbol(JLjava/lang/String;IIJJJ)I = NativeEpos2AddSymbol(long, string, int, int, long, long, long)
  nativeEpos2AddText(JLjava/lang/String;)I = NativeEpos2AddText(long, string)
  nativeEpos2AddTextAlign(JI)I = NativeEpos2AddTextAlign(long, int)
  nativeEpos2AddTextFont(JI)I = NativeEpos2AddTextFont(long, int)
  nativeEpos2AddTextLang(JI)I = NativeEpos2AddTextLang(long, int)
  nativeEpos2AddTextRotate(JI)I = NativeEpos2AddTextRotate(long, int)
  nativeEpos2AddTextSize(JJJ)I = NativeEpos2AddTextSize(long, long, long)
  nativeEpos2AddTextSmooth(JI)I = NativeEpos2AddTextSmooth(long, int)
  nativeEpos2AddTextStyle(JIIII)I = NativeEpos2AddTextStyle(long, int, int, int, int)
  nativeEpos2AddVLineBegin(JJI[I)I = NativeEpos2AddVLineBegin(long, long, int, int[])
  nativeEpos2AddVLineEnd(JI)I = NativeEpos2AddVLineEnd(long, int)
  nativeEpos2BeginTransaction(J)I = NativeEpos2BeginTransaction(long)
  nativeEpos2ClearCommandBuffer(J)I = NativeEpos2ClearCommandBuffer(long)
  nativeEpos2Connect(JLjava/lang/String;JLjava/lang/Object;)I = NativeEpos2Connect(long, string, long, Java.Lang.Object)
  nativeEpos2CopyIpAddress(J[Ljava/lang/String;)I = NativeEpos2CopyIpAddress(long, string[])
  nativeEpos2CreateHandle(II[J)I = NativeEpos2CreateHandle(int, int, long[])
  nativeEpos2DestroyHandle(J)I = NativeEpos2DestroyHandle(long)
  nativeEpos2Disconnect(J)I = NativeEpos2Disconnect(long)
  nativeEpos2EndTransaction(J)I = NativeEpos2EndTransaction(long)
  nativeEpos2ForceCommand(J[BI)I = NativeEpos2ForceCommand(long, byte[], int)
  nativeEpos2ForcePulse(JIII)I = NativeEpos2ForcePulse(long, int, int, int)
  nativeEpos2ForceRecover(JI)I = NativeEpos2ForceRecover(long, int)
  nativeEpos2ForceReset(JI)I = NativeEpos2ForceReset(long, int)
  nativeEpos2ForceStopSound(JI)I = NativeEpos2ForceStopSound(long, int)
  nativeEpos2GetAdmin(J)Ljava/lang/String; = NativeEpos2GetAdmin(long)
  nativeEpos2GetCommandBuffer(JI)I = NativeEpos2GetCommandBuffer(long, int)
  nativeEpos2GetFirmwareInformation(JI[Ljava/lang/String;)I = NativeEpos2GetFirmwareInformation(long, int, string[])
  nativeEpos2GetLocation(J)Ljava/lang/String; = NativeEpos2GetLocation(long)
  nativeEpos2GetLogoList(JLjava/util/Vector;)I = NativeEpos2GetLogoList(long, Java.Util.Vector)
  nativeEpos2GetMaintenanceCounter(JII[I)I = NativeEpos2GetMaintenanceCounter(long, int, int, int[])
  nativeEpos2GetNetworkStatus(JI)Lcom/epson/epos2/printer/PrinterNetworkStatusInfo; = NativeEpos2GetNetworkStatus(long, int)
  nativeEpos2GetPrinterBootId(J)Ljava/lang/String; = NativeEpos2GetPrinterBootId(long)
  nativeEpos2GetPrinterInformation(JI)I = NativeEpos2GetPrinterInformation(long, int)
  nativeEpos2GetPrinterMode(J)I = NativeEpos2GetPrinterMode(long)
  nativeEpos2GetPrinterSetting(JII[I)I = NativeEpos2GetPrinterSetting(long, int, int, int[])
  nativeEpos2GetPrinterSettingEx(JI)I = NativeEpos2GetPrinterSettingEx(long, int)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/printer/PrinterStatusInfo; = NativeEpos2GetStatus(long)
  nativeEpos2PrepareFirmUpdate(J)I = NativeEpos2PrepareFirmUpdate(long)
  nativeEpos2RegisterLogo(JJJ[BJJJJJJIIID)I = NativeEpos2RegisterLogo(long, long, long, byte[], long, long, long, long, long, long, int, int, int, double)
  nativeEpos2RequestPrintJobStatus(JLjava/lang/String;)I = NativeEpos2RequestPrintJobStatus(long, string)
  nativeEpos2ResetMaintenanceCounter(JII)I = NativeEpos2ResetMaintenanceCounter(long, int, int)
  nativeEpos2SendData(JJLjava/lang/String;I)I = NativeEpos2SendData(long, long, string, int)
  nativeEpos2SetInterval(JJ)I = NativeEpos2SetInterval(long, long)
  nativeEpos2SetPrinterSetting(JI[I[I)I = NativeEpos2SetPrinterSetting(long, int, int[], int[])
  nativeEpos2SetPrinterSettingEx(JILjava/lang/String;)I = NativeEpos2SetPrinterSettingEx(long, int, string)
  nativeEpos2StartMonitor(J)I = NativeEpos2StartMonitor(long)
  nativeEpos2StopMonitor(J)I = NativeEpos2StopMonitor(long)
  nativeEpos2UnregisterAllLogo(J)I = NativeEpos2UnregisterAllLogo(long)
  nativeEpos2UnregisterLogo(JJJ)I = NativeEpos2UnregisterLogo(long, long, long)
  nativeEpos2VerifyPassword(JILjava/lang/String;)I = NativeEpos2VerifyPassword(long, int, string)
  nativeEpos2WriteFirmwareImage(J[B)I = NativeEpos2WriteFirmwareImage(long, byte[])
  nativeEpos2WriteFirmwareImageHubBox(J[B)I = NativeEpos2WriteFirmwareImageHubBox(long, byte[])
  nativeEpos2WriteFirmwareImageMOT(J[B)I = NativeEpos2WriteFirmwareImageMOT(long, byte[])
  nativeEpos2WriteFirmwareImageSecure(J[B)I = NativeEpos2WriteFirmwareImageSecure(long, byte[])
  prepareDownload([Lcom/epson/epos2/printer/FirmwareInfoEx;Lcom/epson/epos2/printer/FirmwareUpdateListener;)I = PrepareDownload(Com.Epson.Epos2.Printer.FirmwareInfoEx[], Com.Epson.Epos2.Printer.IFirmwareUpdateListener)
  registerLogo(IILandroid/graphics/Bitmap;IIIIIIID)V = RegisterLogo(int, int, Android.Graphics.Bitmap, int, int, int, int, int, int, int, double)
  requestPrintJobStatus(Ljava/lang/String;)V = RequestPrintJobStatus(string)
  resetMaintenanceCounter(IILcom/epson/epos2/printer/MaintenanceCounterListener;)V = ResetMaintenanceCounter(int, int, Com.Epson.Epos2.Printer.IMaintenanceCounterListener)
  sendData(I)V = SendData(int)
  setConnectionEventListener(Lcom/epson/epos2/ConnectionListener;)V = SetConnectionEventListener(Com.Epson.Epos2.IConnectionListener)
  setGetPrinterSettingExListener(Lcom/epson/epos2/printer/GetPrinterSettingExListener;)V = SetGetPrinterSettingExListener(Com.Epson.Epos2.Printer.IGetPrinterSettingExListener)
  setPrinterSetting(ILjava/util/Map;Lcom/epson/epos2/printer/PrinterSettingListener;)V = SetPrinterSetting(int, System.Collections.Generic.IDictionary<Java.Lang.Integer, Java.Lang.Integer>, Com.Epson.Epos2.Printer.IPrinterSettingListener)
  setPrinterSettingEx(ILjava/lang/String;)V = SetPrinterSettingEx(int, string)
  setPrinterSettingEx(ILjava/lang/String;Ljava/lang/String;)V = SetPrinterSettingEx(int, string, string)
  setReceiveEventListener(Lcom/epson/epos2/printer/ReceiveListener;)V = SetReceiveEventListener(Com.Epson.Epos2.Printer.IReceiveListener)
  setSetPrinterSettingExListener(Lcom/epson/epos2/printer/SetPrinterSettingExListener;)V = SetSetPrinterSettingExListener(Com.Epson.Epos2.Printer.ISetPrinterSettingExListener)
  setStatusChangeEventListener(Lcom/epson/epos2/printer/StatusChangeListener;)V = SetStatusChangeEventListener(Com.Epson.Epos2.Printer.IStatusChangeListener)
  setVerifyPasswordListener(Lcom/epson/epos2/printer/VerifyPasswordListener;)V = SetVerifyPasswordListener(Com.Epson.Epos2.Printer.IVerifyPasswordListener)
  startMonitor()V = StartMonitor()
  stopMonitor()V = StopMonitor()
  unregisterAllLogo()V = UnregisterAllLogo()
  unregisterLogo(II)V = UnregisterLogo(int, int)
  updateFirmware(Lcom/epson/epos2/printer/FirmwareInfo;Lcom/epson/epos2/printer/FirmwareOption;Lcom/epson/epos2/printer/FirmwareUpdateListener;Landroid/content/Context;)V = UpdateFirmware(Com.Epson.Epos2.Printer.FirmwareInfo, Com.Epson.Epos2.Printer.FirmwareOption, Com.Epson.Epos2.Printer.IFirmwareUpdateListener, Android.Content.Context)
  updateFirmware(Lcom/epson/epos2/printer/FirmwareInfo;Lcom/epson/epos2/printer/FirmwareUpdateListener;Landroid/content/Context;)V = UpdateFirmware(Com.Epson.Epos2.Printer.FirmwareInfo, Com.Epson.Epos2.Printer.IFirmwareUpdateListener, Android.Content.Context)
  verifyPassword(ILjava/lang/String;)V = VerifyPassword(int, string)
  verifyUpdate(Lcom/epson/epos2/printer/FirmwareInfo;Lcom/epson/epos2/printer/FirmwareUpdateListener;)V = VerifyUpdate(Com.Epson.Epos2.Printer.FirmwareInfo, Com.Epson.Epos2.Printer.IFirmwareUpdateListener)
  writeFirmware(Lcom/epson/epos2/printer/FirmwareUpdateListener;Lcom/epson/epos2/printer/FirmwareInfoEx;Ljava/lang/String;Lcom/epson/epos2/printer/FirmwareOption;[I)I = WriteFirmware(Com.Epson.Epos2.Printer.IFirmwareUpdateListener, Com.Epson.Epos2.Printer.FirmwareInfoEx, string, Com.Epson.Epos2.Printer.FirmwareOption, int[])
com/epson/epos2/printer/Printer = Com.Epson.Epos2.Printer.Printer
  <init>()V = .ctor()
  <init>(IILandroid/content/Context;)V = .ctor(int, int, Android.Content.Context)
  BATTERY_LEVEL_0 = BatteryLevel0
  BATTERY_LEVEL_1 = BatteryLevel1
  BATTERY_LEVEL_2 = BatteryLevel2
  BATTERY_LEVEL_3 = BatteryLevel3
  BATTERY_LEVEL_4 = BatteryLevel4
  BATTERY_LEVEL_5 = BatteryLevel5
  BATTERY_LEVEL_6 = BatteryLevel6
  currentImagesFirmwareInfo = CurrentImagesFirmwareInfo
  EU_M30 = EuM30
  EVENT_AUTO_RECOVER_ERROR = EventAutoRecoverError
  EVENT_AUTO_RECOVER_OK = EventAutoRecoverOk
  EVENT_BATTERY_EMPTY = EventBatteryEmpty
  EVENT_BATTERY_ENOUGH = EventBatteryEnough
  EVENT_REMOVAL_DETECT_PAPER = EventRemovalDetectPaper
  EVENT_REMOVAL_DETECT_PAPER_NONE = EventRemovalDetectPaperNone
  EVENT_REMOVAL_DETECT_UNKNOWN = EventRemovalDetectUnknown
  EVENT_REMOVAL_WAIT_NONE = EventRemovalWaitNone
  EVENT_REMOVAL_WAIT_PAPER = EventRemovalWaitPaper
  EVENT_UNRECOVERABLE_ERROR = EventUnrecoverableError
  firmwareImage = FirmwareImage
  FIRMWARE_MODE_MEMORY_REWRITE = FirmwareModeMemoryRewrite
  FIRMWARE_MODE_NORMAL = FirmwareModeNormal
  HIGH_VOLTAGE_ERR = HighVoltageErr
  HTTPS_TIMEOUT = HttpsTimeout
  JSON_KEY_MAINTENANCE_NAME = JsonKeyMaintenanceName
  JSON_KEY_N_BROKENDOT_NAME = JsonKeyNBrokendotName
  JSON_KEY_N_WARNINGDOT_NAME = JsonKeyNWarningdotName
  JSON_KEY_P_BROKENDOT_NAME = JsonKeyPBrokendotName
  JSON_KEY_PRINTERSPEC_NAME = JsonKeyPrinterspecName
  JSON_KEY_PRODUCT_NAME = JsonKeyProductName
  JSON_KEY_P_WARNINGDOT_NAME = JsonKeyPWarningdotName
  JSON_KEY_SERIALNO_NAME = JsonKeySerialnoName
  JSON_KEY_SETTING_NWCSAUTH_PASSWORD_KEY = JsonKeySettingNwcsauthPasswordKey
  JSON_KEY_SETTING_NWDEVINFO_ADMINID_KEY = JsonKeySettingNwdevinfoAdminidKey
  JSON_KEY_SETTING_NWDEVINFO_PASSWORDAUTH_KEY = JsonKeySettingNwdevinfoPasswordauthKey
  JSON_KEY_SETTING_WIFICFG_WPAPSK_KEY = JsonKeySettingWificfgWpapskKey
  JSON_KEY_THERMALHEAD_NAME = JsonKeyThermalheadName
  LAYOUT_LABEL = LayoutLabel
  LAYOUT_LABEL_BM = LayoutLabelBm
  LAYOUT_RECEIPT = LayoutReceipt
  LAYOUT_RECEIPT_BM = LayoutReceiptBm
  LOW_VOLTAGE_ERR = LowVoltageErr
  MAINTENANCE_COUNTER_AUTOCUTTER = MaintenanceCounterAutocutter
  MAINTENANCE_COUNTER_OTHER = MaintenanceCounterOther
  MAINTENANCE_COUNTER_PAPERFEED = MaintenanceCounterPaperfeed
  PREFIX_ENCRYPT = PrefixEncrypt
  REMOVAL_DETECT_PAPER = RemovalDetectPaper
  REMOVAL_DETECT_PAPER_NONE = RemovalDetectPaperNone
  REMOVAL_DETECT_UNKNOWN = RemovalDetectUnknown
  SB_H50 = SbH50
  SETTING_OTHER = SettingOther
  SETTING_PAPERWIDTH = SettingPaperwidth
  SETTING_PAPERWIDTH_58_0 = SettingPaperwidth580
  SETTING_PAPERWIDTH_60_0 = SettingPaperwidth600
  SETTING_PAPERWIDTH_70_0 = SettingPaperwidth700
  SETTING_PAPERWIDTH_76_0 = SettingPaperwidth760
  SETTING_PAPERWIDTH_80_0 = SettingPaperwidth800
  SETTING_PAPERWIDTH_NOT_SETTING_TARGET = SettingPaperwidthNotSettingTarget
  SETTING_PRINTDENSITY = SettingPrintdensity
  SETTING_PRINTDENSITY_100 = SettingPrintdensity100
  SETTING_PRINTDENSITY_105 = SettingPrintdensity105
  SETTING_PRINTDENSITY_110 = SettingPrintdensity110
  SETTING_PRINTDENSITY_115 = SettingPrintdensity115
  SETTING_PRINTDENSITY_120 = SettingPrintdensity120
  SETTING_PRINTDENSITY_125 = SettingPrintdensity125
  SETTING_PRINTDENSITY_130 = SettingPrintdensity130
  SETTING_PRINTDENSITY_70 = SettingPrintdensity70
  SETTING_PRINTDENSITY_75 = SettingPrintdensity75
  SETTING_PRINTDENSITY_80 = SettingPrintdensity80
  SETTING_PRINTDENSITY_85 = SettingPrintdensity85
  SETTING_PRINTDENSITY_90 = SettingPrintdensity90
  SETTING_PRINTDENSITY_95 = SettingPrintdensity95
  SETTING_PRINTDENSITY_DIP = SettingPrintdensityDip
  SETTING_PRINTDENSITY_NOT_SETTING_TARGET = SettingPrintdensityNotSettingTarget
  SETTING_PRINTSPEED = SettingPrintspeed
  SETTING_PRINTSPEED_1 = SettingPrintspeed1
  SETTING_PRINTSPEED_10 = SettingPrintspeed10
  SETTING_PRINTSPEED_11 = SettingPrintspeed11
  SETTING_PRINTSPEED_12 = SettingPrintspeed12
  SETTING_PRINTSPEED_13 = SettingPrintspeed13
  SETTING_PRINTSPEED_14 = SettingPrintspeed14
  SETTING_PRINTSPEED_15 = SettingPrintspeed15
  SETTING_PRINTSPEED_16 = SettingPrintspeed16
  SETTING_PRINTSPEED_17 = SettingPrintspeed17
  SETTING_PRINTSPEED_2 = SettingPrintspeed2
  SETTING_PRINTSPEED_3 = SettingPrintspeed3
  SETTING_PRINTSPEED_4 = SettingPrintspeed4
  SETTING_PRINTSPEED_5 = SettingPrintspeed5
  SETTING_PRINTSPEED_6 = SettingPrintspeed6
  SETTING_PRINTSPEED_7 = SettingPrintspeed7
  SETTING_PRINTSPEED_8 = SettingPrintspeed8
  SETTING_PRINTSPEED_9 = SettingPrintspeed9
  SETTING_PRINTSPEED_NOT_SETTING_TARGET = SettingPrintspeedNotSettingTarget
  TM_M30 = TM_M30
  TM_H6000 = TmH6000
  TM_L100 = TmL100
  TM_L90 = TmL90
  TM_L90LFC = TmL90lfc
  TM_M10 = TmM10
  TM_M30II = TmM30ii
  TM_M30III = TmM30iii
  TM_M50 = TmM50
  TM_M50II = TmM50ii
  TM_M55 = TmM55
  TM_P20 = TmP20
  TM_P20II = TmP20ii
  TM_P60 = TmP60
  TM_P60II = TmP60ii
  TM_P80 = TmP80
  TM_P80II = TmP80ii
  TM_T100 = TmT100
  TM_T20 = TmT20
  TM_T60 = TmT60
  TM_T70 = TmT70
  TM_T81 = TmT81
  TM_T82 = TmT82
  TM_T83 = TmT83
  TM_T83III = TmT83iii
  TM_T88 = TmT88
  TM_T88VII = TmT88vii
  TM_T90 = TmT90
  TM_T90KP = TmT90kp
  TM_U220 = TmU220
  TM_U220II = TmU220ii
  TM_U330 = TmU330
  TS_100 = Ts100
  WIFI_SIGNAL_EXCELLENT = WifiSignalExcellent
  WIFI_SIGNAL_FAIL = WifiSignalFail
  WIFI_SIGNAL_GOOD = WifiSignalGood
  WIFI_SIGNAL_NO = WifiSignalNo
  getAdmin()Ljava/lang/String; = Admin
  getInterval()I = Interval
  setInterval(I)V = Interval
  getLocation()Ljava/lang/String; = Location
  getStatus()Lcom/epson/epos2/printer/PrinterStatusInfo; = Status
  addBarcode(Ljava/lang/String;IIIII)V = AddBarcode(string, int, int, int, int, int)
  addCommand([B)V = AddCommand(byte[])
  addCut(I)V = AddCut(int)
  addFeedLine(I)V = AddFeedLine(int)
  addFeedPosition(I)V = AddFeedPosition(int)
  addFeedUnit(I)V = AddFeedUnit(int)
  addHLine(III)V = AddHLine(int, int, int)
  addHPosition(I)V = AddHPosition(int)
  addImage(Landroid/graphics/Bitmap;IIIIIIIDI)V = AddImage(Android.Graphics.Bitmap, int, int, int, int, int, int, int, double, int)
  addLayout(IIIIIII)V = AddLayout(int, int, int, int, int, int, int)
  addLineSpace(I)V = AddLineSpace(int)
  addLogo(II)V = AddLogo(int, int)
  addPageArea(IIII)V = AddPageArea(int, int, int, int)
  addPageBegin()V = AddPageBegin()
  addPageDirection(I)V = AddPageDirection(int)
  addPageEnd()V = AddPageEnd()
  addPageLine(IIIII)V = AddPageLine(int, int, int, int, int)
  addPagePosition(II)V = AddPagePosition(int, int)
  addPageRectangle(IIIII)V = AddPageRectangle(int, int, int, int, int)
  addPulse(II)V = AddPulse(int, int)
  addRotateBegin()V = AddRotateBegin()
  addRotateEnd()V = AddRotateEnd()
  addSound(III)V = AddSound(int, int, int)
  addSymbol(Ljava/lang/String;IIIII)V = AddSymbol(string, int, int, int, int, int)
  addText(Ljava/lang/String;)V = AddText(string)
  addTextAlign(I)V = AddTextAlign(int)
  addTextFont(I)V = AddTextFont(int)
  addTextLang(I)V = AddTextLang(int)
  addTextRotate(I)V = AddTextRotate(int)
  addTextSize(II)V = AddTextSize(int, int)
  addTextSmooth(I)V = AddTextSmooth(int)
  addTextStyle(IIII)V = AddTextStyle(int, int, int, int)
  addVLineBegin(II[I)V = AddVLineBegin(int, int, int[])
  addVLineEnd(I)V = AddVLineEnd(int)
  beginTransaction()V = BeginTransaction()
  checkHandle()V = CheckHandle()
  clearCommandBuffer()V = ClearCommandBuffer()
  connect(Ljava/lang/String;I)V = Connect(string, int)
  disconnect()V = Disconnect()
  downloadFirmwareList(Ljava/lang/String;Lcom/epson/epos2/printer/FirmwareUpdateListener;)V = DownloadFirmwareList(string, Com.Epson.Epos2.Printer.IFirmwareUpdateListener)
  downloadFirmwareList(Ljava/lang/String;Ljava/lang/String;Lcom/epson/epos2/printer/FirmwareUpdateListener;)V = DownloadFirmwareList(string, string, Com.Epson.Epos2.Printer.IFirmwareUpdateListener)
  endTransaction()V = EndTransaction()
  forceCommand([BI)V = ForceCommand(byte[], int)
  forcePulse(III)V = ForcePulse(int, int, int)
  forceRecover(I)V = ForceRecover(int)
  forceReset(I)V = ForceReset(int)
  forceStopSound(I)V = ForceStopSound(int)
  getMaintenanceCounter(IILcom/epson/epos2/printer/MaintenanceCounterListener;)V = GetMaintenanceCounter(int, int, Com.Epson.Epos2.Printer.IMaintenanceCounterListener)
  getNetworkStatus(I)Lcom/epson/epos2/printer/PrinterNetworkStatusInfo; = GetNetworkStatus(int)
  getPrinterFirmwareInfo(ILcom/epson/epos2/printer/FirmwareUpdateListener;)V = GetPrinterFirmwareInfo(int, Com.Epson.Epos2.Printer.IFirmwareUpdateListener)
  getPrinterInformation(ILcom/epson/epos2/printer/PrinterInformationListener;)V = GetPrinterInformation(int, Com.Epson.Epos2.Printer.IPrinterInformationListener)
  getPrinterSetting(IILcom/epson/epos2/printer/PrinterSettingListener;)V = GetPrinterSetting(int, int, Com.Epson.Epos2.Printer.IPrinterSettingListener)
  getPrinterSettingEx(I)V = GetPrinterSettingEx(int)
  nativeEpos2AddBarcode(JLjava/lang/String;IIIJJ)I = NativeEpos2AddBarcode(long, string, int, int, int, long, long)
  nativeEpos2AddCommand(J[B)I = NativeEpos2AddCommand(long, byte[])
  nativeEpos2AddCut(JI)I = NativeEpos2AddCut(long, int)
  nativeEpos2AddFeedLine(JJ)I = NativeEpos2AddFeedLine(long, long)
  nativeEpos2AddFeedPosition(JI)I = NativeEpos2AddFeedPosition(long, int)
  nativeEpos2AddFeedUnit(JJ)I = NativeEpos2AddFeedUnit(long, long)
  nativeEpos2AddHLine(JJJI)I = NativeEpos2AddHLine(long, long, long, int)
  nativeEpos2AddHPosition(JJ)I = NativeEpos2AddHPosition(long, long)
  nativeEpos2AddImage(J[BJJJJJJIIIDI)I = NativeEpos2AddImage(long, byte[], long, long, long, long, long, long, int, int, int, double, int)
  nativeEpos2AddLayout(JIJJJJJJ)I = NativeEpos2AddLayout(long, int, long, long, long, long, long, long)
  nativeEpos2AddLineSpace(JJ)I = NativeEpos2AddLineSpace(long, long)
  nativeEpos2AddLogo(JJJ)I = NativeEpos2AddLogo(long, long, long)
  nativeEpos2AddPageArea(JJJJJ)I = NativeEpos2AddPageArea(long, long, long, long, long)
  nativeEpos2AddPageBegin(J)I = NativeEpos2AddPageBegin(long)
  nativeEpos2AddPageDirection(JI)I = NativeEpos2AddPageDirection(long, int)
  nativeEpos2AddPageEnd(J)I = NativeEpos2AddPageEnd(long)
  nativeEpos2AddPageLine(JJJJJI)I = NativeEpos2AddPageLine(long, long, long, long, long, int)
  nativeEpos2AddPagePosition(JJJ)I = NativeEpos2AddPagePosition(long, long, long)
  nativeEpos2AddPageRectangle(JJJJJI)I = NativeEpos2AddPageRectangle(long, long, long, long, long, int)
  nativeEpos2AddPulse(JII)I = NativeEpos2AddPulse(long, int, int)
  nativeEpos2AddRotateBegin(J)I = NativeEpos2AddRotateBegin(long)
  nativeEpos2AddRotateEnd(J)I = NativeEpos2AddRotateEnd(long)
  nativeEpos2AddSound(JIJJ)I = NativeEpos2AddSound(long, int, long, long)
  nativeEpos2AddSymbol(JLjava/lang/String;IIJJJ)I = NativeEpos2AddSymbol(long, string, int, int, long, long, long)
  nativeEpos2AddText(JLjava/lang/String;)I = NativeEpos2AddText(long, string)
  nativeEpos2AddTextAlign(JI)I = NativeEpos2AddTextAlign(long, int)
  nativeEpos2AddTextFont(JI)I = NativeEpos2AddTextFont(long, int)
  nativeEpos2AddTextLang(JI)I = NativeEpos2AddTextLang(long, int)
  nativeEpos2AddTextRotate(JI)I = NativeEpos2AddTextRotate(long, int)
  nativeEpos2AddTextSize(JJJ)I = NativeEpos2AddTextSize(long, long, long)
  nativeEpos2AddTextSmooth(JI)I = NativeEpos2AddTextSmooth(long, int)
  nativeEpos2AddTextStyle(JIIII)I = NativeEpos2AddTextStyle(long, int, int, int, int)
  nativeEpos2AddVLineBegin(JJI[I)I = NativeEpos2AddVLineBegin(long, long, int, int[])
  nativeEpos2AddVLineEnd(JI)I = NativeEpos2AddVLineEnd(long, int)
  nativeEpos2BeginTransaction(J)I = NativeEpos2BeginTransaction(long)
  nativeEpos2ClearCommandBuffer(J)I = NativeEpos2ClearCommandBuffer(long)
  nativeEpos2Connect(JLjava/lang/String;JLjava/lang/Object;)I = NativeEpos2Connect(long, string, long, Java.Lang.Object)
  nativeEpos2CopyIpAddress(J[Ljava/lang/String;)I = NativeEpos2CopyIpAddress(long, string[])
  nativeEpos2CreateHandle(II[J)I = NativeEpos2CreateHandle(int, int, long[])
  nativeEpos2DestroyHandle(J)I = NativeEpos2DestroyHandle(long)
  nativeEpos2Disconnect(J)I = NativeEpos2Disconnect(long)
  nativeEpos2EndTransaction(J)I = NativeEpos2EndTransaction(long)
  nativeEpos2ForceCommand(J[BI)I = NativeEpos2ForceCommand(long, byte[], int)
  nativeEpos2ForcePulse(JIII)I = NativeEpos2ForcePulse(long, int, int, int)
  nativeEpos2ForceRecover(JI)I = NativeEpos2ForceRecover(long, int)
  nativeEpos2ForceReset(JI)I = NativeEpos2ForceReset(long, int)
  nativeEpos2ForceStopSound(JI)I = NativeEpos2ForceStopSound(long, int)
  nativeEpos2GetAdmin(J)Ljava/lang/String; = NativeEpos2GetAdmin(long)
  nativeEpos2GetCommandBuffer(JI)I = NativeEpos2GetCommandBuffer(long, int)
  nativeEpos2GetFirmwareInformation(JI[Ljava/lang/String;)I = NativeEpos2GetFirmwareInformation(long, int, string[])
  nativeEpos2GetLocation(J)Ljava/lang/String; = NativeEpos2GetLocation(long)
  nativeEpos2GetLogoList(JLjava/util/Vector;)I = NativeEpos2GetLogoList(long, Java.Util.Vector)
  nativeEpos2GetMaintenanceCounter(JII[I)I = NativeEpos2GetMaintenanceCounter(long, int, int, int[])
  nativeEpos2GetNetworkStatus(JI)Lcom/epson/epos2/printer/PrinterNetworkStatusInfo; = NativeEpos2GetNetworkStatus(long, int)
  nativeEpos2GetPrinterBootId(J)Ljava/lang/String; = NativeEpos2GetPrinterBootId(long)
  nativeEpos2GetPrinterInformation(JI)I = NativeEpos2GetPrinterInformation(long, int)
  nativeEpos2GetPrinterMode(J)I = NativeEpos2GetPrinterMode(long)
  nativeEpos2GetPrinterSetting(JII[I)I = NativeEpos2GetPrinterSetting(long, int, int, int[])
  nativeEpos2GetPrinterSettingEx(JI)I = NativeEpos2GetPrinterSettingEx(long, int)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/printer/PrinterStatusInfo; = NativeEpos2GetStatus(long)
  nativeEpos2PrepareFirmUpdate(J)I = NativeEpos2PrepareFirmUpdate(long)
  nativeEpos2RegisterLogo(JJJ[BJJJJJJIIID)I = NativeEpos2RegisterLogo(long, long, long, byte[], long, long, long, long, long, long, int, int, int, double)
  nativeEpos2RequestPrintJobStatus(JLjava/lang/String;)I = NativeEpos2RequestPrintJobStatus(long, string)
  nativeEpos2ResetMaintenanceCounter(JII)I = NativeEpos2ResetMaintenanceCounter(long, int, int)
  nativeEpos2SendData(JJLjava/lang/String;I)I = NativeEpos2SendData(long, long, string, int)
  nativeEpos2SetInterval(JJ)I = NativeEpos2SetInterval(long, long)
  nativeEpos2SetPrinterSetting(JI[I[I)I = NativeEpos2SetPrinterSetting(long, int, int[], int[])
  nativeEpos2SetPrinterSettingEx(JILjava/lang/String;)I = NativeEpos2SetPrinterSettingEx(long, int, string)
  nativeEpos2StartMonitor(J)I = NativeEpos2StartMonitor(long)
  nativeEpos2StopMonitor(J)I = NativeEpos2StopMonitor(long)
  nativeEpos2UnregisterAllLogo(J)I = NativeEpos2UnregisterAllLogo(long)
  nativeEpos2UnregisterLogo(JJJ)I = NativeEpos2UnregisterLogo(long, long, long)
  nativeEpos2VerifyPassword(JILjava/lang/String;)I = NativeEpos2VerifyPassword(long, int, string)
  nativeEpos2WriteFirmwareImage(J[B)I = NativeEpos2WriteFirmwareImage(long, byte[])
  nativeEpos2WriteFirmwareImageHubBox(J[B)I = NativeEpos2WriteFirmwareImageHubBox(long, byte[])
  nativeEpos2WriteFirmwareImageMOT(J[B)I = NativeEpos2WriteFirmwareImageMOT(long, byte[])
  nativeEpos2WriteFirmwareImageSecure(J[B)I = NativeEpos2WriteFirmwareImageSecure(long, byte[])
  prepareDownload([Lcom/epson/epos2/printer/FirmwareInfoEx;Lcom/epson/epos2/printer/FirmwareUpdateListener;)I = PrepareDownload(Com.Epson.Epos2.Printer.FirmwareInfoEx[], Com.Epson.Epos2.Printer.IFirmwareUpdateListener)
  registerLogo(IILandroid/graphics/Bitmap;IIIIIIID)V = RegisterLogo(int, int, Android.Graphics.Bitmap, int, int, int, int, int, int, int, double)
  requestPrintJobStatus(Ljava/lang/String;)V = RequestPrintJobStatus(string)
  resetMaintenanceCounter(IILcom/epson/epos2/printer/MaintenanceCounterListener;)V = ResetMaintenanceCounter(int, int, Com.Epson.Epos2.Printer.IMaintenanceCounterListener)
  sendData(I)V = SendData(int)
  setConnectionEventListener(Lcom/epson/epos2/ConnectionListener;)V = SetConnectionEventListener(Com.Epson.Epos2.IConnectionListener)
  setGetPrinterSettingExListener(Lcom/epson/epos2/printer/GetPrinterSettingExListener;)V = SetGetPrinterSettingExListener(Com.Epson.Epos2.Printer.IGetPrinterSettingExListener)
  setPrinterSetting(ILjava/util/Map;Lcom/epson/epos2/printer/PrinterSettingListener;)V = SetPrinterSetting(int, System.Collections.Generic.IDictionary<Java.Lang.Integer, Java.Lang.Integer>, Com.Epson.Epos2.Printer.IPrinterSettingListener)
  setPrinterSettingEx(ILjava/lang/String;)V = SetPrinterSettingEx(int, string)
  setPrinterSettingEx(ILjava/lang/String;Ljava/lang/String;)V = SetPrinterSettingEx(int, string, string)
  setReceiveEventListener(Lcom/epson/epos2/printer/ReceiveListener;)V = SetReceiveEventListener(Com.Epson.Epos2.Printer.IReceiveListener)
  setSetPrinterSettingExListener(Lcom/epson/epos2/printer/SetPrinterSettingExListener;)V = SetSetPrinterSettingExListener(Com.Epson.Epos2.Printer.ISetPrinterSettingExListener)
  setStatusChangeEventListener(Lcom/epson/epos2/printer/StatusChangeListener;)V = SetStatusChangeEventListener(Com.Epson.Epos2.Printer.IStatusChangeListener)
  setVerifyPasswordListener(Lcom/epson/epos2/printer/VerifyPasswordListener;)V = SetVerifyPasswordListener(Com.Epson.Epos2.Printer.IVerifyPasswordListener)
  startMonitor()V = StartMonitor()
  stopMonitor()V = StopMonitor()
  unregisterAllLogo()V = UnregisterAllLogo()
  unregisterLogo(II)V = UnregisterLogo(int, int)
  updateFirmware(Lcom/epson/epos2/printer/FirmwareInfo;Lcom/epson/epos2/printer/FirmwareOption;Lcom/epson/epos2/printer/FirmwareUpdateListener;Landroid/content/Context;)V = UpdateFirmware(Com.Epson.Epos2.Printer.FirmwareInfo, Com.Epson.Epos2.Printer.FirmwareOption, Com.Epson.Epos2.Printer.IFirmwareUpdateListener, Android.Content.Context)
  updateFirmware(Lcom/epson/epos2/printer/FirmwareInfo;Lcom/epson/epos2/printer/FirmwareUpdateListener;Landroid/content/Context;)V = UpdateFirmware(Com.Epson.Epos2.Printer.FirmwareInfo, Com.Epson.Epos2.Printer.IFirmwareUpdateListener, Android.Content.Context)
  verifyPassword(ILjava/lang/String;)V = VerifyPassword(int, string)
  verifyUpdate(Lcom/epson/epos2/printer/FirmwareInfo;Lcom/epson/epos2/printer/FirmwareUpdateListener;)V = VerifyUpdate(Com.Epson.Epos2.Printer.FirmwareInfo, Com.Epson.Epos2.Printer.IFirmwareUpdateListener)
  writeFirmware(Lcom/epson/epos2/printer/FirmwareUpdateListener;Lcom/epson/epos2/printer/FirmwareInfoEx;Ljava/lang/String;Lcom/epson/epos2/printer/FirmwareOption;[I)I = WriteFirmware(Com.Epson.Epos2.Printer.IFirmwareUpdateListener, Com.Epson.Epos2.Printer.FirmwareInfoEx, string, Com.Epson.Epos2.Printer.FirmwareOption, int[])
com/epson/epos2/printer/PrinterInformationListener = Com.Epson.Epos2.Printer.IPrinterInformationListener
  onGetPrinterInformation(ILjava/lang/String;)V = OnGetPrinterInformation(int, string)
com/epson/epos2/printer/PrinterInformationListener = Com.Epson.Epos2.Printer.IPrinterInformationListener
  onGetPrinterInformation(ILjava/lang/String;)V = OnGetPrinterInformation(int, string)
com/epson/epos2/printer/PrinterNetworkStatusInfo = Com.Epson.Epos2.Printer.PrinterNetworkStatusInfo
  getConnectApMacAddress()Ljava/lang/String; = ConnectApMacAddress
  getConnection()I = Connection
  getSsid()Ljava/lang/String; = Ssid
  getWifiSignalStatus()I = WifiSignalStatus
com/epson/epos2/printer/PrinterNetworkStatusInfo = Com.Epson.Epos2.Printer.PrinterNetworkStatusInfo
  getConnectApMacAddress()Ljava/lang/String; = ConnectApMacAddress
  getConnection()I = Connection
  getSsid()Ljava/lang/String; = Ssid
  getWifiSignalStatus()I = WifiSignalStatus
com/epson/epos2/printer/PrinterSettingListener = Com.Epson.Epos2.Printer.IPrinterSettingListener
  onGetPrinterSetting(III)V = OnGetPrinterSetting(int, int, int)
  onSetPrinterSetting(I)V = OnSetPrinterSetting(int)
com/epson/epos2/printer/PrinterSettingListener = Com.Epson.Epos2.Printer.IPrinterSettingListener
  onGetPrinterSetting(III)V = OnGetPrinterSetting(int, int, int)
  onSetPrinterSetting(I)V = OnSetPrinterSetting(int)
com/epson/epos2/printer/PrinterStatusInfo = Com.Epson.Epos2.Printer.PrinterStatusInfo
  <init>()V = .ctor()
  getAdapter()I = Adapter
  getAutoRecoverError()I = AutoRecoverError
  getBatteryLevel()I = BatteryLevel
  getBuzzer()I = Buzzer
  getConnection()I = Connection
  getCoverOpen()I = CoverOpen
  getDrawer()I = Drawer
  getErrorStatus()I = ErrorStatus
  getOnline()I = Online
  getPanelSwitch()I = PanelSwitch
  getPaper()I = Paper
  getPaperFeed()I = PaperFeed
  getPaperTakenSensor()I = PaperTakenSensor
  getRemovalWaiting()I = RemovalWaiting
  getUnrecoverError()I = UnrecoverError
  getWaitOnline()I = WaitOnline
com/epson/epos2/printer/PrinterStatusInfo = Com.Epson.Epos2.Printer.PrinterStatusInfo
  <init>()V = .ctor()
  getAdapter()I = Adapter
  getAutoRecoverError()I = AutoRecoverError
  getBatteryLevel()I = BatteryLevel
  getBuzzer()I = Buzzer
  getConnection()I = Connection
  getCoverOpen()I = CoverOpen
  getDrawer()I = Drawer
  getErrorStatus()I = ErrorStatus
  getOnline()I = Online
  getPanelSwitch()I = PanelSwitch
  getPaper()I = Paper
  getPaperFeed()I = PaperFeed
  getPaperTakenSensor()I = PaperTakenSensor
  getRemovalWaiting()I = RemovalWaiting
  getUnrecoverError()I = UnrecoverError
  getWaitOnline()I = WaitOnline
com/epson/epos2/printer/ReceiveListener = Com.Epson.Epos2.Printer.IReceiveListener
  onPtrReceive(Lcom/epson/epos2/printer/Printer;ILcom/epson/epos2/printer/PrinterStatusInfo;Ljava/lang/String;)V = OnPtrReceive(Com.Epson.Epos2.Printer.Printer, int, Com.Epson.Epos2.Printer.PrinterStatusInfo, string)
com/epson/epos2/printer/ReceiveListener = Com.Epson.Epos2.Printer.IReceiveListener
  onPtrReceive(Lcom/epson/epos2/printer/Printer;ILcom/epson/epos2/printer/PrinterStatusInfo;Ljava/lang/String;)V = OnPtrReceive(Com.Epson.Epos2.Printer.Printer, int, Com.Epson.Epos2.Printer.PrinterStatusInfo, string)
com/epson/epos2/printer/SetPrinterSettingExListener = Com.Epson.Epos2.Printer.ISetPrinterSettingExListener
  onSetPrinterSettingEx(Lcom/epson/epos2/printer/Printer;I)V = OnSetPrinterSettingEx(Com.Epson.Epos2.Printer.Printer, int)
com/epson/epos2/printer/SetPrinterSettingExListener = Com.Epson.Epos2.Printer.ISetPrinterSettingExListener
  onSetPrinterSettingEx(Lcom/epson/epos2/printer/Printer;I)V = OnSetPrinterSettingEx(Com.Epson.Epos2.Printer.Printer, int)
com/epson/epos2/printer/StatusChangeListener = Com.Epson.Epos2.Printer.IStatusChangeListener
  onPtrStatusChange(Lcom/epson/epos2/printer/Printer;I)V = OnPtrStatusChange(Com.Epson.Epos2.Printer.Printer, int)
com/epson/epos2/printer/StatusChangeListener = Com.Epson.Epos2.Printer.IStatusChangeListener
  onPtrStatusChange(Lcom/epson/epos2/printer/Printer;I)V = OnPtrStatusChange(Com.Epson.Epos2.Printer.Printer, int)
com/epson/epos2/printer/tmutility/data/JSONData = Com.Epson.Epos2.Printer.Tmutility.Data.JSONData
  <init>()V = .ctor()
  getJSONObj()Lorg/json/JSONObject; = JSONObj
  setJSONObj(Lorg/json/JSONObject;)V = JSONObj
  deleteKey(Ljava/lang/String;)V = DeleteKey(string)
  getJsonData(Ljava/lang/String;)Lcom/epson/epos2/printer/tmutility/data/JSONData; = GetJsonData(string)
  getJSONObj(Ljava/lang/String;)Lorg/json/JSONObject; = GetJSONObj(string)
  getJSONObj(Ljava/util/ArrayList;)Lorg/json/JSONObject; = GetJSONObj(System.Collections.Generic.IList<string>)
  getJSONValue(Ljava/lang/String;)Ljava/lang/String; = GetJSONValue(string)
  getJSONValue2(Ljava/lang/String;)Ljava/lang/String; = GetJSONValue2(string)
  getParentKeyPath(Ljava/lang/String;)Ljava/lang/String; = GetParentKeyPath(string)
  isEnableKey(Ljava/lang/String;)Z = IsEnableKey(string)
  setJSONValue(Ljava/lang/String;Ljava/lang/String;)Z = SetJSONValue(string, string)
com/epson/epos2/printer/tmutility/data/JSONData = Com.Epson.Epos2.Printer.Tmutility.Data.JSONData
  <init>()V = .ctor()
  getJSONObj()Lorg/json/JSONObject; = JSONObj
  setJSONObj(Lorg/json/JSONObject;)V = JSONObj
  deleteKey(Ljava/lang/String;)V = DeleteKey(string)
  getJsonData(Ljava/lang/String;)Lcom/epson/epos2/printer/tmutility/data/JSONData; = GetJsonData(string)
  getJSONObj(Ljava/lang/String;)Lorg/json/JSONObject; = GetJSONObj(string)
  getJSONObj(Ljava/util/ArrayList;)Lorg/json/JSONObject; = GetJSONObj(System.Collections.Generic.IList<string>)
  getJSONValue(Ljava/lang/String;)Ljava/lang/String; = GetJSONValue(string)
  getJSONValue2(Ljava/lang/String;)Ljava/lang/String; = GetJSONValue2(string)
  getParentKeyPath(Ljava/lang/String;)Ljava/lang/String; = GetParentKeyPath(string)
  isEnableKey(Ljava/lang/String;)Z = IsEnableKey(string)
  setJSONValue(Ljava/lang/String;Ljava/lang/String;)Z = SetJSONValue(string, string)
com/epson/epos2/printer/tmutility/printerSettings/intelligent/TMiUtil = Com.Epson.Epos2.Printer.Tmutility.PrinterSettings.Intelligent.TMiUtil
  <init>()V = .ctor()
  convertEncryptedHashValue(Ljava/lang/String;)Ljava/lang/String; = ConvertEncryptedHashValue(string)
  encodeData(Ljava/lang/String;)Ljava/lang/String; = EncodeData(string)
com/epson/epos2/printer/tmutility/printerSettings/intelligent/TMiUtil = Com.Epson.Epos2.Printer.Tmutility.PrinterSettings.Intelligent.TMiUtil
  <init>()V = .ctor()
  convertEncryptedHashValue(Ljava/lang/String;)Ljava/lang/String; = ConvertEncryptedHashValue(string)
  encodeData(Ljava/lang/String;)Ljava/lang/String; = EncodeData(string)
com/epson/epos2/printer/VerifyPasswordListener = Com.Epson.Epos2.Printer.IVerifyPasswordListener
  onVerifyPassword(Lcom/epson/epos2/printer/Printer;I)V = OnVerifyPassword(Com.Epson.Epos2.Printer.Printer, int)
com/epson/epos2/printer/VerifyPasswordListener = Com.Epson.Epos2.Printer.IVerifyPasswordListener
  onVerifyPassword(Lcom/epson/epos2/printer/Printer;I)V = OnVerifyPassword(Com.Epson.Epos2.Printer.Printer, int)
com/epson/epos2/simpleserial/ReceiveListener = Com.Epson.Epos2.Simpleserial.IReceiveListener
  onSimpleSerialReceive(Lcom/epson/epos2/simpleserial/SimpleSerial;[B)V = OnSimpleSerialReceive(Com.Epson.Epos2.Simpleserial.SimpleSerial, byte[])
com/epson/epos2/simpleserial/ReceiveListener = Com.Epson.Epos2.Simpleserial.IReceiveListener
  onSimpleSerialReceive(Lcom/epson/epos2/simpleserial/SimpleSerial;[B)V = OnSimpleSerialReceive(Com.Epson.Epos2.Simpleserial.SimpleSerial, byte[])
com/epson/epos2/simpleserial/SerialStatusInfo = Com.Epson.Epos2.Simpleserial.SerialStatusInfo
  <init>()V = .ctor()
  getConnection()I = Connection
com/epson/epos2/simpleserial/SerialStatusInfo = Com.Epson.Epos2.Simpleserial.SerialStatusInfo
  <init>()V = .ctor()
  getConnection()I = Connection
com/epson/epos2/simpleserial/SimpleSerial = Com.Epson.Epos2.Simpleserial.SimpleSerial
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  EVENT_DISCONNECT = EventDisconnect
  EVENT_RECONNECT = EventReconnect
  EVENT_RECONNECTING = EventReconnecting
  FALSE = False
  PARAM_DEFAULT = ParamDefault
  TRUE = True
  getAdmin()Ljava/lang/String; = Admin
  getLocation()Ljava/lang/String; = Location
  getStatus()Lcom/epson/epos2/simpleserial/SerialStatusInfo; = Status
  checkHandle()V = CheckHandle()
  connect(Ljava/lang/String;I)V = Connect(string, int)
  disconnect()V = Disconnect()
  finalize()V = Finalize()
  initializeSerialInstance()V = InitializeSerialInstance()
  nativeEpos2GetAdmin(J)Ljava/lang/String; = NativeEpos2GetAdmin(long)
  nativeEpos2GetLocation(J)Ljava/lang/String; = NativeEpos2GetLocation(long)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/simpleserial/SerialStatusInfo; = NativeEpos2GetStatus(long)
  nativeEpos2SendCommand(J[B)I = NativeEpos2SendCommand(long, byte[])
  onSimpleSerialReceive([B)V = OnSimpleSerialReceive(byte[])
  sendCommand([B)V = SendCommand(byte[])
  setConnectionEventListener(Lcom/epson/epos2/ConnectionListener;)V = SetConnectionEventListener(Com.Epson.Epos2.IConnectionListener)
  setReceiveEventListener(Lcom/epson/epos2/simpleserial/ReceiveListener;)V = SetReceiveEventListener(Com.Epson.Epos2.Simpleserial.IReceiveListener)
com/epson/epos2/simpleserial/SimpleSerial = Com.Epson.Epos2.Simpleserial.SimpleSerial
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  EVENT_DISCONNECT = EventDisconnect
  EVENT_RECONNECT = EventReconnect
  EVENT_RECONNECTING = EventReconnecting
  FALSE = False
  PARAM_DEFAULT = ParamDefault
  TRUE = True
  getAdmin()Ljava/lang/String; = Admin
  getLocation()Ljava/lang/String; = Location
  getStatus()Lcom/epson/epos2/simpleserial/SerialStatusInfo; = Status
  checkHandle()V = CheckHandle()
  connect(Ljava/lang/String;I)V = Connect(string, int)
  disconnect()V = Disconnect()
  initializeSerialInstance()V = InitializeSerialInstance()
  nativeEpos2GetAdmin(J)Ljava/lang/String; = NativeEpos2GetAdmin(long)
  nativeEpos2GetLocation(J)Ljava/lang/String; = NativeEpos2GetLocation(long)
  nativeEpos2GetStatus(J)Lcom/epson/epos2/simpleserial/SerialStatusInfo; = NativeEpos2GetStatus(long)
  nativeEpos2SendCommand(J[B)I = NativeEpos2SendCommand(long, byte[])
  onSimpleSerialReceive([B)V = OnSimpleSerialReceive(byte[])
  sendCommand([B)V = SendCommand(byte[])
  setConnectionEventListener(Lcom/epson/epos2/ConnectionListener;)V = SetConnectionEventListener(Com.Epson.Epos2.IConnectionListener)
  setReceiveEventListener(Lcom/epson/epos2/simpleserial/ReceiveListener;)V = SetReceiveEventListener(Com.Epson.Epos2.Simpleserial.IReceiveListener)
com/epson/epos2/storage/ConnectionInfo = Com.Epson.Epos2.Storage.ConnectionInfo
  <init>()V = .ctor()
  setStoragePath(Landroid/content/Context;)V = SetStoragePath(Android.Content.Context)
com/epson/epos2/storage/ConnectionInfo = Com.Epson.Epos2.Storage.ConnectionInfo
  <init>()V = .ctor()
  setStoragePath(Landroid/content/Context;)V = SetStoragePath(Android.Content.Context)
com/epson/eposdevice/commbox/CloseCommBoxListener = Com.Epson.Eposdevice.Commbox.ICloseCommBoxListener
  onCloseCommBox(Ljava/lang/String;II)V = OnCloseCommBox(string, int, int)
com/epson/eposdevice/commbox/CloseCommBoxListener = Com.Epson.Eposdevice.Commbox.ICloseCommBoxListener
  onCloseCommBox(Ljava/lang/String;II)V = OnCloseCommBox(string, int, int)
com/epson/eposdevice/commbox/CommBox = Com.Epson.Eposdevice.Commbox.CommBox
  <init>(J)V = .ctor(long)
  getInnerHandle()J = InnerHandle
  getCommHistory([ILcom/epson/eposdevice/commbox/GetCommHistoryListener;)V = GetCommHistory(int[], Com.Epson.Eposdevice.Commbox.IGetCommHistoryListener)
  innerDeleteInstance()V = InnerDeleteInstance()
  nativeOnCommBoxReceive(JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = NativeOnCommBoxReceive(long, string, string, string, string)
  outputBoxException(Ljava/lang/String;Ljava/lang/Exception;)V = OutputBoxException(string, Java.Lang.Exception)
  outputBoxLogCallFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputBoxLogCallFunction(string, params Java.Lang.Object[])
  outputBoxLogEvent(Ljava/lang/String;[Ljava/lang/Object;)V = OutputBoxLogEvent(string, params Java.Lang.Object[])
  outputBoxLogReturnFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputBoxLogReturnFunction(string, params Java.Lang.Object[])
  sendData(Ljava/lang/String;Ljava/lang/String;[ILcom/epson/eposdevice/commbox/SendDataListener;)V = SendData(string, string, int[], Com.Epson.Eposdevice.Commbox.ISendDataListener)
  setReceiveEventCallback(Lcom/epson/eposdevice/commbox/ReceiveListener;)V = SetReceiveEventCallback(Com.Epson.Eposdevice.Commbox.IReceiveListener)
com/epson/eposdevice/commbox/CommBox = Com.Epson.Eposdevice.Commbox.CommBox
  <init>(J)V = .ctor(long)
  getInnerHandle()J = InnerHandle
  getCommHistory([ILcom/epson/eposdevice/commbox/GetCommHistoryListener;)V = GetCommHistory(int[], Com.Epson.Eposdevice.Commbox.IGetCommHistoryListener)
  innerDeleteInstance()V = InnerDeleteInstance()
  nativeOnCommBoxReceive(JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = NativeOnCommBoxReceive(long, string, string, string, string)
  outputBoxException(Ljava/lang/String;Ljava/lang/Exception;)V = OutputBoxException(string, Java.Lang.Exception)
  outputBoxLogCallFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputBoxLogCallFunction(string, params Java.Lang.Object[])
  outputBoxLogEvent(Ljava/lang/String;[Ljava/lang/Object;)V = OutputBoxLogEvent(string, params Java.Lang.Object[])
  outputBoxLogReturnFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputBoxLogReturnFunction(string, params Java.Lang.Object[])
  sendData(Ljava/lang/String;Ljava/lang/String;[ILcom/epson/eposdevice/commbox/SendDataListener;)V = SendData(string, string, int[], Com.Epson.Eposdevice.Commbox.ISendDataListener)
  setReceiveEventCallback(Lcom/epson/eposdevice/commbox/ReceiveListener;)V = SetReceiveEventCallback(Com.Epson.Eposdevice.Commbox.IReceiveListener)
com/epson/eposdevice/commbox/CommBoxManager = Com.Epson.Eposdevice.Commbox.CommBoxManager
  <init>(J)V = .ctor(long)
  getInnerHandle()J = InnerHandle
  closeCommBox(Lcom/epson/eposdevice/commbox/CommBox;[ILcom/epson/eposdevice/commbox/CloseCommBoxListener;)V = CloseCommBox(Com.Epson.Eposdevice.Commbox.CommBox, int[], Com.Epson.Eposdevice.Commbox.ICloseCommBoxListener)
  createCommBoxInstance(J)Lcom/epson/eposdevice/commbox/CommBoxManager$CommBoxAccessor; = CreateCommBoxInstance(long)
  innerDeleteInstance()V = InnerDeleteInstance()
  openCommBox(Ljava/lang/String;Ljava/lang/String;[ILcom/epson/eposdevice/commbox/OpenCommBoxListener;)V = OpenCommBox(string, string, int[], Com.Epson.Eposdevice.Commbox.IOpenCommBoxListener)
  outputException(Ljava/lang/String;Ljava/lang/Exception;)V = OutputException(string, Java.Lang.Exception)
  outputLogCallFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogCallFunction(string, params Java.Lang.Object[])
  outputLogEvent(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogEvent(string, params Java.Lang.Object[])
  outputLogReturnFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogReturnFunction(string, params Java.Lang.Object[])
com/epson/eposdevice/commbox/CommBoxManager = Com.Epson.Eposdevice.Commbox.CommBoxManager
  <init>(J)V = .ctor(long)
  getInnerHandle()J = InnerHandle
  closeCommBox(Lcom/epson/eposdevice/commbox/CommBox;[ILcom/epson/eposdevice/commbox/CloseCommBoxListener;)V = CloseCommBox(Com.Epson.Eposdevice.Commbox.CommBox, int[], Com.Epson.Eposdevice.Commbox.ICloseCommBoxListener)
  createCommBoxInstance(J)Lcom/epson/eposdevice/commbox/CommBoxManager$CommBoxAccessor; = CreateCommBoxInstance(long)
  innerDeleteInstance()V = InnerDeleteInstance()
  openCommBox(Ljava/lang/String;Ljava/lang/String;[ILcom/epson/eposdevice/commbox/OpenCommBoxListener;)V = OpenCommBox(string, string, int[], Com.Epson.Eposdevice.Commbox.IOpenCommBoxListener)
  outputException(Ljava/lang/String;Ljava/lang/Exception;)V = OutputException(string, Java.Lang.Exception)
  outputLogCallFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogCallFunction(string, params Java.Lang.Object[])
  outputLogEvent(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogEvent(string, params Java.Lang.Object[])
  outputLogReturnFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogReturnFunction(string, params Java.Lang.Object[])
com/epson/eposdevice/commbox/GetCommHistoryListener = Com.Epson.Eposdevice.Commbox.IGetCommHistoryListener
  onGetCommHistory(Ljava/lang/String;ILjava/util/ArrayList;I)V = OnGetCommHistory(string, int, System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string, string>>, int)
com/epson/eposdevice/commbox/GetCommHistoryListener = Com.Epson.Eposdevice.Commbox.IGetCommHistoryListener
  onGetCommHistory(Ljava/lang/String;ILjava/util/ArrayList;I)V = OnGetCommHistory(string, int, System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string, string>>, int)
com/epson/eposdevice/commbox/OpenCommBoxListener = Com.Epson.Eposdevice.Commbox.IOpenCommBoxListener
  onOpenCommBox(Ljava/lang/String;Lcom/epson/eposdevice/commbox/CommBox;II)V = OnOpenCommBox(string, Com.Epson.Eposdevice.Commbox.CommBox, int, int)
com/epson/eposdevice/commbox/OpenCommBoxListener = Com.Epson.Eposdevice.Commbox.IOpenCommBoxListener
  onOpenCommBox(Ljava/lang/String;Lcom/epson/eposdevice/commbox/CommBox;II)V = OnOpenCommBox(string, Com.Epson.Eposdevice.Commbox.CommBox, int, int)
com/epson/eposdevice/commbox/ReceiveListener = Com.Epson.Eposdevice.Commbox.IReceiveListener
  onCommBoxReceive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = OnCommBoxReceive(string, string, string, string)
com/epson/eposdevice/commbox/ReceiveListener = Com.Epson.Eposdevice.Commbox.IReceiveListener
  onCommBoxReceive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = OnCommBoxReceive(string, string, string, string)
com/epson/eposdevice/commbox/SendDataListener = Com.Epson.Eposdevice.Commbox.ISendDataListener
  onCommBoxSendData(Ljava/lang/String;III)V = OnCommBoxSendData(string, int, int, int)
com/epson/eposdevice/commbox/SendDataListener = Com.Epson.Eposdevice.Commbox.ISendDataListener
  onCommBoxSendData(Ljava/lang/String;III)V = OnCommBoxSendData(string, int, int, int)
com/epson/eposdevice/ConnectListener = Com.Epson.Eposdevice.IConnectListener
  onConnect(Ljava/lang/String;I)V = OnConnect(string, int)
com/epson/eposdevice/ConnectListener = Com.Epson.Eposdevice.IConnectListener
  onConnect(Ljava/lang/String;I)V = OnConnect(string, int)
com/epson/eposdevice/CreateDeviceListener = Com.Epson.Eposdevice.ICreateDeviceListener
  onCreateDevice(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;I)V = OnCreateDevice(string, string, int, Java.Lang.Object, int)
com/epson/eposdevice/CreateDeviceListener = Com.Epson.Eposdevice.ICreateDeviceListener
  onCreateDevice(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;I)V = OnCreateDevice(string, string, int, Java.Lang.Object, int)
com/epson/eposdevice/DeleteDeviceListener = Com.Epson.Eposdevice.IDeleteDeviceListener
  onDeleteDevice(Ljava/lang/String;Ljava/lang/String;I)V = OnDeleteDevice(string, string, int)
com/epson/eposdevice/DeleteDeviceListener = Com.Epson.Eposdevice.IDeleteDeviceListener
  onDeleteDevice(Ljava/lang/String;Ljava/lang/String;I)V = OnDeleteDevice(string, string, int)
com/epson/eposdevice/Device = Com.Epson.Eposdevice.Device
  <init>()V = .ctor()
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  DEV_TYPE_DISPLAY = DevTypeDisplay
  DEV_TYPE_KEYBOARD = DevTypeKeyboard
  DEV_TYPE_PRINTER = DevTypePrinter
  DEV_TYPE_SCANNER = DevTypeScanner
  DEV_TYPE_SIMPLE_SERIAL = DevTypeSimpleSerial
  FALSE = False
  PARAM_DEFAULT = ParamDefault
  PARAM_UNSPECIFIED = ParamUnspecified
  TRUE = True
  getAdmin()Ljava/lang/String; = Admin
  getCommBoxManager()Lcom/epson/eposdevice/commbox/CommBoxManager; = CommBoxManager
  isConnected()Z = IsConnected
  isEmptyCallbacks()Z = IsEmptyCallbacks
  getLocation()Ljava/lang/String; = Location
  connect(Ljava/lang/String;Lcom/epson/eposdevice/ConnectListener;)V = Connect(string, Com.Epson.Eposdevice.IConnectListener)
  createDevice(Ljava/lang/String;IIILcom/epson/eposdevice/CreateDeviceListener;)V = CreateDevice(string, int, int, int, Com.Epson.Eposdevice.ICreateDeviceListener)
  deleteAllDeviceObject()V = DeleteAllDeviceObject()
  deleteDevice(Ljava/lang/Object;Lcom/epson/eposdevice/DeleteDeviceListener;)V = DeleteDevice(Java.Lang.Object, Com.Epson.Eposdevice.IDeleteDeviceListener)
  disconnect()V = Disconnect()
  finalize()V = Finalize()
  initializeDeviceInstance()V = InitializeDeviceInstance()
  nativeCreateHandle([J)I = NativeCreateHandle(long[])
  nativeDeleteHandle(J)I = NativeDeleteHandle(long)
  nativeDisconnect(J)I = NativeDisconnect(long)
  nativeGetAdmin(J)Ljava/lang/String; = NativeGetAdmin(long)
  nativeGetCommBoxManager(J[J)I = NativeGetCommBoxManager(long, long[])
  nativeGetLocal(J)Ljava/lang/String; = NativeGetLocal(long)
  nativeIsConnect(J)Z = NativeIsConnect(long)
  nativeLogOutput(IJLjava/lang/String;Ljava/lang/String;)V = NativeLogOutput(int, long, string, string)
  nativeOnDisconnect(Ljava/lang/String;)V = NativeOnDisconnect(string)
  nativeOnReconnect(Ljava/lang/String;)V = NativeOnReconnect(string)
  nativeOnReconnecting(Ljava/lang/String;)V = NativeOnReconnecting(string)
  nativeReadLogSettings(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I = NativeReadLogSettings(string, string, string, string, string, string, string, string)
  outputException(Ljava/lang/String;Ljava/lang/Exception;)V = OutputException(string, Java.Lang.Exception)
  outputLogCallFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogCallFunction(string, params Java.Lang.Object[])
  outputLogEvent(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogEvent(string, params Java.Lang.Object[])
  outputLogReturnFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogReturnFunction(string, params Java.Lang.Object[])
  processOutputExceptionLog(IJLjava/lang/String;Ljava/lang/Exception;)V = ProcessOutputExceptionLog(int, long, string, Java.Lang.Exception)
  processOutputLogData(IJLjava/lang/String;[Ljava/lang/Object;)V = ProcessOutputLogData(int, long, string, Java.Lang.Object[])
  setDisconnectEventCallback(Lcom/epson/eposdevice/DisconnectListener;)V = SetDisconnectEventCallback(Com.Epson.Eposdevice.IDisconnectListener)
  setReconnectEventCallback(Lcom/epson/eposdevice/ReconnectListener;)V = SetReconnectEventCallback(Com.Epson.Eposdevice.IReconnectListener)
  setReconnectingEventCallback(Lcom/epson/eposdevice/ReconnectingListener;)V = SetReconnectingEventCallback(Com.Epson.Eposdevice.IReconnectingListener)
com/epson/eposdevice/Device = Com.Epson.Eposdevice.Device
  <init>()V = .ctor()
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  DEV_TYPE_DISPLAY = DevTypeDisplay
  DEV_TYPE_KEYBOARD = DevTypeKeyboard
  DEV_TYPE_PRINTER = DevTypePrinter
  DEV_TYPE_SCANNER = DevTypeScanner
  DEV_TYPE_SIMPLE_SERIAL = DevTypeSimpleSerial
  FALSE = False
  PARAM_DEFAULT = ParamDefault
  PARAM_UNSPECIFIED = ParamUnspecified
  TRUE = True
  getAdmin()Ljava/lang/String; = Admin
  getCommBoxManager()Lcom/epson/eposdevice/commbox/CommBoxManager; = CommBoxManager
  isConnected()Z = IsConnected
  isEmptyCallbacks()Z = IsEmptyCallbacks
  getLocation()Ljava/lang/String; = Location
  connect(Ljava/lang/String;Lcom/epson/eposdevice/ConnectListener;)V = Connect(string, Com.Epson.Eposdevice.IConnectListener)
  createDevice(Ljava/lang/String;IIILcom/epson/eposdevice/CreateDeviceListener;)V = CreateDevice(string, int, int, int, Com.Epson.Eposdevice.ICreateDeviceListener)
  deleteAllDeviceObject()V = DeleteAllDeviceObject()
  deleteDevice(Ljava/lang/Object;Lcom/epson/eposdevice/DeleteDeviceListener;)V = DeleteDevice(Java.Lang.Object, Com.Epson.Eposdevice.IDeleteDeviceListener)
  disconnect()V = Disconnect()
  initializeDeviceInstance()V = InitializeDeviceInstance()
  nativeCreateHandle([J)I = NativeCreateHandle(long[])
  nativeDeleteHandle(J)I = NativeDeleteHandle(long)
  nativeDisconnect(J)I = NativeDisconnect(long)
  nativeGetAdmin(J)Ljava/lang/String; = NativeGetAdmin(long)
  nativeGetCommBoxManager(J[J)I = NativeGetCommBoxManager(long, long[])
  nativeGetLocal(J)Ljava/lang/String; = NativeGetLocal(long)
  nativeIsConnect(J)Z = NativeIsConnect(long)
  nativeLogOutput(IJLjava/lang/String;Ljava/lang/String;)V = NativeLogOutput(int, long, string, string)
  nativeOnDisconnect(Ljava/lang/String;)V = NativeOnDisconnect(string)
  nativeOnReconnect(Ljava/lang/String;)V = NativeOnReconnect(string)
  nativeOnReconnecting(Ljava/lang/String;)V = NativeOnReconnecting(string)
  nativeReadLogSettings(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I = NativeReadLogSettings(string, string, string, string, string, string, string, string)
  outputException(Ljava/lang/String;Ljava/lang/Exception;)V = OutputException(string, Java.Lang.Exception)
  outputLogCallFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogCallFunction(string, params Java.Lang.Object[])
  outputLogEvent(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogEvent(string, params Java.Lang.Object[])
  outputLogReturnFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogReturnFunction(string, params Java.Lang.Object[])
  processOutputExceptionLog(IJLjava/lang/String;Ljava/lang/Exception;)V = ProcessOutputExceptionLog(int, long, string, Java.Lang.Exception)
  processOutputLogData(IJLjava/lang/String;[Ljava/lang/Object;)V = ProcessOutputLogData(int, long, string, Java.Lang.Object[])
  setDisconnectEventCallback(Lcom/epson/eposdevice/DisconnectListener;)V = SetDisconnectEventCallback(Com.Epson.Eposdevice.IDisconnectListener)
  setReconnectEventCallback(Lcom/epson/eposdevice/ReconnectListener;)V = SetReconnectEventCallback(Com.Epson.Eposdevice.IReconnectListener)
  setReconnectingEventCallback(Lcom/epson/eposdevice/ReconnectingListener;)V = SetReconnectingEventCallback(Com.Epson.Eposdevice.IReconnectingListener)
com/epson/eposdevice/DisconnectListener = Com.Epson.Eposdevice.IDisconnectListener
  onDisconnect(Ljava/lang/String;)V = OnDisconnect(string)
com/epson/eposdevice/DisconnectListener = Com.Epson.Eposdevice.IDisconnectListener
  onDisconnect(Ljava/lang/String;)V = OnDisconnect(string)
com/epson/eposdevice/display/Display = Com.Epson.Eposdevice.Display.Display
  <init>(J)V = .ctor(long)
  BRIGHTNESS_100 = Brightness100
  BRIGHTNESS_20 = Brightness20
  BRIGHTNESS_40 = Brightness40
  BRIGHTNESS_60 = Brightness60
  CURSOR_NONE = CursorNone
  CURSOR_UNDERLINE = CursorUnderline
  FALSE = False
  LANG_EN = LangEn
  LANG_JA = LangJa
  MARQUEE_PLACE = MarqueePlace
  MARQUEE_WALK = MarqueeWalk
  MOVE_BOTTOM_LEFT = MoveBottomLeft
  MOVE_BOTTOM_RIGHT = MoveBottomRight
  MOVE_TOP_LEFT = MoveTopLeft
  MOVE_TOP_RIGHT = MoveTopRight
  SCROLL_HORIZONTAL = ScrollHorizontal
  SCROLL_OVERWRITE = ScrollOverwrite
  SCROLL_VERTICAL = ScrollVertical
  TRUE = True
  getInnerHandle()J = InnerHandle
  addCommand([B)V = AddCommand(byte[])
  addMarquee(Ljava/lang/String;IIIII)V = AddMarquee(string, int, int, int, int, int)
  addReverseText(Ljava/lang/String;)V = AddReverseText(string)
  addReverseText(Ljava/lang/String;I)V = AddReverseText(string, int)
  addReverseText(Ljava/lang/String;II)V = AddReverseText(string, int, int)
  addReverseText(Ljava/lang/String;III)V = AddReverseText(string, int, int, int)
  addText(Ljava/lang/String;)V = AddText(string)
  addText(Ljava/lang/String;I)V = AddText(string, int)
  addText(Ljava/lang/String;II)V = AddText(string, int, int)
  addText(Ljava/lang/String;III)V = AddText(string, int, int, int)
  checkHandle()V = CheckHandle()
  clearCommandBuffer()V = ClearCommandBuffer()
  clearWindow()V = ClearWindow()
  createWindow(IIIIII)V = CreateWindow(int, int, int, int, int, int)
  destroyWindow(I)V = DestroyWindow(int)
  innerDeleteInstance()V = InnerDeleteInstance()
  moveCursorPosition(I)V = MoveCursorPosition(int)
  nativeDspAddBlink(JJ)I = NativeDspAddBlink(long, long)
  nativeDspAddBrightness(JI)I = NativeDspAddBrightness(long, int)
  nativeDspAddClearWindow(J)I = NativeDspAddClearWindow(long)
  nativeDspAddCommand(J[B)I = NativeDspAddCommand(long, byte[])
  nativeDspAddCreateWindow(JJJJJJI)I = NativeDspAddCreateWindow(long, long, long, long, long, long, int)
  nativeDspAddDestroyWindow(JJ)I = NativeDspAddDestroyWindow(long, long)
  nativeDspAddMarquee(JLjava/lang/String;IJJJI)I = NativeDspAddMarquee(long, string, int, long, long, long, int)
  nativeDspAddMoveCursorPosition(JI)I = NativeDspAddMoveCursorPosition(long, int)
  nativeDspAddReset(J)I = NativeDspAddReset(long)
  nativeDspAddReverseText(JLjava/lang/String;)I = NativeDspAddReverseText(long, string)
  nativeDspAddReverseTextLang(JLjava/lang/String;I)I = NativeDspAddReverseTextLang(long, string, int)
  nativeDspAddReverseTextPosition(JLjava/lang/String;JJ)I = NativeDspAddReverseTextPosition(long, string, long, long)
  nativeDspAddReverseTextPositionLang(JLjava/lang/String;JJI)I = NativeDspAddReverseTextPositionLang(long, string, long, long, int)
  nativeDspAddSetCurrentWindow(JJ)I = NativeDspAddSetCurrentWindow(long, long)
  nativeDspAddSetCursorPosition(JJJ)I = NativeDspAddSetCursorPosition(long, long, long)
  nativeDspAddSetCursorType(JI)I = NativeDspAddSetCursorType(long, int)
  nativeDspAddShowClock(J)I = NativeDspAddShowClock(long)
  nativeDspAddText(JLjava/lang/String;)I = NativeDspAddText(long, string)
  nativeDspAddTextLang(JLjava/lang/String;I)I = NativeDspAddTextLang(long, string, int)
  nativeDspAddTextPosition(JLjava/lang/String;JJ)I = NativeDspAddTextPosition(long, string, long, long)
  nativeDspAddTextPositionLang(JLjava/lang/String;JJI)I = NativeDspAddTextPositionLang(long, string, long, long, int)
  nativeDspClearCommandBuffer(J)I = NativeDspClearCommandBuffer(long)
  nativeDspSendData(J)I = NativeDspSendData(long)
  nativeOnDspReceive(Ljava/lang/String;Ljava/lang/String;IIJJ)V = NativeOnDspReceive(string, string, int, int, long, long)
  outputException(Ljava/lang/String;Ljava/lang/Exception;)V = OutputException(string, Java.Lang.Exception)
  outputLogCallFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogCallFunction(string, params Java.Lang.Object[])
  outputLogEvent(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogEvent(string, params Java.Lang.Object[])
  outputLogReturnFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogReturnFunction(string, params Java.Lang.Object[])
  reset()V = Reset()
  sendData()V = SendData()
  setBlink(I)V = SetBlink(int)
  setBrightness(I)V = SetBrightness(int)
  setCurrentWindow(I)V = SetCurrentWindow(int)
  setCursorPosition(II)V = SetCursorPosition(int, int)
  setCursorType(I)V = SetCursorType(int)
  setReceiveEventCallback(Lcom/epson/eposdevice/display/ReceiveListener;)V = SetReceiveEventCallback(Com.Epson.Eposdevice.Display.IReceiveListener)
  showClock()V = ShowClock()
com/epson/eposdevice/display/Display = Com.Epson.Eposdevice.Display.Display
  <init>(J)V = .ctor(long)
  BRIGHTNESS_100 = Brightness100
  BRIGHTNESS_20 = Brightness20
  BRIGHTNESS_40 = Brightness40
  BRIGHTNESS_60 = Brightness60
  CURSOR_NONE = CursorNone
  CURSOR_UNDERLINE = CursorUnderline
  FALSE = False
  LANG_EN = LangEn
  LANG_JA = LangJa
  MARQUEE_PLACE = MarqueePlace
  MARQUEE_WALK = MarqueeWalk
  MOVE_BOTTOM_LEFT = MoveBottomLeft
  MOVE_BOTTOM_RIGHT = MoveBottomRight
  MOVE_TOP_LEFT = MoveTopLeft
  MOVE_TOP_RIGHT = MoveTopRight
  SCROLL_HORIZONTAL = ScrollHorizontal
  SCROLL_OVERWRITE = ScrollOverwrite
  SCROLL_VERTICAL = ScrollVertical
  TRUE = True
  getInnerHandle()J = InnerHandle
  addCommand([B)V = AddCommand(byte[])
  addMarquee(Ljava/lang/String;IIIII)V = AddMarquee(string, int, int, int, int, int)
  addReverseText(Ljava/lang/String;)V = AddReverseText(string)
  addReverseText(Ljava/lang/String;I)V = AddReverseText(string, int)
  addReverseText(Ljava/lang/String;II)V = AddReverseText(string, int, int)
  addReverseText(Ljava/lang/String;III)V = AddReverseText(string, int, int, int)
  addText(Ljava/lang/String;)V = AddText(string)
  addText(Ljava/lang/String;I)V = AddText(string, int)
  addText(Ljava/lang/String;II)V = AddText(string, int, int)
  addText(Ljava/lang/String;III)V = AddText(string, int, int, int)
  checkHandle()V = CheckHandle()
  clearCommandBuffer()V = ClearCommandBuffer()
  clearWindow()V = ClearWindow()
  createWindow(IIIIII)V = CreateWindow(int, int, int, int, int, int)
  destroyWindow(I)V = DestroyWindow(int)
  innerDeleteInstance()V = InnerDeleteInstance()
  moveCursorPosition(I)V = MoveCursorPosition(int)
  nativeDspAddBlink(JJ)I = NativeDspAddBlink(long, long)
  nativeDspAddBrightness(JI)I = NativeDspAddBrightness(long, int)
  nativeDspAddClearWindow(J)I = NativeDspAddClearWindow(long)
  nativeDspAddCommand(J[B)I = NativeDspAddCommand(long, byte[])
  nativeDspAddCreateWindow(JJJJJJI)I = NativeDspAddCreateWindow(long, long, long, long, long, long, int)
  nativeDspAddDestroyWindow(JJ)I = NativeDspAddDestroyWindow(long, long)
  nativeDspAddMarquee(JLjava/lang/String;IJJJI)I = NativeDspAddMarquee(long, string, int, long, long, long, int)
  nativeDspAddMoveCursorPosition(JI)I = NativeDspAddMoveCursorPosition(long, int)
  nativeDspAddReset(J)I = NativeDspAddReset(long)
  nativeDspAddReverseText(JLjava/lang/String;)I = NativeDspAddReverseText(long, string)
  nativeDspAddReverseTextLang(JLjava/lang/String;I)I = NativeDspAddReverseTextLang(long, string, int)
  nativeDspAddReverseTextPosition(JLjava/lang/String;JJ)I = NativeDspAddReverseTextPosition(long, string, long, long)
  nativeDspAddReverseTextPositionLang(JLjava/lang/String;JJI)I = NativeDspAddReverseTextPositionLang(long, string, long, long, int)
  nativeDspAddSetCurrentWindow(JJ)I = NativeDspAddSetCurrentWindow(long, long)
  nativeDspAddSetCursorPosition(JJJ)I = NativeDspAddSetCursorPosition(long, long, long)
  nativeDspAddSetCursorType(JI)I = NativeDspAddSetCursorType(long, int)
  nativeDspAddShowClock(J)I = NativeDspAddShowClock(long)
  nativeDspAddText(JLjava/lang/String;)I = NativeDspAddText(long, string)
  nativeDspAddTextLang(JLjava/lang/String;I)I = NativeDspAddTextLang(long, string, int)
  nativeDspAddTextPosition(JLjava/lang/String;JJ)I = NativeDspAddTextPosition(long, string, long, long)
  nativeDspAddTextPositionLang(JLjava/lang/String;JJI)I = NativeDspAddTextPositionLang(long, string, long, long, int)
  nativeDspClearCommandBuffer(J)I = NativeDspClearCommandBuffer(long)
  nativeDspSendData(J)I = NativeDspSendData(long)
  nativeOnDspReceive(Ljava/lang/String;Ljava/lang/String;IIJJ)V = NativeOnDspReceive(string, string, int, int, long, long)
  outputException(Ljava/lang/String;Ljava/lang/Exception;)V = OutputException(string, Java.Lang.Exception)
  outputLogCallFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogCallFunction(string, params Java.Lang.Object[])
  outputLogEvent(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogEvent(string, params Java.Lang.Object[])
  outputLogReturnFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogReturnFunction(string, params Java.Lang.Object[])
  reset()V = Reset()
  sendData()V = SendData()
  setBlink(I)V = SetBlink(int)
  setBrightness(I)V = SetBrightness(int)
  setCurrentWindow(I)V = SetCurrentWindow(int)
  setCursorPosition(II)V = SetCursorPosition(int, int)
  setCursorType(I)V = SetCursorType(int)
  setReceiveEventCallback(Lcom/epson/eposdevice/display/ReceiveListener;)V = SetReceiveEventCallback(Com.Epson.Eposdevice.Display.IReceiveListener)
  showClock()V = ShowClock()
com/epson/eposdevice/display/ReceiveListener = Com.Epson.Eposdevice.Display.IReceiveListener
  onDspReceive(Ljava/lang/String;Ljava/lang/String;II)V = OnDspReceive(string, string, int, int)
com/epson/eposdevice/display/ReceiveListener = Com.Epson.Eposdevice.Display.IReceiveListener
  onDspReceive(Ljava/lang/String;Ljava/lang/String;II)V = OnDspReceive(string, string, int, int)
com/epson/eposdevice/EposCallbackCode = Com.Epson.Eposdevice.EposCallbackCode
  <init>()V = .ctor()
  ERR_ALREADY_OPENED = ErrAlreadyOpened
  ERR_ALREADY_USED = ErrAlreadyUsed
  ERR_AUTOMATICAL = ErrAutomatical
  ERR_BATTERY_LOW = ErrBatteryLow
  ERR_BOX_CLIENT_OVER = ErrBoxClientOver
  ERR_BOX_COUNT_OVER = ErrBoxCountOver
  ERR_CLOSE = ErrClose
  ERR_COVER_OPEN = ErrCoverOpen
  ERR_CUTTER = ErrCutter
  ERR_EMPTY = ErrEmpty
  ERR_FAILURE = ErrFailure
  ERR_ILLEGAL = ErrIllegal
  ERR_IN_USE = ErrInUse
  ERR_INVALID_WINDOW = ErrInvalidWindow
  ERR_JOB_NOT_FOUND = ErrJobNotFound
  ERR_MECHANICAL = ErrMechanical
  ERR_MEMORY = ErrMemory
  ERR_NOT_FOUND = ErrNotFound
  ERR_NOT_OPENED = ErrNotOpened
  ERR_OPEN = ErrOpen
  ERR_PARAM = ErrParam
  ERR_PORT = ErrPort
  ERR_SPOOLER = ErrSpooler
  ERR_SYSTEM = ErrSystem
  ERR_TIMEOUT = ErrTimeout
  ERR_TYPE_INVALID = ErrTypeInvalid
  ERR_UNRECOVERABLE = ErrUnrecoverable
  PRINTING = Printing
  SUCCESS = Success
com/epson/eposdevice/EposCallbackCode = Com.Epson.Eposdevice.EposCallbackCode
  <init>()V = .ctor()
  ERR_ALREADY_OPENED = ErrAlreadyOpened
  ERR_ALREADY_USED = ErrAlreadyUsed
  ERR_AUTOMATICAL = ErrAutomatical
  ERR_BATTERY_LOW = ErrBatteryLow
  ERR_BOX_CLIENT_OVER = ErrBoxClientOver
  ERR_BOX_COUNT_OVER = ErrBoxCountOver
  ERR_CLOSE = ErrClose
  ERR_COVER_OPEN = ErrCoverOpen
  ERR_CUTTER = ErrCutter
  ERR_EMPTY = ErrEmpty
  ERR_FAILURE = ErrFailure
  ERR_ILLEGAL = ErrIllegal
  ERR_IN_USE = ErrInUse
  ERR_INVALID_WINDOW = ErrInvalidWindow
  ERR_JOB_NOT_FOUND = ErrJobNotFound
  ERR_MECHANICAL = ErrMechanical
  ERR_MEMORY = ErrMemory
  ERR_NOT_FOUND = ErrNotFound
  ERR_NOT_OPENED = ErrNotOpened
  ERR_OPEN = ErrOpen
  ERR_PARAM = ErrParam
  ERR_PORT = ErrPort
  ERR_SPOOLER = ErrSpooler
  ERR_SYSTEM = ErrSystem
  ERR_TIMEOUT = ErrTimeout
  ERR_TYPE_INVALID = ErrTypeInvalid
  ERR_UNRECOVERABLE = ErrUnrecoverable
  PRINTING = Printing
  SUCCESS = Success
com/epson/eposdevice/EposException = Com.Epson.Eposdevice.EposException
  <init>(I)V = .ctor(int)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  ERR_CONNECT = ErrConnect
  ERR_FAILURE = ErrFailure
  ERR_ILLEGAL = ErrIllegal
  ERR_IN_USE = ErrInUse
  ERR_MEMORY = ErrMemory
  ERR_PARAM = ErrParam
  ERR_PROCESSING = ErrProcessing
  getErrorStatus()I = ErrorStatus
com/epson/eposdevice/EposException = Com.Epson.Eposdevice.EposException
  <init>(I)V = .ctor(int)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  ERR_CONNECT = ErrConnect
  ERR_FAILURE = ErrFailure
  ERR_ILLEGAL = ErrIllegal
  ERR_IN_USE = ErrInUse
  ERR_MEMORY = ErrMemory
  ERR_PARAM = ErrParam
  ERR_PROCESSING = ErrProcessing
  getErrorStatus()I = ErrorStatus
com/epson/eposdevice/keyboard/Keyboard = Com.Epson.Eposdevice.Keyboard.Keyboard
  <init>(J)V = .ctor(long)
  VK_0 = Vk0
  VK_1 = Vk1
  VK_2 = Vk2
  VK_3 = Vk3
  VK_4 = Vk4
  VK_5 = Vk5
  VK_6 = Vk6
  VK_7 = Vk7
  VK_8 = Vk8
  VK_9 = Vk9
  VK_A = VkA
  VK_ADD = VkAdd
  VK_B = VkB
  VK_BACK = VkBack
  VK_C = VkC
  VK_CAPITAL = VkCapital
  VK_CONTROL = VkControl
  VK_CONVERT = VkConvert
  VK_D = VkD
  VK_DELETE = VkDelete
  VK_DOWN = VkDown
  VK_E = VkE
  VK_END = VkEnd
  VK_ESCAPE = VkEscape
  VK_F = VkF
  VK_F1 = VkF1
  VK_F10 = VkF10
  VK_F11 = VkF11
  VK_F12 = VkF12
  VK_F2 = VkF2
  VK_F3 = VkF3
  VK_F4 = VkF4
  VK_F5 = VkF5
  VK_F6 = VkF6
  VK_F7 = VkF7
  VK_F8 = VkF8
  VK_F9 = VkF9
  VK_G = VkG
  VK_H = VkH
  VK_HOME = VkHome
  VK_I = VkI
  VK_INSERT = VkInsert
  VK_J = VkJ
  VK_K = VkK
  VK_L = VkL
  VK_LEFT = VkLeft
  VK_M = VkM
  VK_MENU = VkMenu
  VK_MULTIPLY = VkMultiply
  VK_N = VkN
  VK_NEXT = VkNext
  VK_NONCONVERT = VkNonconvert
  VK_O = VkO
  VK_OEM_1 = VkOem1
  VK_OEM_2 = VkOem2
  VK_OEM_3 = VkOem3
  VK_OEM_4 = VkOem4
  VK_OEM_5 = VkOem5
  VK_OEM_6 = VkOem6
  VK_OEM_7 = VkOem7
  VK_OEM_ATTN = VkOemAttn
  VK_OEM_COMMA = VkOemComma
  VK_OEM_MINUS = VkOemMinus
  VK_OEM_PERIOD = VkOemPeriod
  VK_OEM_PLUS = VkOemPlus
  VK_P = VkP
  VK_PRIOR = VkPrior
  VK_Q = VkQ
  VK_R = VkR
  VK_RETURN = VkReturn
  VK_RIGHT = VkRight
  VK_S = VkS
  VK_SHIFT = VkShift
  VK_SPACE = VkSpace
  VK_SUBTRACT = VkSubtract
  VK_T = VkT
  VK_TAB = VkTab
  VK_U = VkU
  VK_UP = VkUp
  VK_V = VkV
  VK_W = VkW
  VK_X = VkX
  VK_Y = VkY
  VK_Z = VkZ
  getInnerHandle()J = InnerHandle
  checkHandle()V = CheckHandle()
  innerDeleteInstance()V = InnerDeleteInstance()
  nativeKbdSetPrefix(J[B)I = NativeKbdSetPrefix(long, byte[])
  nativeOnKbdKeyPress(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V = NativeOnKbdKeyPress(string, string, int, string)
  nativeOnKbdString(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V = NativeOnKbdString(string, string, string, int)
  outputException(Ljava/lang/String;Ljava/lang/Exception;)V = OutputException(string, Java.Lang.Exception)
  outputLogCallFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogCallFunction(string, params Java.Lang.Object[])
  outputLogEvent(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogEvent(string, params Java.Lang.Object[])
  outputLogReturnFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogReturnFunction(string, params Java.Lang.Object[])
  setKeyPressEventCallback(Lcom/epson/eposdevice/keyboard/KeyPressListener;)V = SetKeyPressEventCallback(Com.Epson.Eposdevice.Keyboard.IKeyPressListener)
  setPrefix([B)V = SetPrefix(byte[])
  setStringEventCallback(Lcom/epson/eposdevice/keyboard/StringListener;)V = SetStringEventCallback(Com.Epson.Eposdevice.Keyboard.IStringListener)
com/epson/eposdevice/keyboard/Keyboard = Com.Epson.Eposdevice.Keyboard.Keyboard
  <init>(J)V = .ctor(long)
  VK_0 = Vk0
  VK_1 = Vk1
  VK_2 = Vk2
  VK_3 = Vk3
  VK_4 = Vk4
  VK_5 = Vk5
  VK_6 = Vk6
  VK_7 = Vk7
  VK_8 = Vk8
  VK_9 = Vk9
  VK_A = VkA
  VK_ADD = VkAdd
  VK_B = VkB
  VK_BACK = VkBack
  VK_C = VkC
  VK_CAPITAL = VkCapital
  VK_CONTROL = VkControl
  VK_CONVERT = VkConvert
  VK_D = VkD
  VK_DELETE = VkDelete
  VK_DOWN = VkDown
  VK_E = VkE
  VK_END = VkEnd
  VK_ESCAPE = VkEscape
  VK_F = VkF
  VK_F1 = VkF1
  VK_F10 = VkF10
  VK_F11 = VkF11
  VK_F12 = VkF12
  VK_F2 = VkF2
  VK_F3 = VkF3
  VK_F4 = VkF4
  VK_F5 = VkF5
  VK_F6 = VkF6
  VK_F7 = VkF7
  VK_F8 = VkF8
  VK_F9 = VkF9
  VK_G = VkG
  VK_H = VkH
  VK_HOME = VkHome
  VK_I = VkI
  VK_INSERT = VkInsert
  VK_J = VkJ
  VK_K = VkK
  VK_L = VkL
  VK_LEFT = VkLeft
  VK_M = VkM
  VK_MENU = VkMenu
  VK_MULTIPLY = VkMultiply
  VK_N = VkN
  VK_NEXT = VkNext
  VK_NONCONVERT = VkNonconvert
  VK_O = VkO
  VK_OEM_1 = VkOem1
  VK_OEM_2 = VkOem2
  VK_OEM_3 = VkOem3
  VK_OEM_4 = VkOem4
  VK_OEM_5 = VkOem5
  VK_OEM_6 = VkOem6
  VK_OEM_7 = VkOem7
  VK_OEM_ATTN = VkOemAttn
  VK_OEM_COMMA = VkOemComma
  VK_OEM_MINUS = VkOemMinus
  VK_OEM_PERIOD = VkOemPeriod
  VK_OEM_PLUS = VkOemPlus
  VK_P = VkP
  VK_PRIOR = VkPrior
  VK_Q = VkQ
  VK_R = VkR
  VK_RETURN = VkReturn
  VK_RIGHT = VkRight
  VK_S = VkS
  VK_SHIFT = VkShift
  VK_SPACE = VkSpace
  VK_SUBTRACT = VkSubtract
  VK_T = VkT
  VK_TAB = VkTab
  VK_U = VkU
  VK_UP = VkUp
  VK_V = VkV
  VK_W = VkW
  VK_X = VkX
  VK_Y = VkY
  VK_Z = VkZ
  getInnerHandle()J = InnerHandle
  checkHandle()V = CheckHandle()
  innerDeleteInstance()V = InnerDeleteInstance()
  nativeKbdSetPrefix(J[B)I = NativeKbdSetPrefix(long, byte[])
  nativeOnKbdKeyPress(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V = NativeOnKbdKeyPress(string, string, int, string)
  nativeOnKbdString(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V = NativeOnKbdString(string, string, string, int)
  outputException(Ljava/lang/String;Ljava/lang/Exception;)V = OutputException(string, Java.Lang.Exception)
  outputLogCallFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogCallFunction(string, params Java.Lang.Object[])
  outputLogEvent(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogEvent(string, params Java.Lang.Object[])
  outputLogReturnFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogReturnFunction(string, params Java.Lang.Object[])
  setKeyPressEventCallback(Lcom/epson/eposdevice/keyboard/KeyPressListener;)V = SetKeyPressEventCallback(Com.Epson.Eposdevice.Keyboard.IKeyPressListener)
  setPrefix([B)V = SetPrefix(byte[])
  setStringEventCallback(Lcom/epson/eposdevice/keyboard/StringListener;)V = SetStringEventCallback(Com.Epson.Eposdevice.Keyboard.IStringListener)
com/epson/eposdevice/keyboard/KeyPressListener = Com.Epson.Eposdevice.Keyboard.IKeyPressListener
  onKbdKeyPress(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V = OnKbdKeyPress(string, string, int, string)
com/epson/eposdevice/keyboard/KeyPressListener = Com.Epson.Eposdevice.Keyboard.IKeyPressListener
  onKbdKeyPress(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V = OnKbdKeyPress(string, string, int, string)
com/epson/eposdevice/keyboard/StringListener = Com.Epson.Eposdevice.Keyboard.IStringListener
  onKbdString(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V = OnKbdString(string, string, string, int)
com/epson/eposdevice/keyboard/StringListener = Com.Epson.Eposdevice.Keyboard.IStringListener
  onKbdString(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V = OnKbdString(string, string, string, int)
com/epson/eposdevice/Log = Com.Epson.Eposdevice.Log
  <init>()V = .ctor()
  LOG_DISABLE = LogDisable
  LOG_LOW = LogLow
  LOG_PERMANENT = LogPermanent
  LOG_STORAGE = LogStorage
  LOG_TCP = LogTcp
  LOG_TEMPORARY = LogTemporary
  setLogSettings(Landroid/content/Context;IILjava/lang/String;III)V = SetLogSettings(Android.Content.Context, int, int, string, int, int, int)
com/epson/eposdevice/Log = Com.Epson.Eposdevice.Log
  <init>()V = .ctor()
  LOG_DISABLE = LogDisable
  LOG_LOW = LogLow
  LOG_PERMANENT = LogPermanent
  LOG_STORAGE = LogStorage
  LOG_TCP = LogTcp
  LOG_TEMPORARY = LogTemporary
  setLogSettings(Landroid/content/Context;IILjava/lang/String;III)V = SetLogSettings(Android.Content.Context, int, int, string, int, int, int)
com/epson/eposdevice/printer/BatteryLowListener = Com.Epson.Eposdevice.Printer.IBatteryLowListener
  onPtrBatteryLow(Ljava/lang/String;Ljava/lang/String;)V = OnPtrBatteryLow(string, string)
com/epson/eposdevice/printer/BatteryLowListener = Com.Epson.Eposdevice.Printer.IBatteryLowListener
  onPtrBatteryLow(Ljava/lang/String;Ljava/lang/String;)V = OnPtrBatteryLow(string, string)
com/epson/eposdevice/printer/BatteryOkListener = Com.Epson.Eposdevice.Printer.IBatteryOkListener
  onPtrBatteryOk(Ljava/lang/String;Ljava/lang/String;)V = OnPtrBatteryOk(string, string)
com/epson/eposdevice/printer/BatteryOkListener = Com.Epson.Eposdevice.Printer.IBatteryOkListener
  onPtrBatteryOk(Ljava/lang/String;Ljava/lang/String;)V = OnPtrBatteryOk(string, string)
com/epson/eposdevice/printer/BatteryStatusChangeListener = Com.Epson.Eposdevice.Printer.IBatteryStatusChangeListener
  onPtrBatteryStatusChange(Ljava/lang/String;Ljava/lang/String;I)V = OnPtrBatteryStatusChange(string, string, int)
com/epson/eposdevice/printer/BatteryStatusChangeListener = Com.Epson.Eposdevice.Printer.IBatteryStatusChangeListener
  onPtrBatteryStatusChange(Ljava/lang/String;Ljava/lang/String;I)V = OnPtrBatteryStatusChange(string, string, int)
com/epson/eposdevice/printer/CoverOkListener = Com.Epson.Eposdevice.Printer.ICoverOkListener
  onPtrCoverOk(Ljava/lang/String;Ljava/lang/String;)V = OnPtrCoverOk(string, string)
com/epson/eposdevice/printer/CoverOkListener = Com.Epson.Eposdevice.Printer.ICoverOkListener
  onPtrCoverOk(Ljava/lang/String;Ljava/lang/String;)V = OnPtrCoverOk(string, string)
com/epson/eposdevice/printer/CoverOpenListener = Com.Epson.Eposdevice.Printer.ICoverOpenListener
  onPtrCoverOpen(Ljava/lang/String;Ljava/lang/String;)V = OnPtrCoverOpen(string, string)
com/epson/eposdevice/printer/CoverOpenListener = Com.Epson.Eposdevice.Printer.ICoverOpenListener
  onPtrCoverOpen(Ljava/lang/String;Ljava/lang/String;)V = OnPtrCoverOpen(string, string)
com/epson/eposdevice/printer/DrawerClosedListener = Com.Epson.Eposdevice.Printer.IDrawerClosedListener
  onPtrDrawerClosed(Ljava/lang/String;Ljava/lang/String;)V = OnPtrDrawerClosed(string, string)
com/epson/eposdevice/printer/DrawerClosedListener = Com.Epson.Eposdevice.Printer.IDrawerClosedListener
  onPtrDrawerClosed(Ljava/lang/String;Ljava/lang/String;)V = OnPtrDrawerClosed(string, string)
com/epson/eposdevice/printer/DrawerOpenListener = Com.Epson.Eposdevice.Printer.IDrawerOpenListener
  onPtrDrawerOpen(Ljava/lang/String;Ljava/lang/String;)V = OnPtrDrawerOpen(string, string)
com/epson/eposdevice/printer/DrawerOpenListener = Com.Epson.Eposdevice.Printer.IDrawerOpenListener
  onPtrDrawerOpen(Ljava/lang/String;Ljava/lang/String;)V = OnPtrDrawerOpen(string, string)
com/epson/eposdevice/printer/JobReceiveListener = Com.Epson.Eposdevice.Printer.IJobReceiveListener
  onPtrReceive(Ljava/lang/String;Ljava/lang/String;IIIILjava/lang/String;)V = OnPtrReceive(string, string, int, int, int, int, string)
com/epson/eposdevice/printer/JobReceiveListener = Com.Epson.Eposdevice.Printer.IJobReceiveListener
  onPtrReceive(Ljava/lang/String;Ljava/lang/String;IIIILjava/lang/String;)V = OnPtrReceive(string, string, int, int, int, int, string)
com/epson/eposdevice/printer/OfflineListener = Com.Epson.Eposdevice.Printer.IOfflineListener
  onPtrOffline(Ljava/lang/String;Ljava/lang/String;)V = OnPtrOffline(string, string)
com/epson/eposdevice/printer/OfflineListener = Com.Epson.Eposdevice.Printer.IOfflineListener
  onPtrOffline(Ljava/lang/String;Ljava/lang/String;)V = OnPtrOffline(string, string)
com/epson/eposdevice/printer/OnlineListener = Com.Epson.Eposdevice.Printer.IOnlineListener
  onPtrOnline(Ljava/lang/String;Ljava/lang/String;)V = OnPtrOnline(string, string)
com/epson/eposdevice/printer/OnlineListener = Com.Epson.Eposdevice.Printer.IOnlineListener
  onPtrOnline(Ljava/lang/String;Ljava/lang/String;)V = OnPtrOnline(string, string)
com/epson/eposdevice/printer/PaperEndListener = Com.Epson.Eposdevice.Printer.IPaperEndListener
  onPtrPaperEnd(Ljava/lang/String;Ljava/lang/String;)V = OnPtrPaperEnd(string, string)
com/epson/eposdevice/printer/PaperEndListener = Com.Epson.Eposdevice.Printer.IPaperEndListener
  onPtrPaperEnd(Ljava/lang/String;Ljava/lang/String;)V = OnPtrPaperEnd(string, string)
com/epson/eposdevice/printer/PaperNearEndListener = Com.Epson.Eposdevice.Printer.IPaperNearEndListener
  onPtrPaperNearEnd(Ljava/lang/String;Ljava/lang/String;)V = OnPtrPaperNearEnd(string, string)
com/epson/eposdevice/printer/PaperNearEndListener = Com.Epson.Eposdevice.Printer.IPaperNearEndListener
  onPtrPaperNearEnd(Ljava/lang/String;Ljava/lang/String;)V = OnPtrPaperNearEnd(string, string)
com/epson/eposdevice/printer/PaperOkListener = Com.Epson.Eposdevice.Printer.IPaperOkListener
  onPtrPaperOk(Ljava/lang/String;Ljava/lang/String;)V = OnPtrPaperOk(string, string)
com/epson/eposdevice/printer/PaperOkListener = Com.Epson.Eposdevice.Printer.IPaperOkListener
  onPtrPaperOk(Ljava/lang/String;Ljava/lang/String;)V = OnPtrPaperOk(string, string)
com/epson/eposdevice/printer/PowerOffListener = Com.Epson.Eposdevice.Printer.IPowerOffListener
  onPtrPowerOff(Ljava/lang/String;Ljava/lang/String;)V = OnPtrPowerOff(string, string)
com/epson/eposdevice/printer/PowerOffListener = Com.Epson.Eposdevice.Printer.IPowerOffListener
  onPtrPowerOff(Ljava/lang/String;Ljava/lang/String;)V = OnPtrPowerOff(string, string)
com/epson/eposdevice/printer/Printer = Com.Epson.Eposdevice.Printer.Printer
  <init>(J)V = .ctor(long)
  ALIGN_CENTER = AlignCenter
  ALIGN_LEFT = AlignLeft
  ALIGN_RIGHT = AlignRight
  BARCODE_CODABAR = BarcodeCodabar
  BARCODE_CODE128 = BarcodeCode128
  BARCODE_CODE39 = BarcodeCode39
  BARCODE_CODE93 = BarcodeCode93
  BARCODE_EAN13 = BarcodeEan13
  BARCODE_EAN8 = BarcodeEan8
  BARCODE_GS1_128 = BarcodeGs1128
  BARCODE_GS1_DATABAR_EXPANDED = BarcodeGs1DatabarExpanded
  BARCODE_GS1_DATABAR_LIMITED = BarcodeGs1DatabarLimited
  BARCODE_GS1_DATABAR_OMNIDIRECTIONAL = BarcodeGs1DatabarOmnidirectional
  BARCODE_GS1_DATABAR_TRUNCATED = BarcodeGs1DatabarTruncated
  BARCODE_ITF = BarcodeItf
  BARCODE_JAN13 = BarcodeJan13
  BARCODE_JAN8 = BarcodeJan8
  BARCODE_UPC_A = BarcodeUpcA
  BARCODE_UPC_E = BarcodeUpcE
  COLOR_1 = Color1
  COLOR_2 = Color2
  COLOR_3 = Color3
  COLOR_4 = Color4
  COLOR_NONE = ColorNone
  CUT_FEED = CutFeed
  CUT_NO_FEED = CutNoFeed
  CUT_RESERVE = CutReserve
  DIRECTION_BOTTOM_TO_TOP = DirectionBottomToTop
  DIRECTION_LEFT_TO_RIGHT = DirectionLeftToRight
  DIRECTION_RIGHT_TO_LEFT = DirectionRightToLeft
  DIRECTION_TOP_TO_BOTTOM = DirectionTopToBottom
  DRAWER_1 = Drawer1
  DRAWER_2 = Drawer2
  DRAWER_OPEN_LEVEL_HIGH = DrawerOpenLevelHigh
  DRAWER_OPEN_LEVEL_LOW = DrawerOpenLevelLow
  FALSE = False
  FEED_CURRENT_TOF = FeedCurrentTof
  FEED_CUTTING = FeedCutting
  FEED_NEXT_TOF = FeedNextTof
  FEED_PEELING = FeedPeeling
  FONT_A = FontA
  FONT_B = FontB
  FONT_C = FontC
  FONT_D = FontD
  FONT_E = FontE
  HALFTONE_DITHER = HalftoneDither
  HALFTONE_ERROR_DIFFUSION = HalftoneErrorDiffusion
  HALFTONE_THRESHOLD = HalftoneThreshold
  HRI_ABOVE = HriAbove
  HRI_BELOW = HriBelow
  HRI_BOTH = HriBoth
  HRI_NONE = HriNone
  LANG_EN = LangEn
  LANG_JA = LangJa
  LANG_KO = LangKo
  LANG_TH = LangTh
  LANG_ZH_CN = LangZhCn
  LANG_ZH_TW = LangZhTw
  LAYOUT_LABEL = LayoutLabel
  LAYOUT_LABEL_BM = LayoutLabelBm
  LAYOUT_RECEIPT = LayoutReceipt
  LAYOUT_RECEIPT_BM = LayoutReceiptBm
  LEVEL_0 = Level0
  LEVEL_1 = Level1
  LEVEL_2 = Level2
  LEVEL_3 = Level3
  LEVEL_4 = Level4
  LEVEL_5 = Level5
  LEVEL_6 = Level6
  LEVEL_7 = Level7
  LEVEL_8 = Level8
  LEVEL_DEFAULT = LevelDefault
  LEVEL_H = LevelH
  LEVEL_L = LevelL
  LEVEL_M = LevelM
  LEVEL_Q = LevelQ
  LINE_MEDIUM = LineMedium
  LINE_MEDIUM_DOUBLE = LineMediumDouble
  LINE_THICK = LineThick
  LINE_THICK_DOUBLE = LineThickDouble
  LINE_THIN = LineThin
  LINE_THIN_DOUBLE = LineThinDouble
  MODE_GRAY16 = ModeGray16
  MODE_MONO = ModeMono
  PARAM_DEFAULT = ParamDefault
  PARAM_UNSPECIFIED = ParamUnspecified
  PATTERN_1 = Pattern1
  PATTERN_10 = Pattern10
  PATTERN_2 = Pattern2
  PATTERN_3 = Pattern3
  PATTERN_4 = Pattern4
  PATTERN_5 = Pattern5
  PATTERN_6 = Pattern6
  PATTERN_7 = Pattern7
  PATTERN_8 = Pattern8
  PATTERN_9 = Pattern9
  PATTERN_A = PatternA
  PATTERN_B = PatternB
  PATTERN_C = PatternC
  PATTERN_D = PatternD
  PATTERN_E = PatternE
  PATTERN_ERROR = PatternError
  PATTERN_NONE = PatternNone
  PATTERN_PAPER_END = PatternPaperEnd
  PULSE_100 = Pulse100
  PULSE_200 = Pulse200
  PULSE_300 = Pulse300
  PULSE_400 = Pulse400
  PULSE_500 = Pulse500
  ST_AUTOCUTTER_ERR = StAutocutterErr
  ST_AUTORECOVER_ERR = StAutorecoverErr
  ST_BATTERY_OFFLINE = StBatteryOffline
  ST_BUZZER = StBuzzer
  ST_COVER_OPEN = StCoverOpen
  ST_DRAWER_KICK = StDrawerKick
  ST_MECHANICAL_ERR = StMechanicalErr
  ST_NO_RESPONSE = StNoResponse
  ST_OFF_LINE = StOffLine
  ST_PANEL_SWITCH = StPanelSwitch
  ST_PAPER_FEED = StPaperFeed
  ST_PRINT_SUCCESS = StPrintSuccess
  ST_RECEIPT_END = StReceiptEnd
  ST_RECEIPT_NEAR_END = StReceiptNearEnd
  ST_SPOOLER_IS_STOPPED = StSpoolerIsStopped
  ST_UNRECOVER_ERR = StUnrecoverErr
  ST_WAIT_ON_LINE = StWaitOnLine
  SYMBOL_AZTECCODE_COMPACT = SymbolAzteccodeCompact
  SYMBOL_AZTECCODE_FULLRANGE = SymbolAzteccodeFullrange
  SYMBOL_DATAMATRIX_RECTANGLE_12 = SymbolDatamatrixRectangle12
  SYMBOL_DATAMATRIX_RECTANGLE_16 = SymbolDatamatrixRectangle16
  SYMBOL_DATAMATRIX_RECTANGLE_8 = SymbolDatamatrixRectangle8
  SYMBOL_DATAMATRIX_SQUARE = SymbolDatamatrixSquare
  SYMBOL_GS1_DATABAR_EXPANDED_STACKED = SymbolGs1DatabarExpandedStacked
  SYMBOL_GS1_DATABAR_STACKED = SymbolGs1DatabarStacked
  SYMBOL_GS1_DATABAR_STACKED_OMNIDIRECTIONAL = SymbolGs1DatabarStackedOmnidirectional
  SYMBOL_MAXICODE_MODE_2 = SymbolMaxicodeMode2
  SYMBOL_MAXICODE_MODE_3 = SymbolMaxicodeMode3
  SYMBOL_MAXICODE_MODE_4 = SymbolMaxicodeMode4
  SYMBOL_MAXICODE_MODE_5 = SymbolMaxicodeMode5
  SYMBOL_MAXICODE_MODE_6 = SymbolMaxicodeMode6
  SYMBOL_PDF417_STANDARD = SymbolPdf417Standard
  SYMBOL_PDF417_TRUNCATED = SymbolPdf417Truncated
  SYMBOL_QRCODE_MICRO = SymbolQrcodeMicro
  SYMBOL_QRCODE_MODEL_1 = SymbolQrcodeModel1
  SYMBOL_QRCODE_MODEL_2 = SymbolQrcodeModel2
  TRUE = True
  getBrightness()D = Brightness
  setBrightness(D)V = Brightness
  getDrawerOpenLevel()I = DrawerOpenLevel
  setDrawerOpenLevel(I)V = DrawerOpenLevel
  getForce()Z = Force
  setForce(Z)V = Force
  getHalftone()I = Halftone
  setHalftone(I)V = Halftone
  getInnerHandle()J = InnerHandle
  getInterval()I = Interval
  setInterval(I)V = Interval
  getTimeout()I = Timeout
  setTimeout(I)V = Timeout
  addBarcode(Ljava/lang/String;IIIII)V = AddBarcode(string, int, int, int, int, int)
  addCommand([B)V = AddCommand(byte[])
  addCut(I)V = AddCut(int)
  addFeed()V = AddFeed()
  addFeedLine(I)V = AddFeedLine(int)
  addFeedPosition(I)V = AddFeedPosition(int)
  addFeedUnit(I)V = AddFeedUnit(int)
  addHLine(III)V = AddHLine(int, int, int)
  addImage(Landroid/graphics/Bitmap;IIIIII)V = AddImage(Android.Graphics.Bitmap, int, int, int, int, int, int)
  addLayout(IIIIIII)V = AddLayout(int, int, int, int, int, int, int)
  addLogo(II)V = AddLogo(int, int)
  addPageArea(IIII)V = AddPageArea(int, int, int, int)
  addPageBegin()V = AddPageBegin()
  addPageDirection(I)V = AddPageDirection(int)
  addPageEnd()V = AddPageEnd()
  addPageLine(IIIII)V = AddPageLine(int, int, int, int, int)
  addPagePosition(II)V = AddPagePosition(int, int)
  addPageRectangle(IIIII)V = AddPageRectangle(int, int, int, int, int)
  addPulse(II)V = AddPulse(int, int)
  addRecovery()V = AddRecovery()
  addReset()V = AddReset()
  addSound(III)V = AddSound(int, int, int)
  addSymbol(Ljava/lang/String;IIIII)V = AddSymbol(string, int, int, int, int, int)
  addText(Ljava/lang/String;)V = AddText(string)
  addTextAlign(I)V = AddTextAlign(int)
  addTextDouble(II)V = AddTextDouble(int, int)
  addTextFont(I)V = AddTextFont(int)
  addTextLang(I)V = AddTextLang(int)
  addTextLineSpace(I)V = AddTextLineSpace(int)
  addTextPosition(I)V = AddTextPosition(int)
  addTextRotate(I)V = AddTextRotate(int)
  addTextSize(II)V = AddTextSize(int, int)
  addTextSmooth(I)V = AddTextSmooth(int)
  addTextStyle(IIII)V = AddTextStyle(int, int, int, int)
  addTextVPosition(I)V = AddTextVPosition(int)
  addVLineBegin(II)V = AddVLineBegin(int, int)
  addVLineEnd(II)V = AddVLineEnd(int, int)
  checkHandle()V = CheckHandle()
  checkPrintJobIdFormat(Ljava/lang/String;)V = CheckPrintJobIdFormat(string)
  clearCommandBuffer()V = ClearCommandBuffer()
  getPrintJobStatus(Ljava/lang/String;)V = GetPrintJobStatus(string)
  innerDeleteInstance()V = InnerDeleteInstance()
  nativeAddBarcode(JLjava/lang/String;IIIJJ)I = NativeAddBarcode(long, string, int, int, int, long, long)
  nativeAddCommand(J[B)I = NativeAddCommand(long, byte[])
  nativeAddCut(JI)I = NativeAddCut(long, int)
  nativeAddFeed(J)I = NativeAddFeed(long)
  nativeAddFeedLine(JJ)I = NativeAddFeedLine(long, long)
  nativeAddFeedPosition(JI)I = NativeAddFeedPosition(long, int)
  nativeAddFeedUnit(JJ)I = NativeAddFeedUnit(long, long)
  nativeAddHLine(JJJI)I = NativeAddHLine(long, long, long, int)
  nativeAddImage(J[BJJJJJJIIID)I = NativeAddImage(long, byte[], long, long, long, long, long, long, int, int, int, double)
  nativeAddLayout(JIJJJJJJ)I = NativeAddLayout(long, int, long, long, long, long, long, long)
  nativeAddLogo(JJJ)I = NativeAddLogo(long, long, long)
  nativeAddPageArea(JJJJJ)I = NativeAddPageArea(long, long, long, long, long)
  nativeAddPageBegin(J)I = NativeAddPageBegin(long)
  nativeAddPageDirection(JI)I = NativeAddPageDirection(long, int)
  nativeAddPageEnd(J)I = NativeAddPageEnd(long)
  nativeAddPageLine(JJJJJI)I = NativeAddPageLine(long, long, long, long, long, int)
  nativeAddPagePosition(JJJ)I = NativeAddPagePosition(long, long, long)
  nativeAddPageRectangle(JJJJJI)I = NativeAddPageRectangle(long, long, long, long, long, int)
  nativeAddPulse(JII)I = NativeAddPulse(long, int, int)
  nativeAddRecovery(J)I = NativeAddRecovery(long)
  nativeAddReset(J)I = NativeAddReset(long)
  nativeAddSound(JIJJ)I = NativeAddSound(long, int, long, long)
  nativeAddSymbol(JLjava/lang/String;IIJJJ)I = NativeAddSymbol(long, string, int, int, long, long, long)
  nativeAddText(JLjava/lang/String;)I = NativeAddText(long, string)
  nativeAddTextAlign(JI)I = NativeAddTextAlign(long, int)
  nativeAddTextDouble(JII)I = NativeAddTextDouble(long, int, int)
  nativeAddTextFont(JI)I = NativeAddTextFont(long, int)
  nativeAddTextLang(JI)I = NativeAddTextLang(long, int)
  nativeAddTextLineSpace(JJ)I = NativeAddTextLineSpace(long, long)
  nativeAddTextPosition(JJ)I = NativeAddTextPosition(long, long)
  nativeAddTextRotate(JI)I = NativeAddTextRotate(long, int)
  nativeAddTextSize(JJJ)I = NativeAddTextSize(long, long, long)
  nativeAddTextSmooth(JI)I = NativeAddTextSmooth(long, int)
  nativeAddTextStyle(JIIII)I = NativeAddTextStyle(long, int, int, int, int)
  nativeAddTextVPosition(JJ)I = NativeAddTextVPosition(long, long)
  nativeAddVLineBegin(JJI)I = NativeAddVLineBegin(long, long, int)
  nativeAddVLineEnd(JJI)I = NativeAddVLineEnd(long, long, int)
  nativeClearCommandBuffer(J)I = NativeClearCommandBuffer(long)
  nativeOnPtrBatteryLow(Ljava/lang/String;Ljava/lang/String;)V = NativeOnPtrBatteryLow(string, string)
  nativeOnPtrBatteryOk(Ljava/lang/String;Ljava/lang/String;)V = NativeOnPtrBatteryOk(string, string)
  nativeOnPtrBatteryStatusChange(Ljava/lang/String;Ljava/lang/String;I)V = NativeOnPtrBatteryStatusChange(string, string, int)
  nativeOnPtrCoverOk(Ljava/lang/String;Ljava/lang/String;)V = NativeOnPtrCoverOk(string, string)
  nativeOnPtrCoverOpen(Ljava/lang/String;Ljava/lang/String;)V = NativeOnPtrCoverOpen(string, string)
  nativeOnPtrDrawerClosed(Ljava/lang/String;Ljava/lang/String;)V = NativeOnPtrDrawerClosed(string, string)
  nativeOnPtrDrawerOpen(Ljava/lang/String;Ljava/lang/String;)V = NativeOnPtrDrawerOpen(string, string)
  nativeOnPtrOffline(Ljava/lang/String;Ljava/lang/String;)V = NativeOnPtrOffline(string, string)
  nativeOnPtrOnline(Ljava/lang/String;Ljava/lang/String;)V = NativeOnPtrOnline(string, string)
  nativeOnPtrPaperEnd(Ljava/lang/String;Ljava/lang/String;)V = NativeOnPtrPaperEnd(string, string)
  nativeOnPtrPaperNearEnd(Ljava/lang/String;Ljava/lang/String;)V = NativeOnPtrPaperNearEnd(string, string)
  nativeOnPtrPaperOk(Ljava/lang/String;Ljava/lang/String;)V = NativeOnPtrPaperOk(string, string)
  nativeOnPtrPowerOff(Ljava/lang/String;Ljava/lang/String;)V = NativeOnPtrPowerOff(string, string)
  nativeOnPtrReceive(Ljava/lang/String;Ljava/lang/String;IIIILjava/lang/String;)V = NativeOnPtrReceive(string, string, int, int, int, int, string)
  nativeOnPtrStatusChange(Ljava/lang/String;Ljava/lang/String;I)V = NativeOnPtrStatusChange(string, string, int)
  nativeRecovery(J)I = NativeRecovery(long)
  nativeReset(JZ)I = NativeReset(long, bool)
  nativeSendData(JILjava/lang/String;ZZ)I = NativeSendData(long, int, string, bool, bool)
  nativeSetDrawerOpenLevel(JI)I = NativeSetDrawerOpenLevel(long, int)
  nativeSetInterval(JJ)I = NativeSetInterval(long, long)
  nativeStartMonitor(JJ)I = NativeStartMonitor(long, long)
  nativeStopMonitor(J)I = NativeStopMonitor(long)
  outputException(Ljava/lang/String;Ljava/lang/Exception;)V = OutputException(string, Java.Lang.Exception)
  outputLogCallFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogCallFunction(string, params Java.Lang.Object[])
  outputLogEvent(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogEvent(string, params Java.Lang.Object[])
  outputLogReturnFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogReturnFunction(string, params Java.Lang.Object[])
  recover()V = Recover()
  reset()V = Reset()
  sendData()V = SendData()
  sendData(Ljava/lang/String;)V = SendData(string)
  setBatteryLowEventCallback(Lcom/epson/eposdevice/printer/BatteryLowListener;)V = SetBatteryLowEventCallback(Com.Epson.Eposdevice.Printer.IBatteryLowListener)
  setBatteryOkEventCallback(Lcom/epson/eposdevice/printer/BatteryOkListener;)V = SetBatteryOkEventCallback(Com.Epson.Eposdevice.Printer.IBatteryOkListener)
  setBatteryStatusChangeEventCallback(Lcom/epson/eposdevice/printer/BatteryStatusChangeListener;)V = SetBatteryStatusChangeEventCallback(Com.Epson.Eposdevice.Printer.IBatteryStatusChangeListener)
  setCoverOkEventCallback(Lcom/epson/eposdevice/printer/CoverOkListener;)V = SetCoverOkEventCallback(Com.Epson.Eposdevice.Printer.ICoverOkListener)
  setCoverOpenEventCallback(Lcom/epson/eposdevice/printer/CoverOpenListener;)V = SetCoverOpenEventCallback(Com.Epson.Eposdevice.Printer.ICoverOpenListener)
  setDrawerClosedEventCallback(Lcom/epson/eposdevice/printer/DrawerClosedListener;)V = SetDrawerClosedEventCallback(Com.Epson.Eposdevice.Printer.IDrawerClosedListener)
  setDrawerOpenEventCallback(Lcom/epson/eposdevice/printer/DrawerOpenListener;)V = SetDrawerOpenEventCallback(Com.Epson.Eposdevice.Printer.IDrawerOpenListener)
  setOfflineEventCallback(Lcom/epson/eposdevice/printer/OfflineListener;)V = SetOfflineEventCallback(Com.Epson.Eposdevice.Printer.IOfflineListener)
  setOnlineEventCallback(Lcom/epson/eposdevice/printer/OnlineListener;)V = SetOnlineEventCallback(Com.Epson.Eposdevice.Printer.IOnlineListener)
  setPaperEndEventCallback(Lcom/epson/eposdevice/printer/PaperEndListener;)V = SetPaperEndEventCallback(Com.Epson.Eposdevice.Printer.IPaperEndListener)
  setPaperNearEndEventCallback(Lcom/epson/eposdevice/printer/PaperNearEndListener;)V = SetPaperNearEndEventCallback(Com.Epson.Eposdevice.Printer.IPaperNearEndListener)
  setPaperOkEventCallback(Lcom/epson/eposdevice/printer/PaperOkListener;)V = SetPaperOkEventCallback(Com.Epson.Eposdevice.Printer.IPaperOkListener)
  setPowerOffEventCallback(Lcom/epson/eposdevice/printer/PowerOffListener;)V = SetPowerOffEventCallback(Com.Epson.Eposdevice.Printer.IPowerOffListener)
  setReceiveEventCallback(Lcom/epson/eposdevice/printer/ReceiveListener;)V = SetReceiveEventCallback(Com.Epson.Eposdevice.Printer.IReceiveListener)
  setStatusChangeEventCallback(Lcom/epson/eposdevice/printer/StatusChangeListener;)V = SetStatusChangeEventCallback(Com.Epson.Eposdevice.Printer.IStatusChangeListener)
  startMonitor()V = StartMonitor()
  stopMonitor()V = StopMonitor()
com/epson/eposdevice/printer/Printer = Com.Epson.Eposdevice.Printer.Printer
  <init>(J)V = .ctor(long)
  ALIGN_CENTER = AlignCenter
  ALIGN_LEFT = AlignLeft
  ALIGN_RIGHT = AlignRight
  BARCODE_CODABAR = BarcodeCodabar
  BARCODE_CODE128 = BarcodeCode128
  BARCODE_CODE39 = BarcodeCode39
  BARCODE_CODE93 = BarcodeCode93
  BARCODE_EAN13 = BarcodeEan13
  BARCODE_EAN8 = BarcodeEan8
  BARCODE_GS1_128 = BarcodeGs1128
  BARCODE_GS1_DATABAR_EXPANDED = BarcodeGs1DatabarExpanded
  BARCODE_GS1_DATABAR_LIMITED = BarcodeGs1DatabarLimited
  BARCODE_GS1_DATABAR_OMNIDIRECTIONAL = BarcodeGs1DatabarOmnidirectional
  BARCODE_GS1_DATABAR_TRUNCATED = BarcodeGs1DatabarTruncated
  BARCODE_ITF = BarcodeItf
  BARCODE_JAN13 = BarcodeJan13
  BARCODE_JAN8 = BarcodeJan8
  BARCODE_UPC_A = BarcodeUpcA
  BARCODE_UPC_E = BarcodeUpcE
  COLOR_1 = Color1
  COLOR_2 = Color2
  COLOR_3 = Color3
  COLOR_4 = Color4
  COLOR_NONE = ColorNone
  CUT_FEED = CutFeed
  CUT_NO_FEED = CutNoFeed
  CUT_RESERVE = CutReserve
  DIRECTION_BOTTOM_TO_TOP = DirectionBottomToTop
  DIRECTION_LEFT_TO_RIGHT = DirectionLeftToRight
  DIRECTION_RIGHT_TO_LEFT = DirectionRightToLeft
  DIRECTION_TOP_TO_BOTTOM = DirectionTopToBottom
  DRAWER_1 = Drawer1
  DRAWER_2 = Drawer2
  DRAWER_OPEN_LEVEL_HIGH = DrawerOpenLevelHigh
  DRAWER_OPEN_LEVEL_LOW = DrawerOpenLevelLow
  FALSE = False
  FEED_CURRENT_TOF = FeedCurrentTof
  FEED_CUTTING = FeedCutting
  FEED_NEXT_TOF = FeedNextTof
  FEED_PEELING = FeedPeeling
  FONT_A = FontA
  FONT_B = FontB
  FONT_C = FontC
  FONT_D = FontD
  FONT_E = FontE
  HALFTONE_DITHER = HalftoneDither
  HALFTONE_ERROR_DIFFUSION = HalftoneErrorDiffusion
  HALFTONE_THRESHOLD = HalftoneThreshold
  HRI_ABOVE = HriAbove
  HRI_BELOW = HriBelow
  HRI_BOTH = HriBoth
  HRI_NONE = HriNone
  LANG_EN = LangEn
  LANG_JA = LangJa
  LANG_KO = LangKo
  LANG_TH = LangTh
  LANG_ZH_CN = LangZhCn
  LANG_ZH_TW = LangZhTw
  LAYOUT_LABEL = LayoutLabel
  LAYOUT_LABEL_BM = LayoutLabelBm
  LAYOUT_RECEIPT = LayoutReceipt
  LAYOUT_RECEIPT_BM = LayoutReceiptBm
  LEVEL_0 = Level0
  LEVEL_1 = Level1
  LEVEL_2 = Level2
  LEVEL_3 = Level3
  LEVEL_4 = Level4
  LEVEL_5 = Level5
  LEVEL_6 = Level6
  LEVEL_7 = Level7
  LEVEL_8 = Level8
  LEVEL_DEFAULT = LevelDefault
  LEVEL_H = LevelH
  LEVEL_L = LevelL
  LEVEL_M = LevelM
  LEVEL_Q = LevelQ
  LINE_MEDIUM = LineMedium
  LINE_MEDIUM_DOUBLE = LineMediumDouble
  LINE_THICK = LineThick
  LINE_THICK_DOUBLE = LineThickDouble
  LINE_THIN = LineThin
  LINE_THIN_DOUBLE = LineThinDouble
  MODE_GRAY16 = ModeGray16
  MODE_MONO = ModeMono
  PARAM_DEFAULT = ParamDefault
  PARAM_UNSPECIFIED = ParamUnspecified
  PATTERN_1 = Pattern1
  PATTERN_10 = Pattern10
  PATTERN_2 = Pattern2
  PATTERN_3 = Pattern3
  PATTERN_4 = Pattern4
  PATTERN_5 = Pattern5
  PATTERN_6 = Pattern6
  PATTERN_7 = Pattern7
  PATTERN_8 = Pattern8
  PATTERN_9 = Pattern9
  PATTERN_A = PatternA
  PATTERN_B = PatternB
  PATTERN_C = PatternC
  PATTERN_D = PatternD
  PATTERN_E = PatternE
  PATTERN_ERROR = PatternError
  PATTERN_NONE = PatternNone
  PATTERN_PAPER_END = PatternPaperEnd
  PULSE_100 = Pulse100
  PULSE_200 = Pulse200
  PULSE_300 = Pulse300
  PULSE_400 = Pulse400
  PULSE_500 = Pulse500
  ST_AUTOCUTTER_ERR = StAutocutterErr
  ST_AUTORECOVER_ERR = StAutorecoverErr
  ST_BATTERY_OFFLINE = StBatteryOffline
  ST_BUZZER = StBuzzer
  ST_COVER_OPEN = StCoverOpen
  ST_DRAWER_KICK = StDrawerKick
  ST_MECHANICAL_ERR = StMechanicalErr
  ST_NO_RESPONSE = StNoResponse
  ST_OFF_LINE = StOffLine
  ST_PANEL_SWITCH = StPanelSwitch
  ST_PAPER_FEED = StPaperFeed
  ST_PRINT_SUCCESS = StPrintSuccess
  ST_RECEIPT_END = StReceiptEnd
  ST_RECEIPT_NEAR_END = StReceiptNearEnd
  ST_SPOOLER_IS_STOPPED = StSpoolerIsStopped
  ST_UNRECOVER_ERR = StUnrecoverErr
  ST_WAIT_ON_LINE = StWaitOnLine
  SYMBOL_AZTECCODE_COMPACT = SymbolAzteccodeCompact
  SYMBOL_AZTECCODE_FULLRANGE = SymbolAzteccodeFullrange
  SYMBOL_DATAMATRIX_RECTANGLE_12 = SymbolDatamatrixRectangle12
  SYMBOL_DATAMATRIX_RECTANGLE_16 = SymbolDatamatrixRectangle16
  SYMBOL_DATAMATRIX_RECTANGLE_8 = SymbolDatamatrixRectangle8
  SYMBOL_DATAMATRIX_SQUARE = SymbolDatamatrixSquare
  SYMBOL_GS1_DATABAR_EXPANDED_STACKED = SymbolGs1DatabarExpandedStacked
  SYMBOL_GS1_DATABAR_STACKED = SymbolGs1DatabarStacked
  SYMBOL_GS1_DATABAR_STACKED_OMNIDIRECTIONAL = SymbolGs1DatabarStackedOmnidirectional
  SYMBOL_MAXICODE_MODE_2 = SymbolMaxicodeMode2
  SYMBOL_MAXICODE_MODE_3 = SymbolMaxicodeMode3
  SYMBOL_MAXICODE_MODE_4 = SymbolMaxicodeMode4
  SYMBOL_MAXICODE_MODE_5 = SymbolMaxicodeMode5
  SYMBOL_MAXICODE_MODE_6 = SymbolMaxicodeMode6
  SYMBOL_PDF417_STANDARD = SymbolPdf417Standard
  SYMBOL_PDF417_TRUNCATED = SymbolPdf417Truncated
  SYMBOL_QRCODE_MICRO = SymbolQrcodeMicro
  SYMBOL_QRCODE_MODEL_1 = SymbolQrcodeModel1
  SYMBOL_QRCODE_MODEL_2 = SymbolQrcodeModel2
  TRUE = True
  getBrightness()D = Brightness
  setBrightness(D)V = Brightness
  getDrawerOpenLevel()I = DrawerOpenLevel
  setDrawerOpenLevel(I)V = DrawerOpenLevel
  getForce()Z = Force
  setForce(Z)V = Force
  getHalftone()I = Halftone
  setHalftone(I)V = Halftone
  getInnerHandle()J = InnerHandle
  getInterval()I = Interval
  setInterval(I)V = Interval
  getTimeout()I = Timeout
  setTimeout(I)V = Timeout
  addBarcode(Ljava/lang/String;IIIII)V = AddBarcode(string, int, int, int, int, int)
  addCommand([B)V = AddCommand(byte[])
  addCut(I)V = AddCut(int)
  addFeed()V = AddFeed()
  addFeedLine(I)V = AddFeedLine(int)
  addFeedPosition(I)V = AddFeedPosition(int)
  addFeedUnit(I)V = AddFeedUnit(int)
  addHLine(III)V = AddHLine(int, int, int)
  addImage(Landroid/graphics/Bitmap;IIIIII)V = AddImage(Android.Graphics.Bitmap, int, int, int, int, int, int)
  addLayout(IIIIIII)V = AddLayout(int, int, int, int, int, int, int)
  addLogo(II)V = AddLogo(int, int)
  addPageArea(IIII)V = AddPageArea(int, int, int, int)
  addPageBegin()V = AddPageBegin()
  addPageDirection(I)V = AddPageDirection(int)
  addPageEnd()V = AddPageEnd()
  addPageLine(IIIII)V = AddPageLine(int, int, int, int, int)
  addPagePosition(II)V = AddPagePosition(int, int)
  addPageRectangle(IIIII)V = AddPageRectangle(int, int, int, int, int)
  addPulse(II)V = AddPulse(int, int)
  addRecovery()V = AddRecovery()
  addReset()V = AddReset()
  addSound(III)V = AddSound(int, int, int)
  addSymbol(Ljava/lang/String;IIIII)V = AddSymbol(string, int, int, int, int, int)
  addText(Ljava/lang/String;)V = AddText(string)
  addTextAlign(I)V = AddTextAlign(int)
  addTextDouble(II)V = AddTextDouble(int, int)
  addTextFont(I)V = AddTextFont(int)
  addTextLang(I)V = AddTextLang(int)
  addTextLineSpace(I)V = AddTextLineSpace(int)
  addTextPosition(I)V = AddTextPosition(int)
  addTextRotate(I)V = AddTextRotate(int)
  addTextSize(II)V = AddTextSize(int, int)
  addTextSmooth(I)V = AddTextSmooth(int)
  addTextStyle(IIII)V = AddTextStyle(int, int, int, int)
  addTextVPosition(I)V = AddTextVPosition(int)
  addVLineBegin(II)V = AddVLineBegin(int, int)
  addVLineEnd(II)V = AddVLineEnd(int, int)
  checkHandle()V = CheckHandle()
  checkPrintJobIdFormat(Ljava/lang/String;)V = CheckPrintJobIdFormat(string)
  clearCommandBuffer()V = ClearCommandBuffer()
  getPrintJobStatus(Ljava/lang/String;)V = GetPrintJobStatus(string)
  innerDeleteInstance()V = InnerDeleteInstance()
  nativeAddBarcode(JLjava/lang/String;IIIJJ)I = NativeAddBarcode(long, string, int, int, int, long, long)
  nativeAddCommand(J[B)I = NativeAddCommand(long, byte[])
  nativeAddCut(JI)I = NativeAddCut(long, int)
  nativeAddFeed(J)I = NativeAddFeed(long)
  nativeAddFeedLine(JJ)I = NativeAddFeedLine(long, long)
  nativeAddFeedPosition(JI)I = NativeAddFeedPosition(long, int)
  nativeAddFeedUnit(JJ)I = NativeAddFeedUnit(long, long)
  nativeAddHLine(JJJI)I = NativeAddHLine(long, long, long, int)
  nativeAddImage(J[BJJJJJJIIID)I = NativeAddImage(long, byte[], long, long, long, long, long, long, int, int, int, double)
  nativeAddLayout(JIJJJJJJ)I = NativeAddLayout(long, int, long, long, long, long, long, long)
  nativeAddLogo(JJJ)I = NativeAddLogo(long, long, long)
  nativeAddPageArea(JJJJJ)I = NativeAddPageArea(long, long, long, long, long)
  nativeAddPageBegin(J)I = NativeAddPageBegin(long)
  nativeAddPageDirection(JI)I = NativeAddPageDirection(long, int)
  nativeAddPageEnd(J)I = NativeAddPageEnd(long)
  nativeAddPageLine(JJJJJI)I = NativeAddPageLine(long, long, long, long, long, int)
  nativeAddPagePosition(JJJ)I = NativeAddPagePosition(long, long, long)
  nativeAddPageRectangle(JJJJJI)I = NativeAddPageRectangle(long, long, long, long, long, int)
  nativeAddPulse(JII)I = NativeAddPulse(long, int, int)
  nativeAddRecovery(J)I = NativeAddRecovery(long)
  nativeAddReset(J)I = NativeAddReset(long)
  nativeAddSound(JIJJ)I = NativeAddSound(long, int, long, long)
  nativeAddSymbol(JLjava/lang/String;IIJJJ)I = NativeAddSymbol(long, string, int, int, long, long, long)
  nativeAddText(JLjava/lang/String;)I = NativeAddText(long, string)
  nativeAddTextAlign(JI)I = NativeAddTextAlign(long, int)
  nativeAddTextDouble(JII)I = NativeAddTextDouble(long, int, int)
  nativeAddTextFont(JI)I = NativeAddTextFont(long, int)
  nativeAddTextLang(JI)I = NativeAddTextLang(long, int)
  nativeAddTextLineSpace(JJ)I = NativeAddTextLineSpace(long, long)
  nativeAddTextPosition(JJ)I = NativeAddTextPosition(long, long)
  nativeAddTextRotate(JI)I = NativeAddTextRotate(long, int)
  nativeAddTextSize(JJJ)I = NativeAddTextSize(long, long, long)
  nativeAddTextSmooth(JI)I = NativeAddTextSmooth(long, int)
  nativeAddTextStyle(JIIII)I = NativeAddTextStyle(long, int, int, int, int)
  nativeAddTextVPosition(JJ)I = NativeAddTextVPosition(long, long)
  nativeAddVLineBegin(JJI)I = NativeAddVLineBegin(long, long, int)
  nativeAddVLineEnd(JJI)I = NativeAddVLineEnd(long, long, int)
  nativeClearCommandBuffer(J)I = NativeClearCommandBuffer(long)
  nativeOnPtrBatteryLow(Ljava/lang/String;Ljava/lang/String;)V = NativeOnPtrBatteryLow(string, string)
  nativeOnPtrBatteryOk(Ljava/lang/String;Ljava/lang/String;)V = NativeOnPtrBatteryOk(string, string)
  nativeOnPtrBatteryStatusChange(Ljava/lang/String;Ljava/lang/String;I)V = NativeOnPtrBatteryStatusChange(string, string, int)
  nativeOnPtrCoverOk(Ljava/lang/String;Ljava/lang/String;)V = NativeOnPtrCoverOk(string, string)
  nativeOnPtrCoverOpen(Ljava/lang/String;Ljava/lang/String;)V = NativeOnPtrCoverOpen(string, string)
  nativeOnPtrDrawerClosed(Ljava/lang/String;Ljava/lang/String;)V = NativeOnPtrDrawerClosed(string, string)
  nativeOnPtrDrawerOpen(Ljava/lang/String;Ljava/lang/String;)V = NativeOnPtrDrawerOpen(string, string)
  nativeOnPtrOffline(Ljava/lang/String;Ljava/lang/String;)V = NativeOnPtrOffline(string, string)
  nativeOnPtrOnline(Ljava/lang/String;Ljava/lang/String;)V = NativeOnPtrOnline(string, string)
  nativeOnPtrPaperEnd(Ljava/lang/String;Ljava/lang/String;)V = NativeOnPtrPaperEnd(string, string)
  nativeOnPtrPaperNearEnd(Ljava/lang/String;Ljava/lang/String;)V = NativeOnPtrPaperNearEnd(string, string)
  nativeOnPtrPaperOk(Ljava/lang/String;Ljava/lang/String;)V = NativeOnPtrPaperOk(string, string)
  nativeOnPtrPowerOff(Ljava/lang/String;Ljava/lang/String;)V = NativeOnPtrPowerOff(string, string)
  nativeOnPtrReceive(Ljava/lang/String;Ljava/lang/String;IIIILjava/lang/String;)V = NativeOnPtrReceive(string, string, int, int, int, int, string)
  nativeOnPtrStatusChange(Ljava/lang/String;Ljava/lang/String;I)V = NativeOnPtrStatusChange(string, string, int)
  nativeRecovery(J)I = NativeRecovery(long)
  nativeReset(JZ)I = NativeReset(long, bool)
  nativeSendData(JILjava/lang/String;ZZ)I = NativeSendData(long, int, string, bool, bool)
  nativeSetDrawerOpenLevel(JI)I = NativeSetDrawerOpenLevel(long, int)
  nativeSetInterval(JJ)I = NativeSetInterval(long, long)
  nativeStartMonitor(JJ)I = NativeStartMonitor(long, long)
  nativeStopMonitor(J)I = NativeStopMonitor(long)
  outputException(Ljava/lang/String;Ljava/lang/Exception;)V = OutputException(string, Java.Lang.Exception)
  outputLogCallFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogCallFunction(string, params Java.Lang.Object[])
  outputLogEvent(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogEvent(string, params Java.Lang.Object[])
  outputLogReturnFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogReturnFunction(string, params Java.Lang.Object[])
  recover()V = Recover()
  reset()V = Reset()
  sendData()V = SendData()
  sendData(Ljava/lang/String;)V = SendData(string)
  setBatteryLowEventCallback(Lcom/epson/eposdevice/printer/BatteryLowListener;)V = SetBatteryLowEventCallback(Com.Epson.Eposdevice.Printer.IBatteryLowListener)
  setBatteryOkEventCallback(Lcom/epson/eposdevice/printer/BatteryOkListener;)V = SetBatteryOkEventCallback(Com.Epson.Eposdevice.Printer.IBatteryOkListener)
  setBatteryStatusChangeEventCallback(Lcom/epson/eposdevice/printer/BatteryStatusChangeListener;)V = SetBatteryStatusChangeEventCallback(Com.Epson.Eposdevice.Printer.IBatteryStatusChangeListener)
  setCoverOkEventCallback(Lcom/epson/eposdevice/printer/CoverOkListener;)V = SetCoverOkEventCallback(Com.Epson.Eposdevice.Printer.ICoverOkListener)
  setCoverOpenEventCallback(Lcom/epson/eposdevice/printer/CoverOpenListener;)V = SetCoverOpenEventCallback(Com.Epson.Eposdevice.Printer.ICoverOpenListener)
  setDrawerClosedEventCallback(Lcom/epson/eposdevice/printer/DrawerClosedListener;)V = SetDrawerClosedEventCallback(Com.Epson.Eposdevice.Printer.IDrawerClosedListener)
  setDrawerOpenEventCallback(Lcom/epson/eposdevice/printer/DrawerOpenListener;)V = SetDrawerOpenEventCallback(Com.Epson.Eposdevice.Printer.IDrawerOpenListener)
  setOfflineEventCallback(Lcom/epson/eposdevice/printer/OfflineListener;)V = SetOfflineEventCallback(Com.Epson.Eposdevice.Printer.IOfflineListener)
  setOnlineEventCallback(Lcom/epson/eposdevice/printer/OnlineListener;)V = SetOnlineEventCallback(Com.Epson.Eposdevice.Printer.IOnlineListener)
  setPaperEndEventCallback(Lcom/epson/eposdevice/printer/PaperEndListener;)V = SetPaperEndEventCallback(Com.Epson.Eposdevice.Printer.IPaperEndListener)
  setPaperNearEndEventCallback(Lcom/epson/eposdevice/printer/PaperNearEndListener;)V = SetPaperNearEndEventCallback(Com.Epson.Eposdevice.Printer.IPaperNearEndListener)
  setPaperOkEventCallback(Lcom/epson/eposdevice/printer/PaperOkListener;)V = SetPaperOkEventCallback(Com.Epson.Eposdevice.Printer.IPaperOkListener)
  setPowerOffEventCallback(Lcom/epson/eposdevice/printer/PowerOffListener;)V = SetPowerOffEventCallback(Com.Epson.Eposdevice.Printer.IPowerOffListener)
  setReceiveEventCallback(Lcom/epson/eposdevice/printer/ReceiveListener;)V = SetReceiveEventCallback(Com.Epson.Eposdevice.Printer.IReceiveListener)
  setStatusChangeEventCallback(Lcom/epson/eposdevice/printer/StatusChangeListener;)V = SetStatusChangeEventCallback(Com.Epson.Eposdevice.Printer.IStatusChangeListener)
  startMonitor()V = StartMonitor()
  stopMonitor()V = StopMonitor()
com/epson/eposdevice/printer/ReceiveListener = Com.Epson.Eposdevice.Printer.IReceiveListener
  onPtrReceive(Ljava/lang/String;Ljava/lang/String;IIII)V = OnPtrReceive(string, string, int, int, int, int)
com/epson/eposdevice/printer/ReceiveListener = Com.Epson.Eposdevice.Printer.IReceiveListener
  onPtrReceive(Ljava/lang/String;Ljava/lang/String;IIII)V = OnPtrReceive(string, string, int, int, int, int)
com/epson/eposdevice/printer/StatusChangeListener = Com.Epson.Eposdevice.Printer.IStatusChangeListener
  onPtrStatusChange(Ljava/lang/String;Ljava/lang/String;I)V = OnPtrStatusChange(string, string, int)
com/epson/eposdevice/printer/StatusChangeListener = Com.Epson.Eposdevice.Printer.IStatusChangeListener
  onPtrStatusChange(Ljava/lang/String;Ljava/lang/String;I)V = OnPtrStatusChange(string, string, int)
com/epson/eposdevice/ReconnectingListener = Com.Epson.Eposdevice.IReconnectingListener
  onReconnecting(Ljava/lang/String;)V = OnReconnecting(string)
com/epson/eposdevice/ReconnectingListener = Com.Epson.Eposdevice.IReconnectingListener
  onReconnecting(Ljava/lang/String;)V = OnReconnecting(string)
com/epson/eposdevice/ReconnectListener = Com.Epson.Eposdevice.IReconnectListener
  onReconnect(Ljava/lang/String;)V = OnReconnect(string)
com/epson/eposdevice/ReconnectListener = Com.Epson.Eposdevice.IReconnectListener
  onReconnect(Ljava/lang/String;)V = OnReconnect(string)
com/epson/eposdevice/scanner/DataListener = Com.Epson.Eposdevice.Scanner.IDataListener
  onScanData(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = OnScanData(string, string, string)
com/epson/eposdevice/scanner/DataListener = Com.Epson.Eposdevice.Scanner.IDataListener
  onScanData(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = OnScanData(string, string, string)
com/epson/eposdevice/scanner/Scanner = Com.Epson.Eposdevice.Scanner.Scanner
  <init>(J)V = .ctor(long)
  getInnerHandle()J = InnerHandle
  innerDeleteInstance()V = InnerDeleteInstance()
  nativeOnScanData(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = NativeOnScanData(string, string, string)
  outputException(Ljava/lang/String;Ljava/lang/Exception;)V = OutputException(string, Java.Lang.Exception)
  outputLogCallFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogCallFunction(string, params Java.Lang.Object[])
  outputLogEvent(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogEvent(string, params Java.Lang.Object[])
  outputLogReturnFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogReturnFunction(string, params Java.Lang.Object[])
  setDataEventCallback(Lcom/epson/eposdevice/scanner/DataListener;)V = SetDataEventCallback(Com.Epson.Eposdevice.Scanner.IDataListener)
com/epson/eposdevice/scanner/Scanner = Com.Epson.Eposdevice.Scanner.Scanner
  <init>(J)V = .ctor(long)
  getInnerHandle()J = InnerHandle
  innerDeleteInstance()V = InnerDeleteInstance()
  nativeOnScanData(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = NativeOnScanData(string, string, string)
  outputException(Ljava/lang/String;Ljava/lang/Exception;)V = OutputException(string, Java.Lang.Exception)
  outputLogCallFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogCallFunction(string, params Java.Lang.Object[])
  outputLogEvent(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogEvent(string, params Java.Lang.Object[])
  outputLogReturnFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogReturnFunction(string, params Java.Lang.Object[])
  setDataEventCallback(Lcom/epson/eposdevice/scanner/DataListener;)V = SetDataEventCallback(Com.Epson.Eposdevice.Scanner.IDataListener)
com/epson/eposdevice/simpleserial/CommandReplayListener = Com.Epson.Eposdevice.Simpleserial.ICommandReplayListener
  onSimpleSerialCommandReplay(Ljava/lang/String;Ljava/lang/String;[B)V = OnSimpleSerialCommandReplay(string, string, byte[])
com/epson/eposdevice/simpleserial/CommandReplayListener = Com.Epson.Eposdevice.Simpleserial.ICommandReplayListener
  onSimpleSerialCommandReplay(Ljava/lang/String;Ljava/lang/String;[B)V = OnSimpleSerialCommandReplay(string, string, byte[])
com/epson/eposdevice/simpleserial/SimpleSerial = Com.Epson.Eposdevice.Simpleserial.SimpleSerial
  <init>(J)V = .ctor(long)
  getInnerHandle()J = InnerHandle
  checkHandle()V = CheckHandle()
  innerDeleteInstance()V = InnerDeleteInstance()
  nativeOnSimpleSerialCommandReply(Ljava/lang/String;Ljava/lang/String;[B)V = NativeOnSimpleSerialCommandReply(string, string, byte[])
  nativeSscSendCommand(J[B)I = NativeSscSendCommand(long, byte[])
  outputException(Ljava/lang/String;Ljava/lang/Exception;)V = OutputException(string, Java.Lang.Exception)
  outputLogCallFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogCallFunction(string, params Java.Lang.Object[])
  outputLogEvent(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogEvent(string, params Java.Lang.Object[])
  outputLogReturnFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogReturnFunction(string, params Java.Lang.Object[])
  sendCommand([B)V = SendCommand(byte[])
  setCommandReplyEventCallback(Lcom/epson/eposdevice/simpleserial/CommandReplayListener;)V = SetCommandReplyEventCallback(Com.Epson.Eposdevice.Simpleserial.ICommandReplayListener)
com/epson/eposdevice/simpleserial/SimpleSerial = Com.Epson.Eposdevice.Simpleserial.SimpleSerial
  <init>(J)V = .ctor(long)
  getInnerHandle()J = InnerHandle
  checkHandle()V = CheckHandle()
  innerDeleteInstance()V = InnerDeleteInstance()
  nativeOnSimpleSerialCommandReply(Ljava/lang/String;Ljava/lang/String;[B)V = NativeOnSimpleSerialCommandReply(string, string, byte[])
  nativeSscSendCommand(J[B)I = NativeSscSendCommand(long, byte[])
  outputException(Ljava/lang/String;Ljava/lang/Exception;)V = OutputException(string, Java.Lang.Exception)
  outputLogCallFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogCallFunction(string, params Java.Lang.Object[])
  outputLogEvent(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogEvent(string, params Java.Lang.Object[])
  outputLogReturnFunction(Ljava/lang/String;[Ljava/lang/Object;)V = OutputLogReturnFunction(string, params Java.Lang.Object[])
  sendCommand([B)V = SendCommand(byte[])
  setCommandReplyEventCallback(Lcom/epson/eposdevice/simpleserial/CommandReplayListener;)V = SetCommandReplyEventCallback(Com.Epson.Eposdevice.Simpleserial.ICommandReplayListener)
com/epson/eposprint/BatteryLowEventListener = Com.Epson.Eposprint.IBatteryLowEventListener
  onBatteryLowEvent(Ljava/lang/String;)V = OnBatteryLowEvent(string)
com/epson/eposprint/BatteryLowEventListener = Com.Epson.Eposprint.IBatteryLowEventListener
  onBatteryLowEvent(Ljava/lang/String;)V = OnBatteryLowEvent(string)
com/epson/eposprint/BatteryOkEventListener = Com.Epson.Eposprint.IBatteryOkEventListener
  onBatteryOkEvent(Ljava/lang/String;)V = OnBatteryOkEvent(string)
com/epson/eposprint/BatteryOkEventListener = Com.Epson.Eposprint.IBatteryOkEventListener
  onBatteryOkEvent(Ljava/lang/String;)V = OnBatteryOkEvent(string)
com/epson/eposprint/BatteryStatusChangeEventListener = Com.Epson.Eposprint.IBatteryStatusChangeEventListener
  onBatteryStatusChangeEvent(Ljava/lang/String;I)V = OnBatteryStatusChangeEvent(string, int)
com/epson/eposprint/BatteryStatusChangeEventListener = Com.Epson.Eposprint.IBatteryStatusChangeEventListener
  onBatteryStatusChangeEvent(Ljava/lang/String;I)V = OnBatteryStatusChangeEvent(string, int)
com/epson/eposprint/Builder = Com.Epson.Eposprint.Builder
  <init>(Ljava/lang/String;I)V = .ctor(string, int)
  <init>(Ljava/lang/String;ILandroid/content/Context;)V = .ctor(string, int, Android.Content.Context)
  ALIGN_CENTER = AlignCenter
  ALIGN_LEFT = AlignLeft
  ALIGN_RIGHT = AlignRight
  BARCODE_CODABAR = BarcodeCodabar
  BARCODE_CODE128 = BarcodeCode128
  BARCODE_CODE39 = BarcodeCode39
  BARCODE_CODE93 = BarcodeCode93
  BARCODE_EAN13 = BarcodeEan13
  BARCODE_EAN8 = BarcodeEan8
  BARCODE_GS1_128 = BarcodeGs1128
  BARCODE_GS1_DATABAR_EXPANDED = BarcodeGs1DatabarExpanded
  BARCODE_GS1_DATABAR_LIMITED = BarcodeGs1DatabarLimited
  BARCODE_GS1_DATABAR_OMNIDIRECTIONAL = BarcodeGs1DatabarOmnidirectional
  BARCODE_GS1_DATABAR_TRUNCATED = BarcodeGs1DatabarTruncated
  BARCODE_ITF = BarcodeItf
  BARCODE_JAN13 = BarcodeJan13
  BARCODE_JAN8 = BarcodeJan8
  BARCODE_UPC_A = BarcodeUpcA
  BARCODE_UPC_E = BarcodeUpcE
  COLOR_1 = Color1
  COLOR_2 = Color2
  COLOR_3 = Color3
  COLOR_4 = Color4
  COLOR_NONE = ColorNone
  COMPRESS_DEFLATE = CompressDeflate
  COMPRESS_NONE = CompressNone
  CUT_FEED = CutFeed
  CUT_NO_FEED = CutNoFeed
  CUT_RESERVE = CutReserve
  DIRECTION_BOTTOM_TO_TOP = DirectionBottomToTop
  DIRECTION_LEFT_TO_RIGHT = DirectionLeftToRight
  DIRECTION_RIGHT_TO_LEFT = DirectionRightToLeft
  DIRECTION_TOP_TO_BOTTOM = DirectionTopToBottom
  DRAWER_1 = Drawer1
  DRAWER_2 = Drawer2
  FALSE = False
  FEED_CURRENT_TOF = FeedCurrentTof
  FEED_CUTTING = FeedCutting
  FEED_NEXT_TOF = FeedNextTof
  FEED_PEELING = FeedPeeling
  FONT_A = FontA
  FONT_B = FontB
  FONT_C = FontC
  FONT_D = FontD
  FONT_E = FontE
  HALFTONE_DITHER = HalftoneDither
  HALFTONE_ERROR_DIFFUSION = HalftoneErrorDiffusion
  HALFTONE_THRESHOLD = HalftoneThreshold
  HRI_ABOVE = HriAbove
  HRI_BELOW = HriBelow
  HRI_BOTH = HriBoth
  HRI_NONE = HriNone
  LANG_EN = LangEn
  LANG_JA = LangJa
  LANG_KO = LangKo
  LANG_TH = LangTh
  LANG_VI = LangVi
  LANG_ZH_CN = LangZhCn
  LANG_ZH_TW = LangZhTw
  LAYOUT_LABEL = LayoutLabel
  LAYOUT_LABEL_BM = LayoutLabelBm
  LAYOUT_RECEIPT = LayoutReceipt
  LAYOUT_RECEIPT_BM = LayoutReceiptBm
  LEVEL_0 = Level0
  LEVEL_1 = Level1
  LEVEL_2 = Level2
  LEVEL_3 = Level3
  LEVEL_4 = Level4
  LEVEL_5 = Level5
  LEVEL_6 = Level6
  LEVEL_7 = Level7
  LEVEL_8 = Level8
  LEVEL_DEFAULT = LevelDefault
  LEVEL_H = LevelH
  LEVEL_L = LevelL
  LEVEL_M = LevelM
  LEVEL_Q = LevelQ
  LINE_MEDIUM = LineMedium
  LINE_MEDIUM_DOUBLE = LineMediumDouble
  LINE_THICK = LineThick
  LINE_THICK_DOUBLE = LineThickDouble
  LINE_THIN = LineThin
  LINE_THIN_DOUBLE = LineThinDouble
  MODE_GRAY16 = ModeGray16
  MODEL_ANK = ModelAnk
  MODEL_CHINESE = ModelChinese
  MODEL_JAPANESE = ModelJapanese
  MODEL_KOREAN = ModelKorean
  MODEL_SOUTHASIA = ModelSouthasia
  MODEL_TAIWAN = ModelTaiwan
  MODEL_THAI = ModelThai
  MODE_MONO = ModeMono
  PARAM_DEFAULT = ParamDefault
  PARAM_UNSPECIFIED = ParamUnspecified
  PATTERN_1 = Pattern1
  PATTERN_10 = Pattern10
  PATTERN_2 = Pattern2
  PATTERN_3 = Pattern3
  PATTERN_4 = Pattern4
  PATTERN_5 = Pattern5
  PATTERN_6 = Pattern6
  PATTERN_7 = Pattern7
  PATTERN_8 = Pattern8
  PATTERN_9 = Pattern9
  PATTERN_A = PatternA
  PATTERN_B = PatternB
  PATTERN_C = PatternC
  PATTERN_D = PatternD
  PATTERN_E = PatternE
  PATTERN_ERROR = PatternError
  PATTERN_PAPER_END = PatternPaperEnd
  PULSE_100 = Pulse100
  PULSE_200 = Pulse200
  PULSE_300 = Pulse300
  PULSE_400 = Pulse400
  PULSE_500 = Pulse500
  SYMBOL_AZTECCODE_COMPACT = SymbolAzteccodeCompact
  SYMBOL_AZTECCODE_FULLRANGE = SymbolAzteccodeFullrange
  SYMBOL_DATAMATRIX_RECTANGLE_12 = SymbolDatamatrixRectangle12
  SYMBOL_DATAMATRIX_RECTANGLE_16 = SymbolDatamatrixRectangle16
  SYMBOL_DATAMATRIX_RECTANGLE_8 = SymbolDatamatrixRectangle8
  SYMBOL_DATAMATRIX_SQUARE = SymbolDatamatrixSquare
  SYMBOL_GS1_DATABAR_EXPANDED_STACKED = SymbolGs1DatabarExpandedStacked
  SYMBOL_GS1_DATABAR_STACKED = SymbolGs1DatabarStacked
  SYMBOL_GS1_DATABAR_STACKED_OMNIDIRECTIONAL = SymbolGs1DatabarStackedOmnidirectional
  SYMBOL_MAXICODE_MODE_2 = SymbolMaxicodeMode2
  SYMBOL_MAXICODE_MODE_3 = SymbolMaxicodeMode3
  SYMBOL_MAXICODE_MODE_4 = SymbolMaxicodeMode4
  SYMBOL_MAXICODE_MODE_5 = SymbolMaxicodeMode5
  SYMBOL_MAXICODE_MODE_6 = SymbolMaxicodeMode6
  SYMBOL_PDF417_STANDARD = SymbolPdf417Standard
  SYMBOL_PDF417_TRUNCATED = SymbolPdf417Truncated
  SYMBOL_QRCODE_MODEL_1 = SymbolQrcodeModel1
  SYMBOL_QRCODE_MODEL_2 = SymbolQrcodeModel2
  TRUE = True
  addBarcode(Ljava/lang/String;IIIII)V = AddBarcode(string, int, int, int, int, int)
  addCommand([B)V = AddCommand(byte[])
  addCut(I)V = AddCut(int)
  addFeedLine(I)V = AddFeedLine(int)
  addFeedPosition(I)V = AddFeedPosition(int)
  addFeedUnit(I)V = AddFeedUnit(int)
  addHLine(III)V = AddHLine(int, int, int)
  addImage(Landroid/graphics/Bitmap;IIIII)V = AddImage(Android.Graphics.Bitmap, int, int, int, int, int)
  addImage(Landroid/graphics/Bitmap;IIIIIIID)V = AddImage(Android.Graphics.Bitmap, int, int, int, int, int, int, int, double)
  addImage(Landroid/graphics/Bitmap;IIIIIIIDI)V = AddImage(Android.Graphics.Bitmap, int, int, int, int, int, int, int, double, int)
  addLayout(IIIIIII)V = AddLayout(int, int, int, int, int, int, int)
  addLogo(II)V = AddLogo(int, int)
  addPageArea(IIII)V = AddPageArea(int, int, int, int)
  addPageBegin()V = AddPageBegin()
  addPageDirection(I)V = AddPageDirection(int)
  addPageEnd()V = AddPageEnd()
  addPageLine(IIIII)V = AddPageLine(int, int, int, int, int)
  addPagePosition(II)V = AddPagePosition(int, int)
  addPageRectangle(IIIII)V = AddPageRectangle(int, int, int, int, int)
  addPulse(II)V = AddPulse(int, int)
  addSound(II)V = AddSound(int, int)
  addSound(III)V = AddSound(int, int, int)
  addSymbol(Ljava/lang/String;IIIII)V = AddSymbol(string, int, int, int, int, int)
  addText(Ljava/lang/String;)V = AddText(string)
  addTextAlign(I)V = AddTextAlign(int)
  addTextDouble(II)V = AddTextDouble(int, int)
  addTextFont(I)V = AddTextFont(int)
  addTextLang(I)V = AddTextLang(int)
  addTextLineSpace(I)V = AddTextLineSpace(int)
  addTextPosition(I)V = AddTextPosition(int)
  addTextRotate(I)V = AddTextRotate(int)
  addTextSize(II)V = AddTextSize(int, int)
  addTextSmooth(I)V = AddTextSmooth(int)
  addTextStyle(IIII)V = AddTextStyle(int, int, int, int)
  addVLineBegin(II)V = AddVLineBegin(int, int)
  addVLineEnd(II)V = AddVLineEnd(int, int)
  clearCommandBuffer()V = ClearCommandBuffer()
  finalize()V = Finalize()
  getHandle()J = GetHandle()
com/epson/eposprint/Builder = Com.Epson.Eposprint.Builder
  <init>(Ljava/lang/String;I)V = .ctor(string, int)
  <init>(Ljava/lang/String;ILandroid/content/Context;)V = .ctor(string, int, Android.Content.Context)
  ALIGN_CENTER = AlignCenter
  ALIGN_LEFT = AlignLeft
  ALIGN_RIGHT = AlignRight
  BARCODE_CODABAR = BarcodeCodabar
  BARCODE_CODE128 = BarcodeCode128
  BARCODE_CODE39 = BarcodeCode39
  BARCODE_CODE93 = BarcodeCode93
  BARCODE_EAN13 = BarcodeEan13
  BARCODE_EAN8 = BarcodeEan8
  BARCODE_GS1_128 = BarcodeGs1128
  BARCODE_GS1_DATABAR_EXPANDED = BarcodeGs1DatabarExpanded
  BARCODE_GS1_DATABAR_LIMITED = BarcodeGs1DatabarLimited
  BARCODE_GS1_DATABAR_OMNIDIRECTIONAL = BarcodeGs1DatabarOmnidirectional
  BARCODE_GS1_DATABAR_TRUNCATED = BarcodeGs1DatabarTruncated
  BARCODE_ITF = BarcodeItf
  BARCODE_JAN13 = BarcodeJan13
  BARCODE_JAN8 = BarcodeJan8
  BARCODE_UPC_A = BarcodeUpcA
  BARCODE_UPC_E = BarcodeUpcE
  COLOR_1 = Color1
  COLOR_2 = Color2
  COLOR_3 = Color3
  COLOR_4 = Color4
  COLOR_NONE = ColorNone
  COMPRESS_DEFLATE = CompressDeflate
  COMPRESS_NONE = CompressNone
  CUT_FEED = CutFeed
  CUT_NO_FEED = CutNoFeed
  CUT_RESERVE = CutReserve
  DIRECTION_BOTTOM_TO_TOP = DirectionBottomToTop
  DIRECTION_LEFT_TO_RIGHT = DirectionLeftToRight
  DIRECTION_RIGHT_TO_LEFT = DirectionRightToLeft
  DIRECTION_TOP_TO_BOTTOM = DirectionTopToBottom
  DRAWER_1 = Drawer1
  DRAWER_2 = Drawer2
  FALSE = False
  FEED_CURRENT_TOF = FeedCurrentTof
  FEED_CUTTING = FeedCutting
  FEED_NEXT_TOF = FeedNextTof
  FEED_PEELING = FeedPeeling
  FONT_A = FontA
  FONT_B = FontB
  FONT_C = FontC
  FONT_D = FontD
  FONT_E = FontE
  HALFTONE_DITHER = HalftoneDither
  HALFTONE_ERROR_DIFFUSION = HalftoneErrorDiffusion
  HALFTONE_THRESHOLD = HalftoneThreshold
  HRI_ABOVE = HriAbove
  HRI_BELOW = HriBelow
  HRI_BOTH = HriBoth
  HRI_NONE = HriNone
  LANG_EN = LangEn
  LANG_JA = LangJa
  LANG_KO = LangKo
  LANG_TH = LangTh
  LANG_VI = LangVi
  LANG_ZH_CN = LangZhCn
  LANG_ZH_TW = LangZhTw
  LAYOUT_LABEL = LayoutLabel
  LAYOUT_LABEL_BM = LayoutLabelBm
  LAYOUT_RECEIPT = LayoutReceipt
  LAYOUT_RECEIPT_BM = LayoutReceiptBm
  LEVEL_0 = Level0
  LEVEL_1 = Level1
  LEVEL_2 = Level2
  LEVEL_3 = Level3
  LEVEL_4 = Level4
  LEVEL_5 = Level5
  LEVEL_6 = Level6
  LEVEL_7 = Level7
  LEVEL_8 = Level8
  LEVEL_DEFAULT = LevelDefault
  LEVEL_H = LevelH
  LEVEL_L = LevelL
  LEVEL_M = LevelM
  LEVEL_Q = LevelQ
  LINE_MEDIUM = LineMedium
  LINE_MEDIUM_DOUBLE = LineMediumDouble
  LINE_THICK = LineThick
  LINE_THICK_DOUBLE = LineThickDouble
  LINE_THIN = LineThin
  LINE_THIN_DOUBLE = LineThinDouble
  MODE_GRAY16 = ModeGray16
  MODEL_ANK = ModelAnk
  MODEL_CHINESE = ModelChinese
  MODEL_JAPANESE = ModelJapanese
  MODEL_KOREAN = ModelKorean
  MODEL_SOUTHASIA = ModelSouthasia
  MODEL_TAIWAN = ModelTaiwan
  MODEL_THAI = ModelThai
  MODE_MONO = ModeMono
  PARAM_DEFAULT = ParamDefault
  PARAM_UNSPECIFIED = ParamUnspecified
  PATTERN_1 = Pattern1
  PATTERN_10 = Pattern10
  PATTERN_2 = Pattern2
  PATTERN_3 = Pattern3
  PATTERN_4 = Pattern4
  PATTERN_5 = Pattern5
  PATTERN_6 = Pattern6
  PATTERN_7 = Pattern7
  PATTERN_8 = Pattern8
  PATTERN_9 = Pattern9
  PATTERN_A = PatternA
  PATTERN_B = PatternB
  PATTERN_C = PatternC
  PATTERN_D = PatternD
  PATTERN_E = PatternE
  PATTERN_ERROR = PatternError
  PATTERN_PAPER_END = PatternPaperEnd
  PULSE_100 = Pulse100
  PULSE_200 = Pulse200
  PULSE_300 = Pulse300
  PULSE_400 = Pulse400
  PULSE_500 = Pulse500
  SYMBOL_AZTECCODE_COMPACT = SymbolAzteccodeCompact
  SYMBOL_AZTECCODE_FULLRANGE = SymbolAzteccodeFullrange
  SYMBOL_DATAMATRIX_RECTANGLE_12 = SymbolDatamatrixRectangle12
  SYMBOL_DATAMATRIX_RECTANGLE_16 = SymbolDatamatrixRectangle16
  SYMBOL_DATAMATRIX_RECTANGLE_8 = SymbolDatamatrixRectangle8
  SYMBOL_DATAMATRIX_SQUARE = SymbolDatamatrixSquare
  SYMBOL_GS1_DATABAR_EXPANDED_STACKED = SymbolGs1DatabarExpandedStacked
  SYMBOL_GS1_DATABAR_STACKED = SymbolGs1DatabarStacked
  SYMBOL_GS1_DATABAR_STACKED_OMNIDIRECTIONAL = SymbolGs1DatabarStackedOmnidirectional
  SYMBOL_MAXICODE_MODE_2 = SymbolMaxicodeMode2
  SYMBOL_MAXICODE_MODE_3 = SymbolMaxicodeMode3
  SYMBOL_MAXICODE_MODE_4 = SymbolMaxicodeMode4
  SYMBOL_MAXICODE_MODE_5 = SymbolMaxicodeMode5
  SYMBOL_MAXICODE_MODE_6 = SymbolMaxicodeMode6
  SYMBOL_PDF417_STANDARD = SymbolPdf417Standard
  SYMBOL_PDF417_TRUNCATED = SymbolPdf417Truncated
  SYMBOL_QRCODE_MODEL_1 = SymbolQrcodeModel1
  SYMBOL_QRCODE_MODEL_2 = SymbolQrcodeModel2
  TRUE = True
  addBarcode(Ljava/lang/String;IIIII)V = AddBarcode(string, int, int, int, int, int)
  addCommand([B)V = AddCommand(byte[])
  addCut(I)V = AddCut(int)
  addFeedLine(I)V = AddFeedLine(int)
  addFeedPosition(I)V = AddFeedPosition(int)
  addFeedUnit(I)V = AddFeedUnit(int)
  addHLine(III)V = AddHLine(int, int, int)
  addImage(Landroid/graphics/Bitmap;IIIII)V = AddImage(Android.Graphics.Bitmap, int, int, int, int, int)
  addImage(Landroid/graphics/Bitmap;IIIIIIID)V = AddImage(Android.Graphics.Bitmap, int, int, int, int, int, int, int, double)
  addImage(Landroid/graphics/Bitmap;IIIIIIIDI)V = AddImage(Android.Graphics.Bitmap, int, int, int, int, int, int, int, double, int)
  addLayout(IIIIIII)V = AddLayout(int, int, int, int, int, int, int)
  addLogo(II)V = AddLogo(int, int)
  addPageArea(IIII)V = AddPageArea(int, int, int, int)
  addPageBegin()V = AddPageBegin()
  addPageDirection(I)V = AddPageDirection(int)
  addPageEnd()V = AddPageEnd()
  addPageLine(IIIII)V = AddPageLine(int, int, int, int, int)
  addPagePosition(II)V = AddPagePosition(int, int)
  addPageRectangle(IIIII)V = AddPageRectangle(int, int, int, int, int)
  addPulse(II)V = AddPulse(int, int)
  addSound(II)V = AddSound(int, int)
  addSound(III)V = AddSound(int, int, int)
  addSymbol(Ljava/lang/String;IIIII)V = AddSymbol(string, int, int, int, int, int)
  addText(Ljava/lang/String;)V = AddText(string)
  addTextAlign(I)V = AddTextAlign(int)
  addTextDouble(II)V = AddTextDouble(int, int)
  addTextFont(I)V = AddTextFont(int)
  addTextLang(I)V = AddTextLang(int)
  addTextLineSpace(I)V = AddTextLineSpace(int)
  addTextPosition(I)V = AddTextPosition(int)
  addTextRotate(I)V = AddTextRotate(int)
  addTextSize(II)V = AddTextSize(int, int)
  addTextSmooth(I)V = AddTextSmooth(int)
  addTextStyle(IIII)V = AddTextStyle(int, int, int, int)
  addVLineBegin(II)V = AddVLineBegin(int, int)
  addVLineEnd(II)V = AddVLineEnd(int, int)
  clearCommandBuffer()V = ClearCommandBuffer()
  getHandle()J = GetHandle()
com/epson/eposprint/CoverOkEventListener = Com.Epson.Eposprint.ICoverOkEventListener
  onCoverOkEvent(Ljava/lang/String;)V = OnCoverOkEvent(string)
com/epson/eposprint/CoverOkEventListener = Com.Epson.Eposprint.ICoverOkEventListener
  onCoverOkEvent(Ljava/lang/String;)V = OnCoverOkEvent(string)
com/epson/eposprint/CoverOpenEventListener = Com.Epson.Eposprint.ICoverOpenEventListener
  onCoverOpenEvent(Ljava/lang/String;)V = OnCoverOpenEvent(string)
com/epson/eposprint/CoverOpenEventListener = Com.Epson.Eposprint.ICoverOpenEventListener
  onCoverOpenEvent(Ljava/lang/String;)V = OnCoverOpenEvent(string)
com/epson/eposprint/DrawerClosedEventListener = Com.Epson.Eposprint.IDrawerClosedEventListener
  onDrawerClosedEvent(Ljava/lang/String;)V = OnDrawerClosedEvent(string)
com/epson/eposprint/DrawerClosedEventListener = Com.Epson.Eposprint.IDrawerClosedEventListener
  onDrawerClosedEvent(Ljava/lang/String;)V = OnDrawerClosedEvent(string)
com/epson/eposprint/DrawerOpenEventListener = Com.Epson.Eposprint.IDrawerOpenEventListener
  onDrawerOpenEvent(Ljava/lang/String;)V = OnDrawerOpenEvent(string)
com/epson/eposprint/DrawerOpenEventListener = Com.Epson.Eposprint.IDrawerOpenEventListener
  onDrawerOpenEvent(Ljava/lang/String;)V = OnDrawerOpenEvent(string)
com/epson/eposprint/EposException = Com.Epson.Eposprint.EposException
  <init>(I)V = .ctor(int)
  <init>(II)V = .ctor(int, int)
  <init>(III)V = .ctor(int, int, int)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  ERR_CONNECT = ErrConnect
  ERR_FAILURE = ErrFailure
  ERR_ILLEGAL = ErrIllegal
  ERR_MEMORY = ErrMemory
  ERR_OFF_LINE = ErrOffLine
  ERR_OPEN = ErrOpen
  ERR_PARAM = ErrParam
  ERR_PROCESSING = ErrProcessing
  ERR_TIMEOUT = ErrTimeout
  ERR_UNSUPPORTED = ErrUnsupported
  SUCCESS = Success
  getBatteryStatus()I = BatteryStatus
  getErrorStatus()I = ErrorStatus
  getPrinterStatus()I = PrinterStatus
com/epson/eposprint/EposException = Com.Epson.Eposprint.EposException
  <init>(I)V = .ctor(int)
  <init>(II)V = .ctor(int, int)
  <init>(III)V = .ctor(int, int, int)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  ERR_CONNECT = ErrConnect
  ERR_FAILURE = ErrFailure
  ERR_ILLEGAL = ErrIllegal
  ERR_MEMORY = ErrMemory
  ERR_OFF_LINE = ErrOffLine
  ERR_OPEN = ErrOpen
  ERR_PARAM = ErrParam
  ERR_PROCESSING = ErrProcessing
  ERR_TIMEOUT = ErrTimeout
  ERR_UNSUPPORTED = ErrUnsupported
  SUCCESS = Success
  getBatteryStatus()I = BatteryStatus
  getErrorStatus()I = ErrorStatus
  getPrinterStatus()I = PrinterStatus
com/epson/eposprint/Log = Com.Epson.Eposprint.Log
  <init>()V = .ctor()
  LOG_DISABLE = LogDisable
  LOG_LOW = LogLow
  LOG_PERMANENT = LogPermanent
  LOG_STORAGE = LogStorage
  LOG_TCP = LogTcp
  LOG_TEMPORARY = LogTemporary
  SDK_NAME = SdkName
  SDK_VERSION = SdkVersion
  setLogSettings(Landroid/content/Context;IILjava/lang/String;III)V = SetLogSettings(Android.Content.Context, int, int, string, int, int, int)
com/epson/eposprint/Log = Com.Epson.Eposprint.Log
  <init>()V = .ctor()
  LOG_DISABLE = LogDisable
  LOG_LOW = LogLow
  LOG_PERMANENT = LogPermanent
  LOG_STORAGE = LogStorage
  LOG_TCP = LogTcp
  LOG_TEMPORARY = LogTemporary
  SDK_NAME = SdkName
  SDK_VERSION = SdkVersion
  setLogSettings(Landroid/content/Context;IILjava/lang/String;III)V = SetLogSettings(Android.Content.Context, int, int, string, int, int, int)
com/epson/eposprint/OfflineEventListener = Com.Epson.Eposprint.IOfflineEventListener
  onOfflineEvent(Ljava/lang/String;)V = OnOfflineEvent(string)
com/epson/eposprint/OfflineEventListener = Com.Epson.Eposprint.IOfflineEventListener
  onOfflineEvent(Ljava/lang/String;)V = OnOfflineEvent(string)
com/epson/eposprint/OnlineEventListener = Com.Epson.Eposprint.IOnlineEventListener
  onOnlineEvent(Ljava/lang/String;)V = OnOnlineEvent(string)
com/epson/eposprint/OnlineEventListener = Com.Epson.Eposprint.IOnlineEventListener
  onOnlineEvent(Ljava/lang/String;)V = OnOnlineEvent(string)
com/epson/eposprint/PaperEndEventListener = Com.Epson.Eposprint.IPaperEndEventListener
  onPaperEndEvent(Ljava/lang/String;)V = OnPaperEndEvent(string)
com/epson/eposprint/PaperEndEventListener = Com.Epson.Eposprint.IPaperEndEventListener
  onPaperEndEvent(Ljava/lang/String;)V = OnPaperEndEvent(string)
com/epson/eposprint/PaperNearEndEventListener = Com.Epson.Eposprint.IPaperNearEndEventListener
  onPaperNearEndEvent(Ljava/lang/String;)V = OnPaperNearEndEvent(string)
com/epson/eposprint/PaperNearEndEventListener = Com.Epson.Eposprint.IPaperNearEndEventListener
  onPaperNearEndEvent(Ljava/lang/String;)V = OnPaperNearEndEvent(string)
com/epson/eposprint/PaperOkEventListener = Com.Epson.Eposprint.IPaperOkEventListener
  onPaperOkEvent(Ljava/lang/String;)V = OnPaperOkEvent(string)
com/epson/eposprint/PaperOkEventListener = Com.Epson.Eposprint.IPaperOkEventListener
  onPaperOkEvent(Ljava/lang/String;)V = OnPaperOkEvent(string)
com/epson/eposprint/PowerOffEventListener = Com.Epson.Eposprint.IPowerOffEventListener
  onPowerOffEvent(Ljava/lang/String;)V = OnPowerOffEvent(string)
com/epson/eposprint/PowerOffEventListener = Com.Epson.Eposprint.IPowerOffEventListener
  onPowerOffEvent(Ljava/lang/String;)V = OnPowerOffEvent(string)
com/epson/eposprint/Print = Com.Epson.Eposprint.Print
  <init>()V = .ctor()
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  DEVTYPE_BLUETOOTH = DevtypeBluetooth
  DEVTYPE_TCP = DevtypeTcp
  DEVTYPE_USB = DevtypeUsb
  FALSE = False
  PARAM_DEFAULT = ParamDefault
  PARAM_UNSPECIFIED = ParamUnspecified
  ST_AUTOCUTTER_ERR = StAutocutterErr
  ST_AUTORECOVER_ERR = StAutorecoverErr
  ST_BATTERY_OFFLINE = StBatteryOffline
  ST_BATTERY_OVERHEAT = StBatteryOverheat
  ST_BUZZER = StBuzzer
  ST_COVER_OPEN = StCoverOpen
  ST_DRAWER_KICK = StDrawerKick
  ST_HEAD_OVERHEAT = StHeadOverheat
  ST_MECHANICAL_ERR = StMechanicalErr
  ST_MOTOR_OVERHEAT = StMotorOverheat
  ST_NO_RESPONSE = StNoResponse
  ST_OFF_LINE = StOffLine
  ST_PANEL_SWITCH = StPanelSwitch
  ST_PAPER_FEED = StPaperFeed
  ST_PRINT_SUCCESS = StPrintSuccess
  ST_RECEIPT_END = StReceiptEnd
  ST_RECEIPT_NEAR_END = StReceiptNearEnd
  ST_UNRECOVER_ERR = StUnrecoverErr
  ST_WAIT_ON_LINE = StWaitOnLine
  ST_WRONG_PAPER = StWrongPaper
  TRUE = True
  beginTransaction()V = BeginTransaction()
  closePrinter()V = ClosePrinter()
  endTransaction()V = EndTransaction()
  finalize()V = Finalize()
  getStatus([I[I)V = GetStatus(int[], int[])
  openPrinter(ILjava/lang/String;)V = OpenPrinter(int, string)
  openPrinter(ILjava/lang/String;II)V = OpenPrinter(int, string, int, int)
  openPrinter(ILjava/lang/String;III)V = OpenPrinter(int, string, int, int, int)
  sendData(Lcom/epson/eposprint/Builder;I[I)V = SendData(Com.Epson.Eposprint.Builder, int, int[])
  sendData(Lcom/epson/eposprint/Builder;I[I[I)V = SendData(Com.Epson.Eposprint.Builder, int, int[], int[])
  setBatteryLowEventCallback(Lcom/epson/eposprint/BatteryLowEventListener;)V = SetBatteryLowEventCallback(Com.Epson.Eposprint.IBatteryLowEventListener)
  setBatteryOkEventCallback(Lcom/epson/eposprint/BatteryOkEventListener;)V = SetBatteryOkEventCallback(Com.Epson.Eposprint.IBatteryOkEventListener)
  setBatteryStatusChangeEventCallback(Lcom/epson/eposprint/BatteryStatusChangeEventListener;)V = SetBatteryStatusChangeEventCallback(Com.Epson.Eposprint.IBatteryStatusChangeEventListener)
  setCoverOkEventCallback(Lcom/epson/eposprint/CoverOkEventListener;)V = SetCoverOkEventCallback(Com.Epson.Eposprint.ICoverOkEventListener)
  setCoverOpenEventCallback(Lcom/epson/eposprint/CoverOpenEventListener;)V = SetCoverOpenEventCallback(Com.Epson.Eposprint.ICoverOpenEventListener)
  setDrawerClosedEventCallback(Lcom/epson/eposprint/DrawerClosedEventListener;)V = SetDrawerClosedEventCallback(Com.Epson.Eposprint.IDrawerClosedEventListener)
  setDrawerOpenEventCallback(Lcom/epson/eposprint/DrawerOpenEventListener;)V = SetDrawerOpenEventCallback(Com.Epson.Eposprint.IDrawerOpenEventListener)
  setOfflineEventCallback(Lcom/epson/eposprint/OfflineEventListener;)V = SetOfflineEventCallback(Com.Epson.Eposprint.IOfflineEventListener)
  setOnlineEventCallback(Lcom/epson/eposprint/OnlineEventListener;)V = SetOnlineEventCallback(Com.Epson.Eposprint.IOnlineEventListener)
  setPaperEndEventCallback(Lcom/epson/eposprint/PaperEndEventListener;)V = SetPaperEndEventCallback(Com.Epson.Eposprint.IPaperEndEventListener)
  setPaperNearEndEventCallback(Lcom/epson/eposprint/PaperNearEndEventListener;)V = SetPaperNearEndEventCallback(Com.Epson.Eposprint.IPaperNearEndEventListener)
  setPaperOkEventCallback(Lcom/epson/eposprint/PaperOkEventListener;)V = SetPaperOkEventCallback(Com.Epson.Eposprint.IPaperOkEventListener)
  setPowerOffEventCallback(Lcom/epson/eposprint/PowerOffEventListener;)V = SetPowerOffEventCallback(Com.Epson.Eposprint.IPowerOffEventListener)
  setStatusChangeEventCallback(Lcom/epson/eposprint/StatusChangeEventListener;)V = SetStatusChangeEventCallback(Com.Epson.Eposprint.IStatusChangeEventListener)
com/epson/eposprint/Print = Com.Epson.Eposprint.Print
  <init>()V = .ctor()
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  DEVTYPE_BLUETOOTH = DevtypeBluetooth
  DEVTYPE_TCP = DevtypeTcp
  DEVTYPE_USB = DevtypeUsb
  FALSE = False
  PARAM_DEFAULT = ParamDefault
  PARAM_UNSPECIFIED = ParamUnspecified
  ST_AUTOCUTTER_ERR = StAutocutterErr
  ST_AUTORECOVER_ERR = StAutorecoverErr
  ST_BATTERY_OFFLINE = StBatteryOffline
  ST_BATTERY_OVERHEAT = StBatteryOverheat
  ST_BUZZER = StBuzzer
  ST_COVER_OPEN = StCoverOpen
  ST_DRAWER_KICK = StDrawerKick
  ST_HEAD_OVERHEAT = StHeadOverheat
  ST_MECHANICAL_ERR = StMechanicalErr
  ST_MOTOR_OVERHEAT = StMotorOverheat
  ST_NO_RESPONSE = StNoResponse
  ST_OFF_LINE = StOffLine
  ST_PANEL_SWITCH = StPanelSwitch
  ST_PAPER_FEED = StPaperFeed
  ST_PRINT_SUCCESS = StPrintSuccess
  ST_RECEIPT_END = StReceiptEnd
  ST_RECEIPT_NEAR_END = StReceiptNearEnd
  ST_UNRECOVER_ERR = StUnrecoverErr
  ST_WAIT_ON_LINE = StWaitOnLine
  ST_WRONG_PAPER = StWrongPaper
  TRUE = True
  beginTransaction()V = BeginTransaction()
  closePrinter()V = ClosePrinter()
  endTransaction()V = EndTransaction()
  getStatus([I[I)V = GetStatus(int[], int[])
  openPrinter(ILjava/lang/String;)V = OpenPrinter(int, string)
  openPrinter(ILjava/lang/String;II)V = OpenPrinter(int, string, int, int)
  openPrinter(ILjava/lang/String;III)V = OpenPrinter(int, string, int, int, int)
  sendData(Lcom/epson/eposprint/Builder;I[I)V = SendData(Com.Epson.Eposprint.Builder, int, int[])
  sendData(Lcom/epson/eposprint/Builder;I[I[I)V = SendData(Com.Epson.Eposprint.Builder, int, int[], int[])
  setBatteryLowEventCallback(Lcom/epson/eposprint/BatteryLowEventListener;)V = SetBatteryLowEventCallback(Com.Epson.Eposprint.IBatteryLowEventListener)
  setBatteryOkEventCallback(Lcom/epson/eposprint/BatteryOkEventListener;)V = SetBatteryOkEventCallback(Com.Epson.Eposprint.IBatteryOkEventListener)
  setBatteryStatusChangeEventCallback(Lcom/epson/eposprint/BatteryStatusChangeEventListener;)V = SetBatteryStatusChangeEventCallback(Com.Epson.Eposprint.IBatteryStatusChangeEventListener)
  setCoverOkEventCallback(Lcom/epson/eposprint/CoverOkEventListener;)V = SetCoverOkEventCallback(Com.Epson.Eposprint.ICoverOkEventListener)
  setCoverOpenEventCallback(Lcom/epson/eposprint/CoverOpenEventListener;)V = SetCoverOpenEventCallback(Com.Epson.Eposprint.ICoverOpenEventListener)
  setDrawerClosedEventCallback(Lcom/epson/eposprint/DrawerClosedEventListener;)V = SetDrawerClosedEventCallback(Com.Epson.Eposprint.IDrawerClosedEventListener)
  setDrawerOpenEventCallback(Lcom/epson/eposprint/DrawerOpenEventListener;)V = SetDrawerOpenEventCallback(Com.Epson.Eposprint.IDrawerOpenEventListener)
  setOfflineEventCallback(Lcom/epson/eposprint/OfflineEventListener;)V = SetOfflineEventCallback(Com.Epson.Eposprint.IOfflineEventListener)
  setOnlineEventCallback(Lcom/epson/eposprint/OnlineEventListener;)V = SetOnlineEventCallback(Com.Epson.Eposprint.IOnlineEventListener)
  setPaperEndEventCallback(Lcom/epson/eposprint/PaperEndEventListener;)V = SetPaperEndEventCallback(Com.Epson.Eposprint.IPaperEndEventListener)
  setPaperNearEndEventCallback(Lcom/epson/eposprint/PaperNearEndEventListener;)V = SetPaperNearEndEventCallback(Com.Epson.Eposprint.IPaperNearEndEventListener)
  setPaperOkEventCallback(Lcom/epson/eposprint/PaperOkEventListener;)V = SetPaperOkEventCallback(Com.Epson.Eposprint.IPaperOkEventListener)
  setPowerOffEventCallback(Lcom/epson/eposprint/PowerOffEventListener;)V = SetPowerOffEventCallback(Com.Epson.Eposprint.IPowerOffEventListener)
  setStatusChangeEventCallback(Lcom/epson/eposprint/StatusChangeEventListener;)V = SetStatusChangeEventCallback(Com.Epson.Eposprint.IStatusChangeEventListener)
com/epson/eposprint/StatusChangeEventListener = Com.Epson.Eposprint.IStatusChangeEventListener
  onStatusChangeEvent(Ljava/lang/String;I)V = OnStatusChangeEvent(string, int)
com/epson/eposprint/StatusChangeEventListener = Com.Epson.Eposprint.IStatusChangeEventListener
  onStatusChangeEvent(Ljava/lang/String;I)V = OnStatusChangeEvent(string, int)
com/epson/epsonio/ble/AbstractEpsonBleIoChip = Com.Epson.Epsonio.Ble.AbstractEpsonBleIoChip
  <init>()V = .ctor()
  isPowerOn()Z = IsPowerOn
  close()Z = Close()
  open(Landroid/content/Context;Ljava/lang/String;I)I = Open(Android.Content.Context, string, int)
  read([BIII[I)I = Read(byte[], int, int, int, int[])
  write([BIII[I)I = Write(byte[], int, int, int, int[])
com/epson/epsonio/ble/AbstractEpsonBleIoChip = Com.Epson.Epsonio.Ble.AbstractEpsonBleIoChip
  <init>()V = .ctor()
  isPowerOn()Z = IsPowerOn
  close()Z = Close()
  open(Landroid/content/Context;Ljava/lang/String;I)I = Open(Android.Content.Context, string, int)
  read([BIII[I)I = Read(byte[], int, int, int, int[])
  write([BIII[I)I = Write(byte[], int, int, int, int[])
com/epson/epsonio/ble/BleScannerForConnection = Com.Epson.Epsonio.Ble.BleScannerForConnection
  <init>()V = .ctor()
  getEpsonServiceUuid(Landroid/content/Context;Ljava/lang/String;I)Ljava/util/UUID; = GetEpsonServiceUuid(Android.Content.Context, string, int)
com/epson/epsonio/ble/BleScannerForConnection = Com.Epson.Epsonio.Ble.BleScannerForConnection
  <init>()V = .ctor()
  getEpsonServiceUuid(Landroid/content/Context;Ljava/lang/String;I)Ljava/util/UUID; = GetEpsonServiceUuid(Android.Content.Context, string, int)
com/epson/epsonio/ble/DevBle = Com.Epson.Epsonio.Ble.DevBle
  <init>()V = .ctor()
  FALSE = False
  mClassOutputLog = MClassOutputLog
  mOutputLogInfoMethod = MOutputLogInfoMethod
  TRUE = True
  getResult([II)[Lcom/epson/epsonio/DeviceInfo; = GetResult(int[], int)
  initializeOutputLogFunctions()V = InitializeOutputLogFunctions()
  outputLogInfo([Ljava/lang/Object;)V = OutputLogInfo(params Java.Lang.Object[])
  start(Landroid/content/Context;ILjava/lang/String;I)I = Start(Android.Content.Context, int, string, int)
  stop()I = Stop()
com/epson/epsonio/ble/DevBle = Com.Epson.Epsonio.Ble.DevBle
  <init>()V = .ctor()
  FALSE = False
  mClassOutputLog = MClassOutputLog
  mOutputLogInfoMethod = MOutputLogInfoMethod
  TRUE = True
  getResult([II)[Lcom/epson/epsonio/DeviceInfo; = GetResult(int[], int)
  initializeOutputLogFunctions()V = InitializeOutputLogFunctions()
  outputLogInfo([Ljava/lang/Object;)V = OutputLogInfo(params Java.Lang.Object[])
  start(Landroid/content/Context;ILjava/lang/String;I)I = Start(Android.Content.Context, int, string, int)
  stop()I = Stop()
com/epson/epsonio/ble/EpsonBleIoChipFactory = Com.Epson.Epsonio.Ble.EpsonBleIoChipFactory
  <init>()V = .ctor()
  getBleDevice(Ljava/util/UUID;)Lcom/epson/epsonio/ble/AbstractEpsonBleIoChip; = GetBleDevice(Java.Util.UUID)
com/epson/epsonio/ble/EpsonBleIoChipFactory = Com.Epson.Epsonio.Ble.EpsonBleIoChipFactory
  <init>()V = .ctor()
  getBleDevice(Ljava/util/UUID;)Lcom/epson/epsonio/ble/AbstractEpsonBleIoChip; = GetBleDevice(Java.Util.UUID)
com/epson/epsonio/ble/EpsonBleIoChipRn4678 = Com.Epson.Epsonio.Ble.EpsonBleIoChipRn4678
  <init>()V = .ctor()
  isPowerOn()Z = IsPowerOn
  close()Z = Close()
  open(Landroid/content/Context;Ljava/lang/String;I)I = Open(Android.Content.Context, string, int)
  read([BIII[I)I = Read(byte[], int, int, int, int[])
  write([BIII[I)I = Write(byte[], int, int, int, int[])
com/epson/epsonio/ble/EpsonBleIoChipRn4678 = Com.Epson.Epsonio.Ble.EpsonBleIoChipRn4678
  <init>()V = .ctor()
com/epson/epsonio/ble/NetBle = Com.Epson.Epsonio.Ble.NetBle
  <init>()V = .ctor()
  close(I)I = Close(int)
  isPowerOn(I)Z = IsPowerOn(int)
  open(Landroid/content/Context;Ljava/lang/String;[II)I = Open(Android.Content.Context, string, int[], int)
  read(I[BIII[I)I = Read(int, byte[], int, int, int, int[])
  write(I[BIII[I)I = Write(int, byte[], int, int, int, int[])
com/epson/epsonio/ble/NetBle = Com.Epson.Epsonio.Ble.NetBle
  <init>()V = .ctor()
  close(I)I = Close(int)
  isPowerOn(I)Z = IsPowerOn(int)
  open(Landroid/content/Context;Ljava/lang/String;[II)I = Open(Android.Content.Context, string, int[], int)
  read(I[BIII[I)I = Read(int, byte[], int, int, int, int[])
  write(I[BIII[I)I = Write(int, byte[], int, int, int, int[])
com/epson/epsonio/ble/UuidDefinitions = Com.Epson.Epsonio.Ble.UuidDefinitions
  <init>()V = .ctor()
  DESCRIPTOR_UUID = DescriptorUuid
  epsonChipUuidList = EpsonChipUuidList
  RN4678_CHIP_IDENTIFIER = Rn4678ChipIdentifier
com/epson/epsonio/ble/UuidDefinitions = Com.Epson.Epsonio.Ble.UuidDefinitions
  <init>()V = .ctor()
  DESCRIPTOR_UUID = DescriptorUuid
  epsonChipUuidList = EpsonChipUuidList
  RN4678_CHIP_IDENTIFIER = Rn4678ChipIdentifier
com/epson/epsonio/bluetooth/AdapterHandler = Com.Epson.Epsonio.Bluetooth.AdapterHandler
  <init>()V = .ctor()
  getAdapter(Landroid/content/Context;)Landroid/bluetooth/BluetoothAdapter; = GetAdapter(Android.Content.Context)
  handleMessage(Landroid/os/Message;)V = HandleMessage(Android.OS.Message)
com/epson/epsonio/bluetooth/AdapterHandler = Com.Epson.Epsonio.Bluetooth.AdapterHandler
  <init>()V = .ctor()
  getAdapter(Landroid/content/Context;)Landroid/bluetooth/BluetoothAdapter; = GetAdapter(Android.Content.Context)
com/epson/epsonio/bluetooth/DevBt = Com.Epson.Epsonio.Bluetooth.DevBt
  <init>()V = .ctor()
  FALSE = False
  mClassOutputLog = MClassOutputLog
  mOutputLogInfoMethod = MOutputLogInfoMethod
  TRUE = True
  getResult([II)[Lcom/epson/epsonio/DeviceInfo; = GetResult(int[], int)
  initializeOuputLogFunctions()V = InitializeOuputLogFunctions()
  outputLogInfo([Ljava/lang/Object;)V = OutputLogInfo(params Java.Lang.Object[])
  start(Landroid/content/Context;ILjava/lang/String;I)I = Start(Android.Content.Context, int, string, int)
  stop()I = Stop()
com/epson/epsonio/bluetooth/DevBt = Com.Epson.Epsonio.Bluetooth.DevBt
  <init>()V = .ctor()
  FALSE = False
  mClassOutputLog = MClassOutputLog
  mOutputLogInfoMethod = MOutputLogInfoMethod
  TRUE = True
  getResult([II)[Lcom/epson/epsonio/DeviceInfo; = GetResult(int[], int)
  initializeOuputLogFunctions()V = InitializeOuputLogFunctions()
  outputLogInfo([Ljava/lang/Object;)V = OutputLogInfo(params Java.Lang.Object[])
  start(Landroid/content/Context;ILjava/lang/String;I)I = Start(Android.Content.Context, int, string, int)
  stop()I = Stop()
com/epson/epsonio/bluetooth/NetBt = Com.Epson.Epsonio.Bluetooth.NetBt
  <init>()V = .ctor()
  close(I)I = Close(int)
  kill(I)I = Kill(int)
  open(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;[I)I = Open(Android.Content.Context, string, string, int[])
  read(I[BIII[I)I = Read(int, byte[], int, int, int, int[])
  write(I[BIII[I)I = Write(int, byte[], int, int, int, int[])
com/epson/epsonio/bluetooth/NetBt = Com.Epson.Epsonio.Bluetooth.NetBt
  <init>()V = .ctor()
  close(I)I = Close(int)
  kill(I)I = Kill(int)
  open(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;[I)I = Open(Android.Content.Context, string, string, int[])
  read(I[BIII[I)I = Read(int, byte[], int, int, int, int[])
  write(I[BIII[I)I = Write(int, byte[], int, int, int, int[])
com/epson/epsonio/DeviceInfo = Com.Epson.Epsonio.DeviceInfo
  <init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(int, string, string, string, string)
  getDeviceName()Ljava/lang/String; = DeviceName
  getDeviceType()I = DeviceType
  getIpAddress()Ljava/lang/String; = IpAddress
  getMacAddress()Ljava/lang/String; = MacAddress
  getPrinterName()Ljava/lang/String; = PrinterName
com/epson/epsonio/DeviceInfo = Com.Epson.Epsonio.DeviceInfo
  <init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(int, string, string, string, string)
  getDeviceName()Ljava/lang/String; = DeviceName
  getDeviceType()I = DeviceType
  getIpAddress()Ljava/lang/String; = IpAddress
  getMacAddress()Ljava/lang/String; = MacAddress
  getPrinterName()Ljava/lang/String; = PrinterName
com/epson/epsonio/DevType = Com.Epson.Epsonio.DevType
  <init>()V = .ctor()
  ANY = Any
  BLUETOOTH = Bluetooth
  BLUETOOTH_LE = BluetoothLe
  NONE = None
  TCP = Tcp
  USB = Usb
com/epson/epsonio/DevType = Com.Epson.Epsonio.DevType
  <init>()V = .ctor()
  ANY = Any
  BLUETOOTH = Bluetooth
  BLUETOOTH_LE = BluetoothLe
  NONE = None
  TCP = Tcp
  USB = Usb
com/epson/epsonio/EpsonIo = Com.Epson.Epsonio.EpsonIo
  <init>()V = .ctor()
  close()V = Close()
  finalize()V = Finalize()
  open(ILjava/lang/String;Ljava/lang/String;)V = Open(int, string, string)
  open(ILjava/lang/String;Ljava/lang/String;Landroid/content/Context;)V = Open(int, string, string, Android.Content.Context)
  read([BIII)I = Read(byte[], int, int, int)
  write([BIII)I = Write(byte[], int, int, int)
com/epson/epsonio/EpsonIo = Com.Epson.Epsonio.EpsonIo
  <init>()V = .ctor()
  close()V = Close()
  open(ILjava/lang/String;Ljava/lang/String;)V = Open(int, string, string)
  open(ILjava/lang/String;Ljava/lang/String;Landroid/content/Context;)V = Open(int, string, string, Android.Content.Context)
  read([BIII)I = Read(byte[], int, int, int)
  write([BIII)I = Write(byte[], int, int, int)
com/epson/epsonio/EpsonIoException = Com.Epson.Epsonio.EpsonIoException
  <init>(I)V = .ctor(int)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  getStatus()I = Status
  setStatus(I)V = Status
com/epson/epsonio/EpsonIoException = Com.Epson.Epsonio.EpsonIoException
  <init>(I)V = .ctor(int)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  getStatus()I = Status
  setStatus(I)V = Status
com/epson/epsonio/FilterOption = Com.Epson.Epsonio.FilterOption
  <init>()V = .ctor()
  FILTER_NAME = FilterName
  FILTER_NONE = FilterNone
  PARAM_DEFAULT = ParamDefault
com/epson/epsonio/FilterOption = Com.Epson.Epsonio.FilterOption
  <init>()V = .ctor()
  FILTER_NAME = FilterName
  FILTER_NONE = FilterNone
  PARAM_DEFAULT = ParamDefault
com/epson/epsonio/Finder = Com.Epson.Epsonio.Finder
  <init>()V = .ctor()
  FILTER_NAME = FilterName
  FILTER_NONE = FilterNone
  LIST_MATCH = ListMatch
  LIST_PREFIX = ListPrefix
  PARAM_DEFAULT = ParamDefault
  getDeviceInfoList(I)[Lcom/epson/epsonio/DeviceInfo; = GetDeviceInfoList(int)
  getResult()[Ljava/lang/String; = GetResult()
  isEpson(Ljava/lang/String;)Z = IsEpson(string)
  start(Landroid/content/Context;ILjava/lang/String;)V = Start(Android.Content.Context, int, string)
  stop()V = Stop()
com/epson/epsonio/Finder = Com.Epson.Epsonio.Finder
  <init>()V = .ctor()
  FILTER_NAME = FilterName
  FILTER_NONE = FilterNone
  LIST_MATCH = ListMatch
  LIST_PREFIX = ListPrefix
  PARAM_DEFAULT = ParamDefault
  getDeviceInfoList(I)[Lcom/epson/epsonio/DeviceInfo; = GetDeviceInfoList(int)
  getResult()[Ljava/lang/String; = GetResult()
  isEpson(Ljava/lang/String;)Z = IsEpson(string)
  start(Landroid/content/Context;ILjava/lang/String;)V = Start(Android.Content.Context, int, string)
  stop()V = Stop()
com/epson/epsonio/IoStatus = Com.Epson.Epsonio.IoStatus
  <init>()V = .ctor()
  ERR_CONNECT = ErrConnect
  ERR_FAILURE = ErrFailure
  ERR_ILLEGAL = ErrIllegal
  ERR_MEMORY = ErrMemory
  ERR_OPEN = ErrOpen
  ERR_PARAM = ErrParam
  ERR_PROCESSING = ErrProcessing
  ERR_TIMEOUT = ErrTimeout
  SUCCESS = Success
com/epson/epsonio/IoStatus = Com.Epson.Epsonio.IoStatus
  <init>()V = .ctor()
  ERR_CONNECT = ErrConnect
  ERR_FAILURE = ErrFailure
  ERR_ILLEGAL = ErrIllegal
  ERR_MEMORY = ErrMemory
  ERR_OPEN = ErrOpen
  ERR_PARAM = ErrParam
  ERR_PROCESSING = ErrProcessing
  ERR_TIMEOUT = ErrTimeout
  SUCCESS = Success
com/epson/epsonio/NetIFInfo = Com.Epson.Epsonio.NetIFInfo
  <init>()V = .ctor()
  createNetworkInterfaceArray([Ljava/net/NetworkInterface;I)I = CreateNetworkInterfaceArray(Java.Net.NetworkInterface[], int)
  getMyAddress(Ljava/lang/String;I)Ljava/lang/String; = GetMyAddress(string, int)
  getNetInfoList(I)[Lcom/epson/epsonio/NetIfResult; = GetNetInfoList(int)
  getNetInfoNum([I)I = GetNetInfoNum(int[])
  getNetworkInterfaceName(Ljava/net/NetworkInterface;)Ljava/lang/String; = GetNetworkInterfaceName(Java.Net.NetworkInterface)
  getTargetSmartDeviceNetIfNum([I)I = GetTargetSmartDeviceNetIfNum(int[])
com/epson/epsonio/NetIFInfo = Com.Epson.Epsonio.NetIFInfo
  <init>()V = .ctor()
  createNetworkInterfaceArray([Ljava/net/NetworkInterface;I)I = CreateNetworkInterfaceArray(Java.Net.NetworkInterface[], int)
  getMyAddress(Ljava/lang/String;I)Ljava/lang/String; = GetMyAddress(string, int)
  getNetInfoList(I)[Lcom/epson/epsonio/NetIfResult; = GetNetInfoList(int)
  getNetInfoNum([I)I = GetNetInfoNum(int[])
  getNetworkInterfaceName(Ljava/net/NetworkInterface;)Ljava/lang/String; = GetNetworkInterfaceName(Java.Net.NetworkInterface)
  getTargetSmartDeviceNetIfNum([I)I = GetTargetSmartDeviceNetIfNum(int[])
com/epson/epsonio/NetIfResult = Com.Epson.Epsonio.NetIfResult
  <init>()V = .ctor()
  ipAddress = IpAddress
  macAddress = MacAddress
com/epson/epsonio/NetIfResult = Com.Epson.Epsonio.NetIfResult
  <init>()V = .ctor()
  ipAddress = IpAddress
  macAddress = MacAddress
com/epson/epsonio/SupportUsb = Com.Epson.Epsonio.SupportUsb
  <init>()V = .ctor()
  getResult([II)[Lcom/epson/epsonio/DeviceInfo; = GetResult(int[], int)
  isSupport()Ljava/lang/Boolean; = IsSupport()
  start(Landroid/content/Context;ILjava/lang/String;)I = Start(Android.Content.Context, int, string)
  stop()I = Stop()
com/epson/epsonio/SupportUsb = Com.Epson.Epsonio.SupportUsb
  <init>()V = .ctor()
  getResult([II)[Lcom/epson/epsonio/DeviceInfo; = GetResult(int[], int)
  isSupport()Ljava/lang/Boolean; = IsSupport()
  start(Landroid/content/Context;ILjava/lang/String;)I = Start(Android.Content.Context, int, string)
  stop()I = Stop()
com/epson/epsonio/usb/AoaUsb = Com.Epson.Epsonio.Usb.AoaUsb
  <init>()V = .ctor()
  M_MAX_A0A_SENT_SIZE_AT_ONCE = MMaxA0aSentSizeAtOnce
  isPowerOn()Z = IsPowerOn
  getUsbType()I = UsbType
  checkDevice(Ljava/lang/String;)Z = CheckDevice(string)
  close()I = Close()
  enableFlowControl(I)I = EnableFlowControl(int)
  getDeviceName(Ljava/lang/Object;)Ljava/lang/String; = GetDeviceName(Java.Lang.Object)
  getOnlineDMStatus([I)I = GetOnlineDMStatus(int[])
  getOnlineTMStatus([I)I = GetOnlineTMStatus(int[])
  isConnection(Ljava/lang/Object;)Z = IsConnection(Java.Lang.Object)
  open(ILjava/lang/Object;)I = Open(int, Java.Lang.Object)
  read([BII[I[I)I = Read(byte[], int, int, int[], int[])
  requestPermission(Ljava/lang/Object;Ljava/lang/String;[I)I = RequestPermission(Java.Lang.Object, string, int[])
  setUsbInfo(Ljava/lang/String;)I = SetUsbInfo(string)
  write([BII[I[I)I = Write(byte[], int, int, int[], int[])
com/epson/epsonio/usb/AoaUsb = Com.Epson.Epsonio.Usb.AoaUsb
  <init>()V = .ctor()
  M_MAX_A0A_SENT_SIZE_AT_ONCE = MMaxA0aSentSizeAtOnce
  isPowerOn()Z = IsPowerOn
  getUsbType()I = UsbType
  checkDevice(Ljava/lang/String;)Z = CheckDevice(string)
  close()I = Close()
  enableFlowControl(I)I = EnableFlowControl(int)
  getDeviceName(Ljava/lang/Object;)Ljava/lang/String; = GetDeviceName(Java.Lang.Object)
  getOnlineDMStatus([I)I = GetOnlineDMStatus(int[])
  getOnlineTMStatus([I)I = GetOnlineTMStatus(int[])
  isConnection(Ljava/lang/Object;)Z = IsConnection(Java.Lang.Object)
  open(ILjava/lang/Object;)I = Open(int, Java.Lang.Object)
  read([BII[I[I)I = Read(byte[], int, int, int[], int[])
  requestPermission(Ljava/lang/Object;Ljava/lang/String;[I)I = RequestPermission(Java.Lang.Object, string, int[])
  write([BII[I[I)I = Write(byte[], int, int, int[], int[])
com/epson/epsonio/usb/DeviceUsb = Com.Epson.Epsonio.Usb.DeviceUsb
  <init>()V = .ctor()
  isPowerOn()Z = IsPowerOn
  getUsbType()I = UsbType
  checkDevice(Ljava/lang/String;)Z = CheckDevice(string)
  close()I = Close()
  enableFlowControl(I)I = EnableFlowControl(int)
  getDeviceName(Ljava/lang/Object;)Ljava/lang/String; = GetDeviceName(Java.Lang.Object)
  getOnlineDMStatus([I)I = GetOnlineDMStatus(int[])
  getOnlineStatus([II)I = GetOnlineStatus(int[], int)
  getOnlineTMStatus([I)I = GetOnlineTMStatus(int[])
  ioctrlRev(I[B)I = IoctrlRev(int, byte[])
  ioctrlSend(III)I = IoctrlSend(int, int, int)
  isConnection(Ljava/lang/Object;)Z = IsConnection(Java.Lang.Object)
  open(ILjava/lang/Object;)I = Open(int, Java.Lang.Object)
  read([BII[I[I)I = Read(byte[], int, int, int[], int[])
  requestPermission(Ljava/lang/Object;Ljava/lang/String;[I)I = RequestPermission(Java.Lang.Object, string, int[])
  setUsbInfo(Ljava/lang/String;)I = SetUsbInfo(string)
  write([BII[I[I)I = Write(byte[], int, int, int[], int[])
com/epson/epsonio/usb/DeviceUsb = Com.Epson.Epsonio.Usb.DeviceUsb
  <init>()V = .ctor()
  isPowerOn()Z = IsPowerOn
  checkDevice(Ljava/lang/String;)Z = CheckDevice(string)
  close()I = Close()
  enableFlowControl(I)I = EnableFlowControl(int)
  getDeviceName(Ljava/lang/Object;)Ljava/lang/String; = GetDeviceName(Java.Lang.Object)
  getOnlineDMStatus([I)I = GetOnlineDMStatus(int[])
  getOnlineStatus([II)I = GetOnlineStatus(int[], int)
  getOnlineTMStatus([I)I = GetOnlineTMStatus(int[])
  ioctrlRev(I[B)I = IoctrlRev(int, byte[])
  ioctrlSend(III)I = IoctrlSend(int, int, int)
  isConnection(Ljava/lang/Object;)Z = IsConnection(Java.Lang.Object)
  open(ILjava/lang/Object;)I = Open(int, Java.Lang.Object)
  read([BII[I[I)I = Read(byte[], int, int, int[], int[])
  requestPermission(Ljava/lang/Object;Ljava/lang/String;[I)I = RequestPermission(Java.Lang.Object, string, int[])
  write([BII[I[I)I = Write(byte[], int, int, int[], int[])
com/epson/epsonio/usb/DevUsb = Com.Epson.Epsonio.Usb.DevUsb
  <init>()V = .ctor()
  FALSE = False
  TRUE = True
  getResult([II)[Lcom/epson/epsonio/DeviceInfo; = GetResult(int[], int)
  start(Landroid/content/Context;ILjava/lang/String;I)I = Start(Android.Content.Context, int, string, int)
  stop()I = Stop()
com/epson/epsonio/usb/DevUsb = Com.Epson.Epsonio.Usb.DevUsb
  <init>()V = .ctor()
  FALSE = False
  TRUE = True
  getResult([II)[Lcom/epson/epsonio/DeviceInfo; = GetResult(int[], int)
  start(Landroid/content/Context;ILjava/lang/String;I)I = Start(Android.Content.Context, int, string, int)
  stop()I = Stop()
com/epson/epsonio/usb/NetUsb = Com.Epson.Epsonio.Usb.NetUsb
  <init>()V = .ctor()
  checkDeviceName(Ljava/lang/String;)Z = CheckDeviceName(string)
  close(I)I = Close(int)
  enableFlowControl(II)I = EnableFlowControl(int, int)
  getAdapter(I)Lcom/epson/epsonio/usb/Usb; = GetAdapter(int)
  getOnlineDMStatus(I[I)I = GetOnlineDMStatus(int, int[])
  getOnlineTMStatus(I[I)I = GetOnlineTMStatus(int, int[])
  getUsbType(I[I)I = GetUsbType(int, int[])
  isPowerOn(I)Z = IsPowerOn(int)
  kill(I)I = Kill(int)
  open(Ljava/lang/String;Ljava/lang/String;[ILjava/lang/Object;)I = Open(string, string, int[], Java.Lang.Object)
  read(I[BIII[I)I = Read(int, byte[], int, int, int, int[])
  removeAdapter(I)Z = RemoveAdapter(int)
  write(I[BIII[I)I = Write(int, byte[], int, int, int, int[])
com/epson/epsonio/usb/NetUsb = Com.Epson.Epsonio.Usb.NetUsb
  <init>()V = .ctor()
  checkDeviceName(Ljava/lang/String;)Z = CheckDeviceName(string)
  close(I)I = Close(int)
  enableFlowControl(II)I = EnableFlowControl(int, int)
  getAdapter(I)Lcom/epson/epsonio/usb/Usb; = GetAdapter(int)
  getOnlineDMStatus(I[I)I = GetOnlineDMStatus(int, int[])
  getOnlineTMStatus(I[I)I = GetOnlineTMStatus(int, int[])
  getUsbType(I[I)I = GetUsbType(int, int[])
  isPowerOn(I)Z = IsPowerOn(int)
  kill(I)I = Kill(int)
  open(Ljava/lang/String;Ljava/lang/String;[ILjava/lang/Object;)I = Open(string, string, int[], Java.Lang.Object)
  read(I[BIII[I)I = Read(int, byte[], int, int, int, int[])
  removeAdapter(I)Z = RemoveAdapter(int)
  write(I[BIII[I)I = Write(int, byte[], int, int, int, int[])
com/epson/epsonio/usb/RingBuffer = Com.Epson.Epsonio.Usb.RingBuffer
  <init>()V = .ctor()
  <init>(I)V = .ctor(int)
  getReadableDataSize()I = ReadableDataSize
  dequeue([BII)I = Dequeue(byte[], int, int)
  enqueue([BII)V = Enqueue(byte[], int, int)
com/epson/epsonio/usb/RingBuffer = Com.Epson.Epsonio.Usb.RingBuffer
  <init>()V = .ctor()
  <init>(I)V = .ctor(int)
  getReadableDataSize()I = ReadableDataSize
  dequeue([BII)I = Dequeue(byte[], int, int)
  enqueue([BII)V = Enqueue(byte[], int, int)
com/epson/epsonio/usb/StreamReadThread = Com.Epson.Epsonio.Usb.StreamReadThread
  <init>()V = .ctor()
  read([BII)I = Read(byte[], int, int)
  run()V = Run()
  startThread(Ljava/io/FileDescriptor;)V = StartThread(Java.IO.FileDescriptor)
  stopThread()V = StopThread()
com/epson/epsonio/usb/StreamReadThread = Com.Epson.Epsonio.Usb.StreamReadThread
  <init>()V = .ctor()
  read([BII)I = Read(byte[], int, int)
  startThread(Ljava/io/FileDescriptor;)V = StartThread(Java.IO.FileDescriptor)
  stopThread()V = StopThread()
com/epson/epsonio/usb/Usb = Com.Epson.Epsonio.Usb.Usb
  <init>()V = .ctor()
  ACTION_USB_PERMISSION = ActionUsbPermission
  mClassOutputLog = MClassOutputLog
  mHandle = MHandle
  M_INVALID_HANDLE_INDEX = MInvalidHandleIndex
  mOutputLogInfoMethod = MOutputLogInfoMethod
  M_USB_AOA_CLASS = MUsbAoaClass
  M_USB_DEVICE_CLASS = MUsbDeviceClass
  M_USB_ILLEGAL_CLASS = MUsbIllegalClass
  isPowerOn()Z = IsPowerOn
  getUsbType()I = UsbType
  checkDevice(Ljava/lang/String;)Z = CheckDevice(string)
  checkHandle(I)Z = CheckHandle(int)
  close()I = Close()
  enableFlowControl(I)I = EnableFlowControl(int)
  getOnlineDMStatus([I)I = GetOnlineDMStatus(int[])
  getOnlineTMStatus([I)I = GetOnlineTMStatus(int[])
  initializeOuputLogFunctions()V = InitializeOuputLogFunctions()
  open(ILjava/lang/Object;)I = Open(int, Java.Lang.Object)
  outputLogInfo([Ljava/lang/Object;)V = OutputLogInfo(params Java.Lang.Object[])
  read([BII[I[I)I = Read(byte[], int, int, int[], int[])
  requestPermission(Ljava/lang/Object;Ljava/lang/String;[I)I = RequestPermission(Java.Lang.Object, string, int[])
  setUsbInfo(Ljava/lang/String;)I = SetUsbInfo(string)
  write([BII[I[I)I = Write(byte[], int, int, int[], int[])
com/epson/epsonio/usb/Usb = Com.Epson.Epsonio.Usb.Usb
  <init>()V = .ctor()
  ACTION_USB_PERMISSION = ActionUsbPermission
  mClassOutputLog = MClassOutputLog
  mHandle = MHandle
  M_INVALID_HANDLE_INDEX = MInvalidHandleIndex
  mOutputLogInfoMethod = MOutputLogInfoMethod
  M_USB_AOA_CLASS = MUsbAoaClass
  M_USB_DEVICE_CLASS = MUsbDeviceClass
  M_USB_ILLEGAL_CLASS = MUsbIllegalClass
  isPowerOn()Z = IsPowerOn
  getUsbType()I = UsbType
  checkDevice(Ljava/lang/String;)Z = CheckDevice(string)
  checkHandle(I)Z = CheckHandle(int)
  close()I = Close()
  enableFlowControl(I)I = EnableFlowControl(int)
  getOnlineDMStatus([I)I = GetOnlineDMStatus(int[])
  getOnlineTMStatus([I)I = GetOnlineTMStatus(int[])
  initializeOuputLogFunctions()V = InitializeOuputLogFunctions()
  open(ILjava/lang/Object;)I = Open(int, Java.Lang.Object)
  outputLogInfo([Ljava/lang/Object;)V = OutputLogInfo(params Java.Lang.Object[])
  read([BII[I[I)I = Read(byte[], int, int, int[], int[])
  requestPermission(Ljava/lang/Object;Ljava/lang/String;[I)I = RequestPermission(Java.Lang.Object, string, int[])
  setUsbInfo(Ljava/lang/String;)I = SetUsbInfo(string)
  write([BII[I[I)I = Write(byte[], int, int, int[], int[])
