//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Epson.Epos2.Printer {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.epson.epos2.printer']/class[@name='FirmwareInfoEx']"
	[global::Android.Runtime.Register ("com/epson/epos2/printer/FirmwareInfoEx", DoNotGenerateAcw=true)]
	public partial class FirmwareInfoEx : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/epson/epos2/printer/FirmwareInfoEx", typeof (FirmwareInfoEx));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected FirmwareInfoEx (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.epson.epos2.printer']/class[@name='FirmwareInfoEx']/constructor[@name='FirmwareInfoEx' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='com.epson.epos2.printer.FirmwareInfo'] and parameter[3][@type='java.lang.String']]"
		[Register (".ctor", "(ILcom/epson/epos2/printer/FirmwareInfo;Ljava/lang/String;)V", "")]
		protected unsafe FirmwareInfoEx (int printerMode, global::Com.Epson.Epos2.Printer.FirmwareInfo? firmwareInfo, string? bootId) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(ILcom/epson/epos2/printer/FirmwareInfo;Ljava/lang/String;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_bootId = JNIEnv.NewString ((string?)bootId);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (printerMode);
				__args [1] = new JniArgumentValue ((firmwareInfo == null) ? IntPtr.Zero : ((global::Java.Lang.Object) firmwareInfo).Handle);
				__args [2] = new JniArgumentValue (native_bootId);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_bootId);
				global::System.GC.KeepAlive (firmwareInfo);
			}
		}

		static Delegate? cb_getBootId;
#pragma warning disable 0169
		static Delegate GetGetBootIdHandler ()
		{
			if (cb_getBootId == null)
				cb_getBootId = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetBootId));
			return cb_getBootId;
		}

		static IntPtr n_GetBootId (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Printer.FirmwareInfoEx> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.BootId);
		}
#pragma warning restore 0169

		public virtual unsafe string? BootId {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.printer']/class[@name='FirmwareInfoEx']/method[@name='getBootId' and count(parameter)=0]"
			[Register ("getBootId", "()Ljava/lang/String;", "GetGetBootIdHandler")]
			get {
				const string __id = "getBootId.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getFirmwareInfo;
#pragma warning disable 0169
		static Delegate GetGetFirmwareInfoHandler ()
		{
			if (cb_getFirmwareInfo == null)
				cb_getFirmwareInfo = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetFirmwareInfo));
			return cb_getFirmwareInfo;
		}

		static IntPtr n_GetFirmwareInfo (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Printer.FirmwareInfoEx> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.FirmwareInfo);
		}
#pragma warning restore 0169

		public virtual unsafe global::Com.Epson.Epos2.Printer.FirmwareInfo? FirmwareInfo {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.printer']/class[@name='FirmwareInfoEx']/method[@name='getFirmwareInfo' and count(parameter)=0]"
			[Register ("getFirmwareInfo", "()Lcom/epson/epos2/printer/FirmwareInfo;", "GetGetFirmwareInfoHandler")]
			get {
				const string __id = "getFirmwareInfo.()Lcom/epson/epos2/printer/FirmwareInfo;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Printer.FirmwareInfo> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getPrinterMode;
#pragma warning disable 0169
		static Delegate GetGetPrinterModeHandler ()
		{
			if (cb_getPrinterMode == null)
				cb_getPrinterMode = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetPrinterMode));
			return cb_getPrinterMode;
		}

		static int n_GetPrinterMode (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Printer.FirmwareInfoEx> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.PrinterMode;
		}
#pragma warning restore 0169

		public virtual unsafe int PrinterMode {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.printer']/class[@name='FirmwareInfoEx']/method[@name='getPrinterMode' and count(parameter)=0]"
			[Register ("getPrinterMode", "()I", "GetGetPrinterModeHandler")]
			get {
				const string __id = "getPrinterMode.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

	}
}
