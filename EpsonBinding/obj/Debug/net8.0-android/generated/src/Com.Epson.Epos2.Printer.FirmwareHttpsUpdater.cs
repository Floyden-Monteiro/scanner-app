//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Epson.Epos2.Printer {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.epson.epos2.printer']/class[@name='FirmwareHttpsUpdater']"
	[global::Android.Runtime.Register ("com/epson/epos2/printer/FirmwareHttpsUpdater", DoNotGenerateAcw=true)]
	public partial class FirmwareHttpsUpdater : global::Java.Lang.Object {

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.printer']/class[@name='FirmwareHttpsUpdater']/field[@name='mClassOutputLog']"
		[Register ("mClassOutputLog")]
		protected static global::Java.Lang.Class? MClassOutputLog {
			get {
				const string __id = "mClassOutputLog.Ljava/lang/Class;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Java.Lang.Class> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "mClassOutputLog.Ljava/lang/Class;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.printer']/class[@name='FirmwareHttpsUpdater']/field[@name='mOutputLogInfoMethod']"
		[Register ("mOutputLogInfoMethod")]
		protected static global::Java.Lang.Reflect.Method? MOutputLogInfoMethod {
			get {
				const string __id = "mOutputLogInfoMethod.Ljava/lang/reflect/Method;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Java.Lang.Reflect.Method> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "mOutputLogInfoMethod.Ljava/lang/reflect/Method;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		// Metadata.xml XPath interface reference: path="/api/package[@name='com.epson.epos2.printer']/interface[@name='FirmwareHttpsUpdater.OnProgressListener']"
		[Register ("com/epson/epos2/printer/FirmwareHttpsUpdater$OnProgressListener", "", "Com.Epson.Epos2.Printer.FirmwareHttpsUpdater/IOnProgressListenerInvoker")]
		public partial interface IOnProgressListener : IJavaObject, IJavaPeerable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.printer']/interface[@name='FirmwareHttpsUpdater.OnProgressListener']/method[@name='OnUpdateFirmwareHttpsProgress' and count(parameter)=1 and parameter[1][@type='float']]"
			[Register ("OnUpdateFirmwareHttpsProgress", "(F)V", "GetOnUpdateFirmwareHttpsProgress_FHandler:Com.Epson.Epos2.Printer.FirmwareHttpsUpdater/IOnProgressListenerInvoker, EpsonBinding")]
			void OnUpdateFirmwareHttpsProgress (float p0);

		}

		[global::Android.Runtime.Register ("com/epson/epos2/printer/FirmwareHttpsUpdater$OnProgressListener", DoNotGenerateAcw=true)]
		internal partial class IOnProgressListenerInvoker : global::Java.Lang.Object, IOnProgressListener {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/epson/epos2/printer/FirmwareHttpsUpdater$OnProgressListener", typeof (IOnProgressListenerInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static IOnProgressListener? GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<IOnProgressListener> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.epson.epos2.printer.FirmwareHttpsUpdater.OnProgressListener'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public IOnProgressListenerInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate? cb_OnUpdateFirmwareHttpsProgress_F;
#pragma warning disable 0169
			static Delegate GetOnUpdateFirmwareHttpsProgress_FHandler ()
			{
				if (cb_OnUpdateFirmwareHttpsProgress_F == null)
					cb_OnUpdateFirmwareHttpsProgress_F = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPF_V (n_OnUpdateFirmwareHttpsProgress_F));
				return cb_OnUpdateFirmwareHttpsProgress_F;
			}

			static void n_OnUpdateFirmwareHttpsProgress_F (IntPtr jnienv, IntPtr native__this, float p0)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Printer.FirmwareHttpsUpdater.IOnProgressListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.OnUpdateFirmwareHttpsProgress (p0);
			}
#pragma warning restore 0169

			IntPtr id_OnUpdateFirmwareHttpsProgress_F;
			public unsafe void OnUpdateFirmwareHttpsProgress (float p0)
			{
				if (id_OnUpdateFirmwareHttpsProgress_F == IntPtr.Zero)
					id_OnUpdateFirmwareHttpsProgress_F = JNIEnv.GetMethodID (class_ref, "OnUpdateFirmwareHttpsProgress", "(F)V");
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue (p0);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_OnUpdateFirmwareHttpsProgress_F, __args);
			}

		}

		// event args for com.epson.epos2.printer.FirmwareHttpsUpdater.OnProgressListener.OnUpdateFirmwareHttpsProgress
		public partial class ProgressEventArgs : global::System.EventArgs {
			public ProgressEventArgs (float p0)
			{
				this.p0 = p0;
			}

			float p0;

			public float P0 {
				get { return p0; }
			}

		}

		[global::Android.Runtime.Register ("mono/com/epson/epos2/printer/FirmwareHttpsUpdater_OnProgressListenerImplementor")]
		internal sealed partial class IOnProgressListenerImplementor : global::Java.Lang.Object, IOnProgressListener {

			object? sender;

			public unsafe IOnProgressListenerImplementor (object sender) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "()V";
				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;
				var h = JniPeerMembers.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (h.Handle, JniHandleOwnership.TransferLocalRef);
				JniPeerMembers.InstanceMethods.FinishCreateInstance (__id, this, null);
				this.sender = sender;
			}

			#pragma warning disable 0649
			public EventHandler<ProgressEventArgs>? Handler;
			#pragma warning restore 0649

			public void OnUpdateFirmwareHttpsProgress (float p0)
			{
				var __h = Handler;
				if (__h != null)
					__h (sender, new ProgressEventArgs (p0));
			}

			internal static bool __IsEmpty (IOnProgressListenerImplementor value)
			{
				return value.Handler == null;
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/epson/epos2/printer/FirmwareHttpsUpdater", typeof (FirmwareHttpsUpdater));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected FirmwareHttpsUpdater (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.epson.epos2.printer']/class[@name='FirmwareHttpsUpdater']/constructor[@name='FirmwareHttpsUpdater' and count(parameter)=1 and parameter[1][@type='com.epson.epos2.printer.FirmwareOption']]"
		[Register (".ctor", "(Lcom/epson/epos2/printer/FirmwareOption;)V", "")]
		public unsafe FirmwareHttpsUpdater (global::Com.Epson.Epos2.Printer.FirmwareOption? option) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Lcom/epson/epos2/printer/FirmwareOption;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((option == null) ? IntPtr.Zero : ((global::Java.Lang.Object) option).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (option);
			}
		}

		static Delegate? cb_checkSecurity_Ljava_lang_String_I;
#pragma warning disable 0169
		static Delegate GetCheckSecurity_Ljava_lang_String_IHandler ()
		{
			if (cb_checkSecurity_Ljava_lang_String_I == null)
				cb_checkSecurity_Ljava_lang_String_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_I (n_CheckSecurity_Ljava_lang_String_I));
			return cb_checkSecurity_Ljava_lang_String_I;
		}

		static int n_CheckSecurity_Ljava_lang_String_I (IntPtr jnienv, IntPtr native__this, IntPtr native_ip, int timeout)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Printer.FirmwareHttpsUpdater> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var ip = JNIEnv.GetString (native_ip, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.CheckSecurity (ip, timeout);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.printer']/class[@name='FirmwareHttpsUpdater']/method[@name='checkSecurity' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int']]"
		[Register ("checkSecurity", "(Ljava/lang/String;I)I", "GetCheckSecurity_Ljava_lang_String_IHandler")]
		public virtual unsafe int CheckSecurity (string? ip, int timeout)
		{
			const string __id = "checkSecurity.(Ljava/lang/String;I)I";
			IntPtr native_ip = JNIEnv.NewString ((string?)ip);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_ip);
				__args [1] = new JniArgumentValue (timeout);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_ip);
			}
		}

		static Delegate? cb_createFirmwareFile_Landroid_content_Context_arrayBLjava_lang_String_;
#pragma warning disable 0169
		static Delegate GetCreateFirmwareFile_Landroid_content_Context_arrayBLjava_lang_String_Handler ()
		{
			if (cb_createFirmwareFile_Landroid_content_Context_arrayBLjava_lang_String_ == null)
				cb_createFirmwareFile_Landroid_content_Context_arrayBLjava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLL_L (n_CreateFirmwareFile_Landroid_content_Context_arrayBLjava_lang_String_));
			return cb_createFirmwareFile_Landroid_content_Context_arrayBLjava_lang_String_;
		}

		static IntPtr n_CreateFirmwareFile_Landroid_content_Context_arrayBLjava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_fwdata, IntPtr native_fileName)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Printer.FirmwareHttpsUpdater> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var context = global::Java.Lang.Object.GetObject<global::Android.Content.Context> (native_context, JniHandleOwnership.DoNotTransfer);
			var fwdata = (byte[]?) JNIEnv.GetArray (native_fwdata, JniHandleOwnership.DoNotTransfer, typeof (byte));
			var fileName = JNIEnv.GetString (native_fileName, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.NewString (__this.CreateFirmwareFile (context, fwdata, fileName));
			if (fwdata != null)
				JNIEnv.CopyArray (fwdata, native_fwdata);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.printer']/class[@name='FirmwareHttpsUpdater']/method[@name='createFirmwareFile' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='byte[]'] and parameter[3][@type='java.lang.String']]"
		[Register ("createFirmwareFile", "(Landroid/content/Context;[BLjava/lang/String;)Ljava/lang/String;", "GetCreateFirmwareFile_Landroid_content_Context_arrayBLjava_lang_String_Handler")]
		public virtual unsafe string? CreateFirmwareFile (global::Android.Content.Context? context, byte[]? fwdata, string? fileName)
		{
			const string __id = "createFirmwareFile.(Landroid/content/Context;[BLjava/lang/String;)Ljava/lang/String;";
			IntPtr native_fwdata = JNIEnv.NewArray (fwdata);
			IntPtr native_fileName = JNIEnv.NewString ((string?)fileName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue (native_fwdata);
				__args [2] = new JniArgumentValue (native_fileName);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				if (fwdata != null) {
					JNIEnv.CopyArray (native_fwdata, fwdata);
					JNIEnv.DeleteLocalRef (native_fwdata);
				}
				JNIEnv.DeleteLocalRef (native_fileName);
				global::System.GC.KeepAlive (context);
				global::System.GC.KeepAlive (fwdata);
			}
		}

		static Delegate? cb_createFirmwareFileWithMultiPart_Landroid_content_Context_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetCreateFirmwareFileWithMultiPart_Landroid_content_Context_Ljava_lang_String_Ljava_lang_String_Handler ()
		{
			if (cb_createFirmwareFileWithMultiPart_Landroid_content_Context_Ljava_lang_String_Ljava_lang_String_ == null)
				cb_createFirmwareFileWithMultiPart_Landroid_content_Context_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLL_L (n_CreateFirmwareFileWithMultiPart_Landroid_content_Context_Ljava_lang_String_Ljava_lang_String_));
			return cb_createFirmwareFileWithMultiPart_Landroid_content_Context_Ljava_lang_String_Ljava_lang_String_;
		}

		static IntPtr n_CreateFirmwareFileWithMultiPart_Landroid_content_Context_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_inputFilePath, IntPtr native_outputFileName)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Printer.FirmwareHttpsUpdater> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var context = global::Java.Lang.Object.GetObject<global::Android.Content.Context> (native_context, JniHandleOwnership.DoNotTransfer);
			var inputFilePath = JNIEnv.GetString (native_inputFilePath, JniHandleOwnership.DoNotTransfer);
			var outputFileName = JNIEnv.GetString (native_outputFileName, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.NewString (__this.CreateFirmwareFileWithMultiPart (context, inputFilePath, outputFileName));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.printer']/class[@name='FirmwareHttpsUpdater']/method[@name='createFirmwareFileWithMultiPart' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]"
		[Register ("createFirmwareFileWithMultiPart", "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "GetCreateFirmwareFileWithMultiPart_Landroid_content_Context_Ljava_lang_String_Ljava_lang_String_Handler")]
		public virtual unsafe string? CreateFirmwareFileWithMultiPart (global::Android.Content.Context? context, string? inputFilePath, string? outputFileName)
		{
			const string __id = "createFirmwareFileWithMultiPart.(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_inputFilePath = JNIEnv.NewString ((string?)inputFilePath);
			IntPtr native_outputFileName = JNIEnv.NewString ((string?)outputFileName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue (native_inputFilePath);
				__args [2] = new JniArgumentValue (native_outputFileName);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_inputFilePath);
				JNIEnv.DeleteLocalRef (native_outputFileName);
				global::System.GC.KeepAlive (context);
			}
		}

		static Delegate? cb_deleteFirmwareFile_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetDeleteFirmwareFile_Ljava_lang_String_Handler ()
		{
			if (cb_deleteFirmwareFile_Ljava_lang_String_ == null)
				cb_deleteFirmwareFile_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_DeleteFirmwareFile_Ljava_lang_String_));
			return cb_deleteFirmwareFile_Ljava_lang_String_;
		}

		static void n_DeleteFirmwareFile_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_filePath)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Printer.FirmwareHttpsUpdater> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var filePath = JNIEnv.GetString (native_filePath, JniHandleOwnership.DoNotTransfer);
			__this.DeleteFirmwareFile (filePath);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.printer']/class[@name='FirmwareHttpsUpdater']/method[@name='deleteFirmwareFile' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("deleteFirmwareFile", "(Ljava/lang/String;)V", "GetDeleteFirmwareFile_Ljava_lang_String_Handler")]
		public virtual unsafe void DeleteFirmwareFile (string? filePath)
		{
			const string __id = "deleteFirmwareFile.(Ljava/lang/String;)V";
			IntPtr native_filePath = JNIEnv.NewString ((string?)filePath);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_filePath);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_filePath);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.printer']/class[@name='FirmwareHttpsUpdater']/method[@name='initializeOuputLogFunctions' and count(parameter)=0]"
		[Register ("initializeOuputLogFunctions", "()V", "")]
		protected static unsafe void InitializeOuputLogFunctions ()
		{
			const string __id = "initializeOuputLogFunctions.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.printer']/class[@name='FirmwareHttpsUpdater']/method[@name='outputLogInfo' and count(parameter)=1 and parameter[1][@type='java.lang.Object...']]"
		[Register ("outputLogInfo", "([Ljava/lang/Object;)V", "")]
		protected static unsafe void OutputLogInfo (params global::Java.Lang.Object[]? param)
		{
			const string __id = "outputLogInfo.([Ljava/lang/Object;)V";
			IntPtr native_param = JNIEnv.NewArray (param);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_param);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				if (param != null) {
					JNIEnv.CopyArray (native_param, param);
					JNIEnv.DeleteLocalRef (native_param);
				}
				global::System.GC.KeepAlive (param);
			}
		}

		static Delegate? cb_preUpdate_Ljava_lang_String_I;
#pragma warning disable 0169
		static Delegate GetPreUpdate_Ljava_lang_String_IHandler ()
		{
			if (cb_preUpdate_Ljava_lang_String_I == null)
				cb_preUpdate_Ljava_lang_String_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_I (n_PreUpdate_Ljava_lang_String_I));
			return cb_preUpdate_Ljava_lang_String_I;
		}

		static int n_PreUpdate_Ljava_lang_String_I (IntPtr jnienv, IntPtr native__this, IntPtr native_ip, int timeout)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Printer.FirmwareHttpsUpdater> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var ip = JNIEnv.GetString (native_ip, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.PreUpdate (ip, timeout);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.printer']/class[@name='FirmwareHttpsUpdater']/method[@name='preUpdate' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int']]"
		[Register ("preUpdate", "(Ljava/lang/String;I)I", "GetPreUpdate_Ljava_lang_String_IHandler")]
		public virtual unsafe int PreUpdate (string? ip, int timeout)
		{
			const string __id = "preUpdate.(Ljava/lang/String;I)I";
			IntPtr native_ip = JNIEnv.NewString ((string?)ip);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_ip);
				__args [1] = new JniArgumentValue (timeout);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_ip);
			}
		}

		static Delegate? cb_update_Landroid_content_Context_Ljava_lang_String_Ljava_lang_String_Lcom_epson_epos2_printer_FirmwareHttpsUpdater_OnProgressListener_;
#pragma warning disable 0169
		static Delegate GetUpdate_Landroid_content_Context_Ljava_lang_String_Ljava_lang_String_Lcom_epson_epos2_printer_FirmwareHttpsUpdater_OnProgressListener_Handler ()
		{
			if (cb_update_Landroid_content_Context_Ljava_lang_String_Ljava_lang_String_Lcom_epson_epos2_printer_FirmwareHttpsUpdater_OnProgressListener_ == null)
				cb_update_Landroid_content_Context_Ljava_lang_String_Ljava_lang_String_Lcom_epson_epos2_printer_FirmwareHttpsUpdater_OnProgressListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLLL_I (n_Update_Landroid_content_Context_Ljava_lang_String_Ljava_lang_String_Lcom_epson_epos2_printer_FirmwareHttpsUpdater_OnProgressListener_));
			return cb_update_Landroid_content_Context_Ljava_lang_String_Ljava_lang_String_Lcom_epson_epos2_printer_FirmwareHttpsUpdater_OnProgressListener_;
		}

		static int n_Update_Landroid_content_Context_Ljava_lang_String_Ljava_lang_String_Lcom_epson_epos2_printer_FirmwareHttpsUpdater_OnProgressListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_ip, IntPtr native_firmFilePath, IntPtr native_listener)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Printer.FirmwareHttpsUpdater> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var context = global::Java.Lang.Object.GetObject<global::Android.Content.Context> (native_context, JniHandleOwnership.DoNotTransfer);
			var ip = JNIEnv.GetString (native_ip, JniHandleOwnership.DoNotTransfer);
			var firmFilePath = JNIEnv.GetString (native_firmFilePath, JniHandleOwnership.DoNotTransfer);
			var listener = (global::Com.Epson.Epos2.Printer.FirmwareHttpsUpdater.IOnProgressListener?)global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Printer.FirmwareHttpsUpdater.IOnProgressListener> (native_listener, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.Update (context, ip, firmFilePath, listener);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.printer']/class[@name='FirmwareHttpsUpdater']/method[@name='update' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='com.epson.epos2.printer.FirmwareHttpsUpdater.OnProgressListener']]"
		[Register ("update", "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Lcom/epson/epos2/printer/FirmwareHttpsUpdater$OnProgressListener;)I", "GetUpdate_Landroid_content_Context_Ljava_lang_String_Ljava_lang_String_Lcom_epson_epos2_printer_FirmwareHttpsUpdater_OnProgressListener_Handler")]
		public virtual unsafe int Update (global::Android.Content.Context? context, string? ip, string? firmFilePath, global::Com.Epson.Epos2.Printer.FirmwareHttpsUpdater.IOnProgressListener? listener)
		{
			const string __id = "update.(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Lcom/epson/epos2/printer/FirmwareHttpsUpdater$OnProgressListener;)I";
			IntPtr native_ip = JNIEnv.NewString ((string?)ip);
			IntPtr native_firmFilePath = JNIEnv.NewString ((string?)firmFilePath);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue (native_ip);
				__args [2] = new JniArgumentValue (native_firmFilePath);
				__args [3] = new JniArgumentValue ((listener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) listener).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_ip);
				JNIEnv.DeleteLocalRef (native_firmFilePath);
				global::System.GC.KeepAlive (context);
				global::System.GC.KeepAlive (listener);
			}
		}

	}
}
