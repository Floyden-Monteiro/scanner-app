//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Epson.Epos2.Keyboard {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']"
	[global::Android.Runtime.Register ("com/epson/epos2/keyboard/Keyboard", DoNotGenerateAcw=true)]
	public partial class Keyboard : global::Java.Lang.Object {
		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='EVENT_DISCONNECT']"
		[Register ("EVENT_DISCONNECT")]
		public const int EventDisconnect = (int) 2;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='EVENT_RECONNECT']"
		[Register ("EVENT_RECONNECT")]
		public const int EventReconnect = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='EVENT_RECONNECTING']"
		[Register ("EVENT_RECONNECTING")]
		public const int EventReconnecting = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='FALSE']"
		[Register ("FALSE")]
		public const int False = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='PARAM_DEFAULT']"
		[Register ("PARAM_DEFAULT")]
		public const int ParamDefault = (int) -2;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='TRUE']"
		[Register ("TRUE")]
		public const int True = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_0']"
		[Register ("VK_0")]
		public const int Vk0 = (int) 48;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_1']"
		[Register ("VK_1")]
		public const int Vk1 = (int) 49;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_2']"
		[Register ("VK_2")]
		public const int Vk2 = (int) 50;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_3']"
		[Register ("VK_3")]
		public const int Vk3 = (int) 51;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_4']"
		[Register ("VK_4")]
		public const int Vk4 = (int) 52;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_5']"
		[Register ("VK_5")]
		public const int Vk5 = (int) 53;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_6']"
		[Register ("VK_6")]
		public const int Vk6 = (int) 54;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_7']"
		[Register ("VK_7")]
		public const int Vk7 = (int) 55;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_8']"
		[Register ("VK_8")]
		public const int Vk8 = (int) 56;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_9']"
		[Register ("VK_9")]
		public const int Vk9 = (int) 57;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_A']"
		[Register ("VK_A")]
		public const int VkA = (int) 65;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_ADD']"
		[Register ("VK_ADD")]
		public const int VkAdd = (int) 107;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_B']"
		[Register ("VK_B")]
		public const int VkB = (int) 66;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_BACK']"
		[Register ("VK_BACK")]
		public const int VkBack = (int) 8;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_C']"
		[Register ("VK_C")]
		public const int VkC = (int) 67;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_CAPITAL']"
		[Register ("VK_CAPITAL")]
		public const int VkCapital = (int) 20;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_CONTROL']"
		[Register ("VK_CONTROL")]
		public const int VkControl = (int) 17;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_CONVERT']"
		[Register ("VK_CONVERT")]
		public const int VkConvert = (int) 28;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_D']"
		[Register ("VK_D")]
		public const int VkD = (int) 68;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_DELETE']"
		[Register ("VK_DELETE")]
		public const int VkDelete = (int) 46;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_DOWN']"
		[Register ("VK_DOWN")]
		public const int VkDown = (int) 40;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_E']"
		[Register ("VK_E")]
		public const int VkE = (int) 69;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_END']"
		[Register ("VK_END")]
		public const int VkEnd = (int) 35;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_ESCAPE']"
		[Register ("VK_ESCAPE")]
		public const int VkEscape = (int) 27;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_F']"
		[Register ("VK_F")]
		public const int VkF = (int) 70;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_F1']"
		[Register ("VK_F1")]
		public const int VkF1 = (int) 112;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_F10']"
		[Register ("VK_F10")]
		public const int VkF10 = (int) 121;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_F11']"
		[Register ("VK_F11")]
		public const int VkF11 = (int) 122;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_F12']"
		[Register ("VK_F12")]
		public const int VkF12 = (int) 123;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_F2']"
		[Register ("VK_F2")]
		public const int VkF2 = (int) 113;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_F3']"
		[Register ("VK_F3")]
		public const int VkF3 = (int) 114;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_F4']"
		[Register ("VK_F4")]
		public const int VkF4 = (int) 115;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_F5']"
		[Register ("VK_F5")]
		public const int VkF5 = (int) 116;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_F6']"
		[Register ("VK_F6")]
		public const int VkF6 = (int) 117;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_F7']"
		[Register ("VK_F7")]
		public const int VkF7 = (int) 118;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_F8']"
		[Register ("VK_F8")]
		public const int VkF8 = (int) 119;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_F9']"
		[Register ("VK_F9")]
		public const int VkF9 = (int) 120;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_G']"
		[Register ("VK_G")]
		public const int VkG = (int) 71;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_H']"
		[Register ("VK_H")]
		public const int VkH = (int) 72;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_HOME']"
		[Register ("VK_HOME")]
		public const int VkHome = (int) 36;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_I']"
		[Register ("VK_I")]
		public const int VkI = (int) 73;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_INSERT']"
		[Register ("VK_INSERT")]
		public const int VkInsert = (int) 45;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_J']"
		[Register ("VK_J")]
		public const int VkJ = (int) 74;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_K']"
		[Register ("VK_K")]
		public const int VkK = (int) 75;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_L']"
		[Register ("VK_L")]
		public const int VkL = (int) 76;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_LEFT']"
		[Register ("VK_LEFT")]
		public const int VkLeft = (int) 37;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_M']"
		[Register ("VK_M")]
		public const int VkM = (int) 77;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_MENU']"
		[Register ("VK_MENU")]
		public const int VkMenu = (int) 18;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_MULTIPLY']"
		[Register ("VK_MULTIPLY")]
		public const int VkMultiply = (int) 106;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_N']"
		[Register ("VK_N")]
		public const int VkN = (int) 78;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_NEXT']"
		[Register ("VK_NEXT")]
		public const int VkNext = (int) 34;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_NONCONVERT']"
		[Register ("VK_NONCONVERT")]
		public const int VkNonconvert = (int) 29;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_O']"
		[Register ("VK_O")]
		public const int VkO = (int) 79;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_OEM_1']"
		[Register ("VK_OEM_1")]
		public const int VkOem1 = (int) 186;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_OEM_2']"
		[Register ("VK_OEM_2")]
		public const int VkOem2 = (int) 191;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_OEM_3']"
		[Register ("VK_OEM_3")]
		public const int VkOem3 = (int) 192;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_OEM_4']"
		[Register ("VK_OEM_4")]
		public const int VkOem4 = (int) 219;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_OEM_5']"
		[Register ("VK_OEM_5")]
		public const int VkOem5 = (int) 220;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_OEM_6']"
		[Register ("VK_OEM_6")]
		public const int VkOem6 = (int) 221;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_OEM_7']"
		[Register ("VK_OEM_7")]
		public const int VkOem7 = (int) 222;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_OEM_ATTN']"
		[Register ("VK_OEM_ATTN")]
		public const int VkOemAttn = (int) 240;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_OEM_COMMA']"
		[Register ("VK_OEM_COMMA")]
		public const int VkOemComma = (int) 188;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_OEM_MINUS']"
		[Register ("VK_OEM_MINUS")]
		public const int VkOemMinus = (int) 189;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_OEM_PERIOD']"
		[Register ("VK_OEM_PERIOD")]
		public const int VkOemPeriod = (int) 190;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_OEM_PLUS']"
		[Register ("VK_OEM_PLUS")]
		public const int VkOemPlus = (int) 187;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_P']"
		[Register ("VK_P")]
		public const int VkP = (int) 80;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_PRIOR']"
		[Register ("VK_PRIOR")]
		public const int VkPrior = (int) 33;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_Q']"
		[Register ("VK_Q")]
		public const int VkQ = (int) 81;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_R']"
		[Register ("VK_R")]
		public const int VkR = (int) 82;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_RETURN']"
		[Register ("VK_RETURN")]
		public const int VkReturn = (int) 13;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_RIGHT']"
		[Register ("VK_RIGHT")]
		public const int VkRight = (int) 39;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_S']"
		[Register ("VK_S")]
		public const int VkS = (int) 83;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_SHIFT']"
		[Register ("VK_SHIFT")]
		public const int VkShift = (int) 16;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_SPACE']"
		[Register ("VK_SPACE")]
		public const int VkSpace = (int) 32;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_SUBTRACT']"
		[Register ("VK_SUBTRACT")]
		public const int VkSubtract = (int) 109;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_T']"
		[Register ("VK_T")]
		public const int VkT = (int) 84;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_TAB']"
		[Register ("VK_TAB")]
		public const int VkTab = (int) 9;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_U']"
		[Register ("VK_U")]
		public const int VkU = (int) 85;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_UP']"
		[Register ("VK_UP")]
		public const int VkUp = (int) 38;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_V']"
		[Register ("VK_V")]
		public const int VkV = (int) 86;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_W']"
		[Register ("VK_W")]
		public const int VkW = (int) 87;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_X']"
		[Register ("VK_X")]
		public const int VkX = (int) 88;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_Y']"
		[Register ("VK_Y")]
		public const int VkY = (int) 89;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/field[@name='VK_Z']"
		[Register ("VK_Z")]
		public const int VkZ = (int) 90;

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/epson/epos2/keyboard/Keyboard", typeof (Keyboard));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected Keyboard (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/constructor[@name='Keyboard' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register (".ctor", "(Landroid/content/Context;)V", "")]
		public unsafe Keyboard (global::Android.Content.Context? context) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Landroid/content/Context;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (context);
			}
		}

		static Delegate? cb_getAdmin;
#pragma warning disable 0169
		static Delegate GetGetAdminHandler ()
		{
			if (cb_getAdmin == null)
				cb_getAdmin = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetAdmin));
			return cb_getAdmin;
		}

		static IntPtr n_GetAdmin (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.Admin);
		}
#pragma warning restore 0169

		public virtual unsafe string? Admin {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/method[@name='getAdmin' and count(parameter)=0]"
			[Register ("getAdmin", "()Ljava/lang/String;", "GetGetAdminHandler")]
			get {
				const string __id = "getAdmin.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getLocation;
#pragma warning disable 0169
		static Delegate GetGetLocationHandler ()
		{
			if (cb_getLocation == null)
				cb_getLocation = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetLocation));
			return cb_getLocation;
		}

		static IntPtr n_GetLocation (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.Location);
		}
#pragma warning restore 0169

		public virtual unsafe string? Location {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/method[@name='getLocation' and count(parameter)=0]"
			[Register ("getLocation", "()Ljava/lang/String;", "GetGetLocationHandler")]
			get {
				const string __id = "getLocation.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getStatus;
#pragma warning disable 0169
		static Delegate GetGetStatusHandler ()
		{
			if (cb_getStatus == null)
				cb_getStatus = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetStatus));
			return cb_getStatus;
		}

		static IntPtr n_GetStatus (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.Status);
		}
#pragma warning restore 0169

		public virtual unsafe global::Com.Epson.Epos2.Keyboard.KeyboardStatusInfo? Status {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/method[@name='getStatus' and count(parameter)=0]"
			[Register ("getStatus", "()Lcom/epson/epos2/keyboard/KeyboardStatusInfo;", "GetGetStatusHandler")]
			get {
				const string __id = "getStatus.()Lcom/epson/epos2/keyboard/KeyboardStatusInfo;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Keyboard.KeyboardStatusInfo> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_checkHandle;
#pragma warning disable 0169
		static Delegate GetCheckHandleHandler ()
		{
			if (cb_checkHandle == null)
				cb_checkHandle = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_CheckHandle));
			return cb_checkHandle;
		}

		static void n_CheckHandle (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.CheckHandle ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/method[@name='checkHandle' and count(parameter)=0]"
		[Register ("checkHandle", "()V", "GetCheckHandleHandler")]
		protected virtual unsafe void CheckHandle ()
		{
			const string __id = "checkHandle.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_connect_Ljava_lang_String_I;
#pragma warning disable 0169
		static Delegate GetConnect_Ljava_lang_String_IHandler ()
		{
			if (cb_connect_Ljava_lang_String_I == null)
				cb_connect_Ljava_lang_String_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_V (n_Connect_Ljava_lang_String_I));
			return cb_connect_Ljava_lang_String_I;
		}

		static void n_Connect_Ljava_lang_String_I (IntPtr jnienv, IntPtr native__this, IntPtr native_target, int timeout)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var target = JNIEnv.GetString (native_target, JniHandleOwnership.DoNotTransfer);
			__this.Connect (target, timeout);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/method[@name='connect' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int']]"
		[Register ("connect", "(Ljava/lang/String;I)V", "GetConnect_Ljava_lang_String_IHandler")]
		public virtual unsafe void Connect (string? target, int timeout)
		{
			const string __id = "connect.(Ljava/lang/String;I)V";
			IntPtr native_target = JNIEnv.NewString ((string?)target);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_target);
				__args [1] = new JniArgumentValue (timeout);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_target);
			}
		}

		static Delegate? cb_disconnect;
#pragma warning disable 0169
		static Delegate GetDisconnectHandler ()
		{
			if (cb_disconnect == null)
				cb_disconnect = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Disconnect));
			return cb_disconnect;
		}

		static void n_Disconnect (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Disconnect ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/method[@name='disconnect' and count(parameter)=0]"
		[Register ("disconnect", "()V", "GetDisconnectHandler")]
		public virtual unsafe void Disconnect ()
		{
			const string __id = "disconnect.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_getPrefix;
#pragma warning disable 0169
		static Delegate GetGetPrefixHandler ()
		{
			if (cb_getPrefix == null)
				cb_getPrefix = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetPrefix));
			return cb_getPrefix;
		}

		static IntPtr n_GetPrefix (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetPrefix ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/method[@name='getPrefix' and count(parameter)=0]"
		[Register ("getPrefix", "()[I", "GetGetPrefixHandler")]
		public virtual unsafe int[]? GetPrefix ()
		{
			const string __id = "getPrefix.()[I";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (int[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (int));
			} finally {
			}
		}

		static Delegate? cb_initializeKeyboardInstance;
#pragma warning disable 0169
		static Delegate GetInitializeKeyboardInstanceHandler ()
		{
			if (cb_initializeKeyboardInstance == null)
				cb_initializeKeyboardInstance = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_InitializeKeyboardInstance));
			return cb_initializeKeyboardInstance;
		}

		static void n_InitializeKeyboardInstance (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.InitializeKeyboardInstance ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/method[@name='initializeKeyboardInstance' and count(parameter)=0]"
		[Register ("initializeKeyboardInstance", "()V", "GetInitializeKeyboardInstanceHandler")]
		protected virtual unsafe void InitializeKeyboardInstance ()
		{
			const string __id = "initializeKeyboardInstance.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2GetAdmin_J;
#pragma warning disable 0169
		static Delegate GetNativeEpos2GetAdmin_JHandler ()
		{
			if (cb_nativeEpos2GetAdmin_J == null)
				cb_nativeEpos2GetAdmin_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_L (n_NativeEpos2GetAdmin_J));
			return cb_nativeEpos2GetAdmin_J;
		}

		static IntPtr n_NativeEpos2GetAdmin_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.NativeEpos2GetAdmin (p0));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/method[@name='nativeEpos2GetAdmin' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeEpos2GetAdmin", "(J)Ljava/lang/String;", "GetNativeEpos2GetAdmin_JHandler")]
		protected virtual unsafe string? NativeEpos2GetAdmin (long p0)
		{
			const string __id = "nativeEpos2GetAdmin.(J)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2GetLocation_J;
#pragma warning disable 0169
		static Delegate GetNativeEpos2GetLocation_JHandler ()
		{
			if (cb_nativeEpos2GetLocation_J == null)
				cb_nativeEpos2GetLocation_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_L (n_NativeEpos2GetLocation_J));
			return cb_nativeEpos2GetLocation_J;
		}

		static IntPtr n_NativeEpos2GetLocation_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.NativeEpos2GetLocation (p0));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/method[@name='nativeEpos2GetLocation' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeEpos2GetLocation", "(J)Ljava/lang/String;", "GetNativeEpos2GetLocation_JHandler")]
		protected virtual unsafe string? NativeEpos2GetLocation (long p0)
		{
			const string __id = "nativeEpos2GetLocation.(J)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2GetPrefix_J;
#pragma warning disable 0169
		static Delegate GetNativeEpos2GetPrefix_JHandler ()
		{
			if (cb_nativeEpos2GetPrefix_J == null)
				cb_nativeEpos2GetPrefix_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_L (n_NativeEpos2GetPrefix_J));
			return cb_nativeEpos2GetPrefix_J;
		}

		static IntPtr n_NativeEpos2GetPrefix_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.NativeEpos2GetPrefix (p0));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/method[@name='nativeEpos2GetPrefix' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeEpos2GetPrefix", "(J)[I", "GetNativeEpos2GetPrefix_JHandler")]
		protected virtual unsafe int[]? NativeEpos2GetPrefix (long p0)
		{
			const string __id = "nativeEpos2GetPrefix.(J)[I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (int[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (int));
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2GetStatus_J;
#pragma warning disable 0169
		static Delegate GetNativeEpos2GetStatus_JHandler ()
		{
			if (cb_nativeEpos2GetStatus_J == null)
				cb_nativeEpos2GetStatus_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_L (n_NativeEpos2GetStatus_J));
			return cb_nativeEpos2GetStatus_J;
		}

		static IntPtr n_NativeEpos2GetStatus_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.NativeEpos2GetStatus (p0));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/method[@name='nativeEpos2GetStatus' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeEpos2GetStatus", "(J)Lcom/epson/epos2/keyboard/KeyboardStatusInfo;", "GetNativeEpos2GetStatus_JHandler")]
		protected virtual unsafe global::Com.Epson.Epos2.Keyboard.KeyboardStatusInfo? NativeEpos2GetStatus (long p0)
		{
			const string __id = "nativeEpos2GetStatus.(J)Lcom/epson/epos2/keyboard/KeyboardStatusInfo;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Keyboard.KeyboardStatusInfo> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2SetPrefix_JarrayI;
#pragma warning disable 0169
		static Delegate GetNativeEpos2SetPrefix_JarrayIHandler ()
		{
			if (cb_nativeEpos2SetPrefix_JarrayI == null)
				cb_nativeEpos2SetPrefix_JarrayI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJL_I (n_NativeEpos2SetPrefix_JarrayI));
			return cb_nativeEpos2SetPrefix_JarrayI;
		}

		static int n_NativeEpos2SetPrefix_JarrayI (IntPtr jnienv, IntPtr native__this, long p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p1 = (int[]?) JNIEnv.GetArray (native_p1, JniHandleOwnership.DoNotTransfer, typeof (int));
			int __ret = __this.NativeEpos2SetPrefix (p0, p1);
			if (p1 != null)
				JNIEnv.CopyArray (p1, native_p1);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/method[@name='nativeEpos2SetPrefix' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='int[]']]"
		[Register ("nativeEpos2SetPrefix", "(J[I)I", "GetNativeEpos2SetPrefix_JarrayIHandler")]
		protected virtual unsafe int NativeEpos2SetPrefix (long p0, int[]? p1)
		{
			const string __id = "nativeEpos2SetPrefix.(J[I)I";
			IntPtr native_p1 = JNIEnv.NewArray (p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (native_p1);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				if (p1 != null) {
					JNIEnv.CopyArray (native_p1, p1);
					JNIEnv.DeleteLocalRef (native_p1);
				}
				global::System.GC.KeepAlive (p1);
			}
		}

		static Delegate? cb_onKbdKeyPress_ILjava_lang_String_;
#pragma warning disable 0169
		static Delegate GetOnKbdKeyPress_ILjava_lang_String_Handler ()
		{
			if (cb_onKbdKeyPress_ILjava_lang_String_ == null)
				cb_onKbdKeyPress_ILjava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIL_V (n_OnKbdKeyPress_ILjava_lang_String_));
			return cb_onKbdKeyPress_ILjava_lang_String_;
		}

		static void n_OnKbdKeyPress_ILjava_lang_String_ (IntPtr jnienv, IntPtr native__this, int keyCode, IntPtr native_ascii)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var ascii = JNIEnv.GetString (native_ascii, JniHandleOwnership.DoNotTransfer);
			__this.OnKbdKeyPress (keyCode, ascii);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/method[@name='onKbdKeyPress' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='java.lang.String']]"
		[Register ("onKbdKeyPress", "(ILjava/lang/String;)V", "GetOnKbdKeyPress_ILjava_lang_String_Handler")]
		protected virtual unsafe void OnKbdKeyPress (int keyCode, string? ascii)
		{
			const string __id = "onKbdKeyPress.(ILjava/lang/String;)V";
			IntPtr native_ascii = JNIEnv.NewString ((string?)ascii);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (keyCode);
				__args [1] = new JniArgumentValue (native_ascii);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_ascii);
			}
		}

		static Delegate? cb_onKbdReadString_Ljava_lang_String_I;
#pragma warning disable 0169
		static Delegate GetOnKbdReadString_Ljava_lang_String_IHandler ()
		{
			if (cb_onKbdReadString_Ljava_lang_String_I == null)
				cb_onKbdReadString_Ljava_lang_String_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_V (n_OnKbdReadString_Ljava_lang_String_I));
			return cb_onKbdReadString_Ljava_lang_String_I;
		}

		static void n_OnKbdReadString_Ljava_lang_String_I (IntPtr jnienv, IntPtr native__this, IntPtr native_input, int prefix)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var input = JNIEnv.GetString (native_input, JniHandleOwnership.DoNotTransfer);
			__this.OnKbdReadString (input, prefix);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/method[@name='onKbdReadString' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int']]"
		[Register ("onKbdReadString", "(Ljava/lang/String;I)V", "GetOnKbdReadString_Ljava_lang_String_IHandler")]
		protected virtual unsafe void OnKbdReadString (string? input, int prefix)
		{
			const string __id = "onKbdReadString.(Ljava/lang/String;I)V";
			IntPtr native_input = JNIEnv.NewString ((string?)input);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_input);
				__args [1] = new JniArgumentValue (prefix);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_input);
			}
		}

		static Delegate? cb_setConnectionEventListener_Lcom_epson_epos2_ConnectionListener_;
#pragma warning disable 0169
		static Delegate GetSetConnectionEventListener_Lcom_epson_epos2_ConnectionListener_Handler ()
		{
			if (cb_setConnectionEventListener_Lcom_epson_epos2_ConnectionListener_ == null)
				cb_setConnectionEventListener_Lcom_epson_epos2_ConnectionListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetConnectionEventListener_Lcom_epson_epos2_ConnectionListener_));
			return cb_setConnectionEventListener_Lcom_epson_epos2_ConnectionListener_;
		}

		static void n_SetConnectionEventListener_Lcom_epson_epos2_ConnectionListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_listener)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var listener = (global::Com.Epson.Epos2.IConnectionListener?)global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.IConnectionListener> (native_listener, JniHandleOwnership.DoNotTransfer);
			__this.SetConnectionEventListener (listener);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/method[@name='setConnectionEventListener' and count(parameter)=1 and parameter[1][@type='com.epson.epos2.ConnectionListener']]"
		[Register ("setConnectionEventListener", "(Lcom/epson/epos2/ConnectionListener;)V", "GetSetConnectionEventListener_Lcom_epson_epos2_ConnectionListener_Handler")]
		public virtual unsafe void SetConnectionEventListener (global::Com.Epson.Epos2.IConnectionListener? listener)
		{
			const string __id = "setConnectionEventListener.(Lcom/epson/epos2/ConnectionListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((listener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) listener).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (listener);
			}
		}

		static Delegate? cb_setKeyPressEventListener_Lcom_epson_epos2_keyboard_KeyPressListener_;
#pragma warning disable 0169
		static Delegate GetSetKeyPressEventListener_Lcom_epson_epos2_keyboard_KeyPressListener_Handler ()
		{
			if (cb_setKeyPressEventListener_Lcom_epson_epos2_keyboard_KeyPressListener_ == null)
				cb_setKeyPressEventListener_Lcom_epson_epos2_keyboard_KeyPressListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetKeyPressEventListener_Lcom_epson_epos2_keyboard_KeyPressListener_));
			return cb_setKeyPressEventListener_Lcom_epson_epos2_keyboard_KeyPressListener_;
		}

		static void n_SetKeyPressEventListener_Lcom_epson_epos2_keyboard_KeyPressListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_target)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var target = (global::Com.Epson.Epos2.Keyboard.IKeyPressListener?)global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Keyboard.IKeyPressListener> (native_target, JniHandleOwnership.DoNotTransfer);
			__this.SetKeyPressEventListener (target);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/method[@name='setKeyPressEventListener' and count(parameter)=1 and parameter[1][@type='com.epson.epos2.keyboard.KeyPressListener']]"
		[Register ("setKeyPressEventListener", "(Lcom/epson/epos2/keyboard/KeyPressListener;)V", "GetSetKeyPressEventListener_Lcom_epson_epos2_keyboard_KeyPressListener_Handler")]
		public virtual unsafe void SetKeyPressEventListener (global::Com.Epson.Epos2.Keyboard.IKeyPressListener? target)
		{
			const string __id = "setKeyPressEventListener.(Lcom/epson/epos2/keyboard/KeyPressListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((target == null) ? IntPtr.Zero : ((global::Java.Lang.Object) target).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (target);
			}
		}

		static Delegate? cb_setPrefix_arrayI;
#pragma warning disable 0169
		static Delegate GetSetPrefix_arrayIHandler ()
		{
			if (cb_setPrefix_arrayI == null)
				cb_setPrefix_arrayI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetPrefix_arrayI));
			return cb_setPrefix_arrayI;
		}

		static void n_SetPrefix_arrayI (IntPtr jnienv, IntPtr native__this, IntPtr native_prefixes)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var prefixes = (int[]?) JNIEnv.GetArray (native_prefixes, JniHandleOwnership.DoNotTransfer, typeof (int));
			__this.SetPrefix (prefixes);
			if (prefixes != null)
				JNIEnv.CopyArray (prefixes, native_prefixes);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/method[@name='setPrefix' and count(parameter)=1 and parameter[1][@type='int[]']]"
		[Register ("setPrefix", "([I)V", "GetSetPrefix_arrayIHandler")]
		public virtual unsafe void SetPrefix (int[]? prefixes)
		{
			const string __id = "setPrefix.([I)V";
			IntPtr native_prefixes = JNIEnv.NewArray (prefixes);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_prefixes);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (prefixes != null) {
					JNIEnv.CopyArray (native_prefixes, prefixes);
					JNIEnv.DeleteLocalRef (native_prefixes);
				}
				global::System.GC.KeepAlive (prefixes);
			}
		}

		static Delegate? cb_setReadStringEventListener_Lcom_epson_epos2_keyboard_ReadStringListener_;
#pragma warning disable 0169
		static Delegate GetSetReadStringEventListener_Lcom_epson_epos2_keyboard_ReadStringListener_Handler ()
		{
			if (cb_setReadStringEventListener_Lcom_epson_epos2_keyboard_ReadStringListener_ == null)
				cb_setReadStringEventListener_Lcom_epson_epos2_keyboard_ReadStringListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetReadStringEventListener_Lcom_epson_epos2_keyboard_ReadStringListener_));
			return cb_setReadStringEventListener_Lcom_epson_epos2_keyboard_ReadStringListener_;
		}

		static void n_SetReadStringEventListener_Lcom_epson_epos2_keyboard_ReadStringListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_target)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var target = (global::Com.Epson.Epos2.Keyboard.IReadStringListener?)global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Keyboard.IReadStringListener> (native_target, JniHandleOwnership.DoNotTransfer);
			__this.SetReadStringEventListener (target);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.keyboard']/class[@name='Keyboard']/method[@name='setReadStringEventListener' and count(parameter)=1 and parameter[1][@type='com.epson.epos2.keyboard.ReadStringListener']]"
		[Register ("setReadStringEventListener", "(Lcom/epson/epos2/keyboard/ReadStringListener;)V", "GetSetReadStringEventListener_Lcom_epson_epos2_keyboard_ReadStringListener_Handler")]
		public virtual unsafe void SetReadStringEventListener (global::Com.Epson.Epos2.Keyboard.IReadStringListener? target)
		{
			const string __id = "setReadStringEventListener.(Lcom/epson/epos2/keyboard/ReadStringListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((target == null) ? IntPtr.Zero : ((global::Java.Lang.Object) target).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (target);
			}
		}

	}
}
