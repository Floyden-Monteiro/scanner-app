//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Epson.Eposdevice.Commbox {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBoxManager']"
	[global::Android.Runtime.Register ("com/epson/eposdevice/commbox/CommBoxManager", DoNotGenerateAcw=true)]
	public abstract partial class CommBoxManager : global::Java.Lang.Object {
		// Metadata.xml XPath class reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBoxManager.CloseCommBoxCallbackAdapter']"
		[global::Android.Runtime.Register ("com/epson/eposdevice/commbox/CommBoxManager$CloseCommBoxCallbackAdapter", DoNotGenerateAcw=true)]
		protected internal partial class CloseCommBoxCallbackAdapter : global::Java.Lang.Object {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/epson/eposdevice/commbox/CommBoxManager$CloseCommBoxCallbackAdapter", typeof (CloseCommBoxCallbackAdapter));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected CloseCommBoxCallbackAdapter (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBoxManager.CloseCommBoxCallbackAdapter']/constructor[@name='CommBoxManager.CloseCommBoxCallbackAdapter' and count(parameter)=3 and parameter[1][@type='com.epson.eposdevice.commbox.CommBoxManager'] and parameter[2][@type='com.epson.eposdevice.commbox.CloseCommBoxListener'] and parameter[3][@type='com.epson.eposdevice.commbox.CommBox']]"
			[Register (".ctor", "(Lcom/epson/eposdevice/commbox/CommBoxManager;Lcom/epson/eposdevice/commbox/CloseCommBoxListener;Lcom/epson/eposdevice/commbox/CommBox;)V", "")]
			public unsafe CloseCommBoxCallbackAdapter (global::Com.Epson.Eposdevice.Commbox.CommBoxManager? __self, global::Com.Epson.Eposdevice.Commbox.ICloseCommBoxListener? target, global::Com.Epson.Eposdevice.Commbox.CommBox? deleteBox) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType!) + ";Lcom/epson/eposdevice/commbox/CloseCommBoxListener;Lcom/epson/eposdevice/commbox/CommBox;)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [3];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					__args [1] = new JniArgumentValue ((target == null) ? IntPtr.Zero : ((global::Java.Lang.Object) target).Handle);
					__args [2] = new JniArgumentValue ((deleteBox == null) ? IntPtr.Zero : ((global::Java.Lang.Object) deleteBox).Handle);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (__self);
					global::System.GC.KeepAlive (target);
					global::System.GC.KeepAlive (deleteBox);
				}
			}

			static Delegate? cb_nativeOnCloseCommBox_JJLjava_lang_String_IJ;
#pragma warning disable 0169
			static Delegate GetNativeOnCloseCommBox_JJLjava_lang_String_IJHandler ()
			{
				if (cb_nativeOnCloseCommBox_JJLjava_lang_String_IJ == null)
					cb_nativeOnCloseCommBox_JJLjava_lang_String_IJ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJJLIJ_V (n_NativeOnCloseCommBox_JJLjava_lang_String_IJ));
				return cb_nativeOnCloseCommBox_JJLjava_lang_String_IJ;
			}

			static void n_NativeOnCloseCommBox_JJLjava_lang_String_IJ (IntPtr jnienv, IntPtr native__this, long commBoxMgrHandle, long commBoxHandle, IntPtr native_ipAddress, int code, long sequence)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBoxManager.CloseCommBoxCallbackAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var ipAddress = JNIEnv.GetString (native_ipAddress, JniHandleOwnership.DoNotTransfer);
				__this.NativeOnCloseCommBox (commBoxMgrHandle, commBoxHandle, ipAddress, code, sequence);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBoxManager.CloseCommBoxCallbackAdapter']/method[@name='nativeOnCloseCommBox' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='int'] and parameter[5][@type='long']]"
			[Register ("nativeOnCloseCommBox", "(JJLjava/lang/String;IJ)V", "GetNativeOnCloseCommBox_JJLjava_lang_String_IJHandler")]
			public virtual unsafe void NativeOnCloseCommBox (long commBoxMgrHandle, long commBoxHandle, string? ipAddress, int code, long sequence)
			{
				const string __id = "nativeOnCloseCommBox.(JJLjava/lang/String;IJ)V";
				IntPtr native_ipAddress = JNIEnv.NewString ((string?)ipAddress);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [5];
					__args [0] = new JniArgumentValue (commBoxMgrHandle);
					__args [1] = new JniArgumentValue (commBoxHandle);
					__args [2] = new JniArgumentValue (native_ipAddress);
					__args [3] = new JniArgumentValue (code);
					__args [4] = new JniArgumentValue (sequence);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_ipAddress);
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBoxManager.CommBoxAccessor']"
		[global::Android.Runtime.Register ("com/epson/eposdevice/commbox/CommBoxManager$CommBoxAccessor", DoNotGenerateAcw=true)]
		protected internal abstract partial class CommBoxAccessor : global::Com.Epson.Eposdevice.Commbox.CommBox {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/epson/eposdevice/commbox/CommBoxManager$CommBoxAccessor", typeof (CommBoxAccessor));

			internal static new IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected CommBoxAccessor (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBoxManager.CommBoxAccessor']/constructor[@name='CommBoxManager.CommBoxAccessor' and count(parameter)=2 and parameter[1][@type='com.epson.eposdevice.commbox.CommBoxManager'] and parameter[2][@type='long']]"
			[Register (".ctor", "(Lcom/epson/eposdevice/commbox/CommBoxManager;J)V", "")]
			protected unsafe CommBoxAccessor (global::Com.Epson.Eposdevice.Commbox.CommBoxManager? __self, long handle) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType!) + ";J)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					__args [1] = new JniArgumentValue (handle);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (__self);
				}
			}

			static Delegate? cb_deleteInstance;
#pragma warning disable 0169
			static Delegate GetDeleteInstanceHandler ()
			{
				if (cb_deleteInstance == null)
					cb_deleteInstance = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_DeleteInstance));
				return cb_deleteInstance;
			}

			static void n_DeleteInstance (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBoxManager.CommBoxAccessor> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.DeleteInstance ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBoxManager.CommBoxAccessor']/method[@name='deleteInstance' and count(parameter)=0]"
			[Register ("deleteInstance", "()V", "GetDeleteInstanceHandler")]
			protected virtual unsafe void DeleteInstance ()
			{
				const string __id = "deleteInstance.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			static Delegate? cb_getHandle;
#pragma warning disable 0169
			static Delegate GetGetHandleHandler ()
			{
				if (cb_getHandle == null)
					cb_getHandle = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_J (n_GetHandle));
				return cb_getHandle;
			}

			static long n_GetHandle (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBoxManager.CommBoxAccessor> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return __this.GetHandle ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBoxManager.CommBoxAccessor']/method[@name='getHandle' and count(parameter)=0]"
			[Register ("getHandle", "()J", "GetGetHandleHandler")]
			protected virtual unsafe long GetHandle ()
			{
				const string __id = "getHandle.()J";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt64Method (__id, this, null);
					return __rm;
				} finally {
				}
			}

		}

		[global::Android.Runtime.Register ("com/epson/eposdevice/commbox/CommBoxManager$CommBoxAccessor", DoNotGenerateAcw=true)]
		internal partial class CommBoxAccessorInvoker : CommBoxAccessor {
			public CommBoxAccessorInvoker (IntPtr handle, JniHandleOwnership transfer) : base (handle, transfer)
			{
			}

			static readonly JniPeerMembers _members = new XAPeerMembers ("com/epson/eposdevice/commbox/CommBoxManager$CommBoxAccessor", typeof (CommBoxAccessorInvoker));

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBox']/method[@name='outputBoxException' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Exception']]"
			[Register ("outputBoxException", "(Ljava/lang/String;Ljava/lang/Exception;)V", "GetOutputBoxException_Ljava_lang_String_Ljava_lang_Exception_Handler")]
			protected override unsafe void OutputBoxException (string? p0, global::Java.Lang.Exception? p1)
			{
				const string __id = "outputBoxException.(Ljava/lang/String;Ljava/lang/Exception;)V";
				IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue (native_p0);
					__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Throwable) p1).Handle);
					_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_p0);
					global::System.GC.KeepAlive (p1);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBox']/method[@name='outputBoxLogCallFunction' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
			[Register ("outputBoxLogCallFunction", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputBoxLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
			protected override unsafe void OutputBoxLogCallFunction (string? p0, params global::Java.Lang.Object[]? p1)
			{
				const string __id = "outputBoxLogCallFunction.(Ljava/lang/String;[Ljava/lang/Object;)V";
				IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
				IntPtr native_p1 = JNIEnv.NewArray (p1);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue (native_p0);
					__args [1] = new JniArgumentValue (native_p1);
					_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_p0);
					if (p1 != null) {
						JNIEnv.CopyArray (native_p1, p1);
						JNIEnv.DeleteLocalRef (native_p1);
					}
					global::System.GC.KeepAlive (p1);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBox']/method[@name='outputBoxLogEvent' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
			[Register ("outputBoxLogEvent", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputBoxLogEvent_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
			protected override unsafe void OutputBoxLogEvent (string? p0, params global::Java.Lang.Object[]? p1)
			{
				const string __id = "outputBoxLogEvent.(Ljava/lang/String;[Ljava/lang/Object;)V";
				IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
				IntPtr native_p1 = JNIEnv.NewArray (p1);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue (native_p0);
					__args [1] = new JniArgumentValue (native_p1);
					_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_p0);
					if (p1 != null) {
						JNIEnv.CopyArray (native_p1, p1);
						JNIEnv.DeleteLocalRef (native_p1);
					}
					global::System.GC.KeepAlive (p1);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBox']/method[@name='outputBoxLogReturnFunction' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
			[Register ("outputBoxLogReturnFunction", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputBoxLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
			protected override unsafe void OutputBoxLogReturnFunction (string? p0, params global::Java.Lang.Object[]? p1)
			{
				const string __id = "outputBoxLogReturnFunction.(Ljava/lang/String;[Ljava/lang/Object;)V";
				IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
				IntPtr native_p1 = JNIEnv.NewArray (p1);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue (native_p0);
					__args [1] = new JniArgumentValue (native_p1);
					_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_p0);
					if (p1 != null) {
						JNIEnv.CopyArray (native_p1, p1);
						JNIEnv.DeleteLocalRef (native_p1);
					}
					global::System.GC.KeepAlive (p1);
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBoxManager.OpenCommBoxCallbackAdapter']"
		[global::Android.Runtime.Register ("com/epson/eposdevice/commbox/CommBoxManager$OpenCommBoxCallbackAdapter", DoNotGenerateAcw=true)]
		protected internal partial class OpenCommBoxCallbackAdapter : global::Java.Lang.Object {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/epson/eposdevice/commbox/CommBoxManager$OpenCommBoxCallbackAdapter", typeof (OpenCommBoxCallbackAdapter));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected OpenCommBoxCallbackAdapter (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBoxManager.OpenCommBoxCallbackAdapter']/constructor[@name='CommBoxManager.OpenCommBoxCallbackAdapter' and count(parameter)=2 and parameter[1][@type='com.epson.eposdevice.commbox.CommBoxManager'] and parameter[2][@type='com.epson.eposdevice.commbox.OpenCommBoxListener']]"
			[Register (".ctor", "(Lcom/epson/eposdevice/commbox/CommBoxManager;Lcom/epson/eposdevice/commbox/OpenCommBoxListener;)V", "")]
			public unsafe OpenCommBoxCallbackAdapter (global::Com.Epson.Eposdevice.Commbox.CommBoxManager? __self, global::Com.Epson.Eposdevice.Commbox.IOpenCommBoxListener? target) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType!) + ";Lcom/epson/eposdevice/commbox/OpenCommBoxListener;)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					__args [1] = new JniArgumentValue ((target == null) ? IntPtr.Zero : ((global::Java.Lang.Object) target).Handle);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (__self);
					global::System.GC.KeepAlive (target);
				}
			}

			static Delegate? cb_nativeOnOpenCommBox_JJLjava_lang_String_IJ;
#pragma warning disable 0169
			static Delegate GetNativeOnOpenCommBox_JJLjava_lang_String_IJHandler ()
			{
				if (cb_nativeOnOpenCommBox_JJLjava_lang_String_IJ == null)
					cb_nativeOnOpenCommBox_JJLjava_lang_String_IJ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJJLIJ_V (n_NativeOnOpenCommBox_JJLjava_lang_String_IJ));
				return cb_nativeOnOpenCommBox_JJLjava_lang_String_IJ;
			}

			static void n_NativeOnOpenCommBox_JJLjava_lang_String_IJ (IntPtr jnienv, IntPtr native__this, long commBoxMgrHandle, long commBoxHandle, IntPtr native_ipAddress, int code, long sequence)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBoxManager.OpenCommBoxCallbackAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var ipAddress = JNIEnv.GetString (native_ipAddress, JniHandleOwnership.DoNotTransfer);
				__this.NativeOnOpenCommBox (commBoxMgrHandle, commBoxHandle, ipAddress, code, sequence);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBoxManager.OpenCommBoxCallbackAdapter']/method[@name='nativeOnOpenCommBox' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='int'] and parameter[5][@type='long']]"
			[Register ("nativeOnOpenCommBox", "(JJLjava/lang/String;IJ)V", "GetNativeOnOpenCommBox_JJLjava_lang_String_IJHandler")]
			public virtual unsafe void NativeOnOpenCommBox (long commBoxMgrHandle, long commBoxHandle, string? ipAddress, int code, long sequence)
			{
				const string __id = "nativeOnOpenCommBox.(JJLjava/lang/String;IJ)V";
				IntPtr native_ipAddress = JNIEnv.NewString ((string?)ipAddress);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [5];
					__args [0] = new JniArgumentValue (commBoxMgrHandle);
					__args [1] = new JniArgumentValue (commBoxHandle);
					__args [2] = new JniArgumentValue (native_ipAddress);
					__args [3] = new JniArgumentValue (code);
					__args [4] = new JniArgumentValue (sequence);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_ipAddress);
				}
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/epson/eposdevice/commbox/CommBoxManager", typeof (CommBoxManager));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected CommBoxManager (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBoxManager']/constructor[@name='CommBoxManager' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register (".ctor", "(J)V", "")]
		protected unsafe CommBoxManager (long handle) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(J)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_getInnerHandle;
#pragma warning disable 0169
		static Delegate GetGetInnerHandleHandler ()
		{
			if (cb_getInnerHandle == null)
				cb_getInnerHandle = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_J (n_GetInnerHandle));
			return cb_getInnerHandle;
		}

		static long n_GetInnerHandle (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBoxManager> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.InnerHandle;
		}
#pragma warning restore 0169

		protected virtual unsafe long InnerHandle {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBoxManager']/method[@name='getInnerHandle' and count(parameter)=0]"
			[Register ("getInnerHandle", "()J", "GetGetInnerHandleHandler")]
			get {
				const string __id = "getInnerHandle.()J";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt64Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_closeCommBox_Lcom_epson_eposdevice_commbox_CommBox_arrayILcom_epson_eposdevice_commbox_CloseCommBoxListener_;
#pragma warning disable 0169
		static Delegate GetCloseCommBox_Lcom_epson_eposdevice_commbox_CommBox_arrayILcom_epson_eposdevice_commbox_CloseCommBoxListener_Handler ()
		{
			if (cb_closeCommBox_Lcom_epson_eposdevice_commbox_CommBox_arrayILcom_epson_eposdevice_commbox_CloseCommBoxListener_ == null)
				cb_closeCommBox_Lcom_epson_eposdevice_commbox_CommBox_arrayILcom_epson_eposdevice_commbox_CloseCommBoxListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLL_V (n_CloseCommBox_Lcom_epson_eposdevice_commbox_CommBox_arrayILcom_epson_eposdevice_commbox_CloseCommBoxListener_));
			return cb_closeCommBox_Lcom_epson_eposdevice_commbox_CommBox_arrayILcom_epson_eposdevice_commbox_CloseCommBoxListener_;
		}

		static void n_CloseCommBox_Lcom_epson_eposdevice_commbox_CommBox_arrayILcom_epson_eposdevice_commbox_CloseCommBoxListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_commBoxObject, IntPtr native_sequence, IntPtr native_target)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBoxManager> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var commBoxObject = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBox> (native_commBoxObject, JniHandleOwnership.DoNotTransfer);
			var sequence = (int[]?) JNIEnv.GetArray (native_sequence, JniHandleOwnership.DoNotTransfer, typeof (int));
			var target = (global::Com.Epson.Eposdevice.Commbox.ICloseCommBoxListener?)global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.ICloseCommBoxListener> (native_target, JniHandleOwnership.DoNotTransfer);
			__this.CloseCommBox (commBoxObject, sequence, target);
			if (sequence != null)
				JNIEnv.CopyArray (sequence, native_sequence);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBoxManager']/method[@name='closeCommBox' and count(parameter)=3 and parameter[1][@type='com.epson.eposdevice.commbox.CommBox'] and parameter[2][@type='int[]'] and parameter[3][@type='com.epson.eposdevice.commbox.CloseCommBoxListener']]"
		[Register ("closeCommBox", "(Lcom/epson/eposdevice/commbox/CommBox;[ILcom/epson/eposdevice/commbox/CloseCommBoxListener;)V", "GetCloseCommBox_Lcom_epson_eposdevice_commbox_CommBox_arrayILcom_epson_eposdevice_commbox_CloseCommBoxListener_Handler")]
		public virtual unsafe void CloseCommBox (global::Com.Epson.Eposdevice.Commbox.CommBox? commBoxObject, int[]? sequence, global::Com.Epson.Eposdevice.Commbox.ICloseCommBoxListener? target)
		{
			const string __id = "closeCommBox.(Lcom/epson/eposdevice/commbox/CommBox;[ILcom/epson/eposdevice/commbox/CloseCommBoxListener;)V";
			IntPtr native_sequence = JNIEnv.NewArray (sequence);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((commBoxObject == null) ? IntPtr.Zero : ((global::Java.Lang.Object) commBoxObject).Handle);
				__args [1] = new JniArgumentValue (native_sequence);
				__args [2] = new JniArgumentValue ((target == null) ? IntPtr.Zero : ((global::Java.Lang.Object) target).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (sequence != null) {
					JNIEnv.CopyArray (native_sequence, sequence);
					JNIEnv.DeleteLocalRef (native_sequence);
				}
				global::System.GC.KeepAlive (commBoxObject);
				global::System.GC.KeepAlive (sequence);
				global::System.GC.KeepAlive (target);
			}
		}

		static Delegate? cb_createCommBoxInstance_J;
#pragma warning disable 0169
		static Delegate GetCreateCommBoxInstance_JHandler ()
		{
			if (cb_createCommBoxInstance_J == null)
				cb_createCommBoxInstance_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_L (n_CreateCommBoxInstance_J));
			return cb_createCommBoxInstance_J;
		}

		static IntPtr n_CreateCommBoxInstance_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBoxManager> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.CreateCommBoxInstance (p0));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBoxManager']/method[@name='createCommBoxInstance' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("createCommBoxInstance", "(J)Lcom/epson/eposdevice/commbox/CommBoxManager$CommBoxAccessor;", "GetCreateCommBoxInstance_JHandler")]
		protected abstract global::Com.Epson.Eposdevice.Commbox.CommBoxManager.CommBoxAccessor? CreateCommBoxInstance (long p0);

		static Delegate? cb_innerDeleteInstance;
#pragma warning disable 0169
		static Delegate GetInnerDeleteInstanceHandler ()
		{
			if (cb_innerDeleteInstance == null)
				cb_innerDeleteInstance = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_InnerDeleteInstance));
			return cb_innerDeleteInstance;
		}

		static void n_InnerDeleteInstance (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBoxManager> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.InnerDeleteInstance ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBoxManager']/method[@name='innerDeleteInstance' and count(parameter)=0]"
		[Register ("innerDeleteInstance", "()V", "GetInnerDeleteInstanceHandler")]
		protected virtual unsafe void InnerDeleteInstance ()
		{
			const string __id = "innerDeleteInstance.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_openCommBox_Ljava_lang_String_Ljava_lang_String_arrayILcom_epson_eposdevice_commbox_OpenCommBoxListener_;
#pragma warning disable 0169
		static Delegate GetOpenCommBox_Ljava_lang_String_Ljava_lang_String_arrayILcom_epson_eposdevice_commbox_OpenCommBoxListener_Handler ()
		{
			if (cb_openCommBox_Ljava_lang_String_Ljava_lang_String_arrayILcom_epson_eposdevice_commbox_OpenCommBoxListener_ == null)
				cb_openCommBox_Ljava_lang_String_Ljava_lang_String_arrayILcom_epson_eposdevice_commbox_OpenCommBoxListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLLL_V (n_OpenCommBox_Ljava_lang_String_Ljava_lang_String_arrayILcom_epson_eposdevice_commbox_OpenCommBoxListener_));
			return cb_openCommBox_Ljava_lang_String_Ljava_lang_String_arrayILcom_epson_eposdevice_commbox_OpenCommBoxListener_;
		}

		static void n_OpenCommBox_Ljava_lang_String_Ljava_lang_String_arrayILcom_epson_eposdevice_commbox_OpenCommBoxListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_boxId, IntPtr native_memberId, IntPtr native_sequence, IntPtr native_target)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBoxManager> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var boxId = JNIEnv.GetString (native_boxId, JniHandleOwnership.DoNotTransfer);
			var memberId = JNIEnv.GetString (native_memberId, JniHandleOwnership.DoNotTransfer);
			var sequence = (int[]?) JNIEnv.GetArray (native_sequence, JniHandleOwnership.DoNotTransfer, typeof (int));
			var target = (global::Com.Epson.Eposdevice.Commbox.IOpenCommBoxListener?)global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.IOpenCommBoxListener> (native_target, JniHandleOwnership.DoNotTransfer);
			__this.OpenCommBox (boxId, memberId, sequence, target);
			if (sequence != null)
				JNIEnv.CopyArray (sequence, native_sequence);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBoxManager']/method[@name='openCommBox' and count(parameter)=4 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='int[]'] and parameter[4][@type='com.epson.eposdevice.commbox.OpenCommBoxListener']]"
		[Register ("openCommBox", "(Ljava/lang/String;Ljava/lang/String;[ILcom/epson/eposdevice/commbox/OpenCommBoxListener;)V", "GetOpenCommBox_Ljava_lang_String_Ljava_lang_String_arrayILcom_epson_eposdevice_commbox_OpenCommBoxListener_Handler")]
		public virtual unsafe void OpenCommBox (string? boxId, string? memberId, int[]? sequence, global::Com.Epson.Eposdevice.Commbox.IOpenCommBoxListener? target)
		{
			const string __id = "openCommBox.(Ljava/lang/String;Ljava/lang/String;[ILcom/epson/eposdevice/commbox/OpenCommBoxListener;)V";
			IntPtr native_boxId = JNIEnv.NewString ((string?)boxId);
			IntPtr native_memberId = JNIEnv.NewString ((string?)memberId);
			IntPtr native_sequence = JNIEnv.NewArray (sequence);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (native_boxId);
				__args [1] = new JniArgumentValue (native_memberId);
				__args [2] = new JniArgumentValue (native_sequence);
				__args [3] = new JniArgumentValue ((target == null) ? IntPtr.Zero : ((global::Java.Lang.Object) target).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_boxId);
				JNIEnv.DeleteLocalRef (native_memberId);
				if (sequence != null) {
					JNIEnv.CopyArray (native_sequence, sequence);
					JNIEnv.DeleteLocalRef (native_sequence);
				}
				global::System.GC.KeepAlive (sequence);
				global::System.GC.KeepAlive (target);
			}
		}

		static Delegate? cb_outputException_Ljava_lang_String_Ljava_lang_Exception_;
#pragma warning disable 0169
		static Delegate GetOutputException_Ljava_lang_String_Ljava_lang_Exception_Handler ()
		{
			if (cb_outputException_Ljava_lang_String_Ljava_lang_Exception_ == null)
				cb_outputException_Ljava_lang_String_Ljava_lang_Exception_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_OutputException_Ljava_lang_String_Ljava_lang_Exception_));
			return cb_outputException_Ljava_lang_String_Ljava_lang_Exception_;
		}

		static void n_OutputException_Ljava_lang_String_Ljava_lang_Exception_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBoxManager> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = global::Java.Lang.Object.GetObject<global::Java.Lang.Exception> (native_p1, JniHandleOwnership.DoNotTransfer);
			__this.OutputException (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBoxManager']/method[@name='outputException' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Exception']]"
		[Register ("outputException", "(Ljava/lang/String;Ljava/lang/Exception;)V", "GetOutputException_Ljava_lang_String_Ljava_lang_Exception_Handler")]
		protected abstract void OutputException (string? p0, global::Java.Lang.Exception? p1);

		static Delegate? cb_outputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetOutputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler ()
		{
			if (cb_outputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_ == null)
				cb_outputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_OutputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_));
			return cb_outputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_;
		}

		static void n_OutputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBoxManager> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = (global::Java.Lang.Object[]?) JNIEnv.GetArray (native_p1, JniHandleOwnership.DoNotTransfer, typeof (global::Java.Lang.Object));
			__this.OutputLogCallFunction (p0, p1);
			if (p1 != null)
				JNIEnv.CopyArray (p1, native_p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBoxManager']/method[@name='outputLogCallFunction' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("outputLogCallFunction", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		protected abstract void OutputLogCallFunction (string? p0, params global::Java.Lang.Object[]? p1);

		static Delegate? cb_outputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetOutputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_Handler ()
		{
			if (cb_outputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_ == null)
				cb_outputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_OutputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_));
			return cb_outputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_;
		}

		static void n_OutputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBoxManager> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = (global::Java.Lang.Object[]?) JNIEnv.GetArray (native_p1, JniHandleOwnership.DoNotTransfer, typeof (global::Java.Lang.Object));
			__this.OutputLogEvent (p0, p1);
			if (p1 != null)
				JNIEnv.CopyArray (p1, native_p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBoxManager']/method[@name='outputLogEvent' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("outputLogEvent", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		protected abstract void OutputLogEvent (string? p0, params global::Java.Lang.Object[]? p1);

		static Delegate? cb_outputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetOutputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler ()
		{
			if (cb_outputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_ == null)
				cb_outputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_OutputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_));
			return cb_outputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_;
		}

		static void n_OutputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBoxManager> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = (global::Java.Lang.Object[]?) JNIEnv.GetArray (native_p1, JniHandleOwnership.DoNotTransfer, typeof (global::Java.Lang.Object));
			__this.OutputLogReturnFunction (p0, p1);
			if (p1 != null)
				JNIEnv.CopyArray (p1, native_p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBoxManager']/method[@name='outputLogReturnFunction' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("outputLogReturnFunction", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		protected abstract void OutputLogReturnFunction (string? p0, params global::Java.Lang.Object[]? p1);

	}

	[global::Android.Runtime.Register ("com/epson/eposdevice/commbox/CommBoxManager", DoNotGenerateAcw=true)]
	internal partial class CommBoxManagerInvoker : CommBoxManager {
		public CommBoxManagerInvoker (IntPtr handle, JniHandleOwnership transfer) : base (handle, transfer)
		{
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/epson/eposdevice/commbox/CommBoxManager", typeof (CommBoxManagerInvoker));

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBoxManager']/method[@name='createCommBoxInstance' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("createCommBoxInstance", "(J)Lcom/epson/eposdevice/commbox/CommBoxManager$CommBoxAccessor;", "GetCreateCommBoxInstance_JHandler")]
		protected override unsafe global::Com.Epson.Eposdevice.Commbox.CommBoxManager.CommBoxAccessor? CreateCommBoxInstance (long p0)
		{
			const string __id = "createCommBoxInstance.(J)Lcom/epson/eposdevice/commbox/CommBoxManager$CommBoxAccessor;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeAbstractObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBoxManager.CommBoxAccessor> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBoxManager']/method[@name='outputException' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Exception']]"
		[Register ("outputException", "(Ljava/lang/String;Ljava/lang/Exception;)V", "GetOutputException_Ljava_lang_String_Ljava_lang_Exception_Handler")]
		protected override unsafe void OutputException (string? p0, global::Java.Lang.Exception? p1)
		{
			const string __id = "outputException.(Ljava/lang/String;Ljava/lang/Exception;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Throwable) p1).Handle);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBoxManager']/method[@name='outputLogCallFunction' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("outputLogCallFunction", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		protected override unsafe void OutputLogCallFunction (string? p0, params global::Java.Lang.Object[]? p1)
		{
			const string __id = "outputLogCallFunction.(Ljava/lang/String;[Ljava/lang/Object;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
			IntPtr native_p1 = JNIEnv.NewArray (p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				if (p1 != null) {
					JNIEnv.CopyArray (native_p1, p1);
					JNIEnv.DeleteLocalRef (native_p1);
				}
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBoxManager']/method[@name='outputLogEvent' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("outputLogEvent", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		protected override unsafe void OutputLogEvent (string? p0, params global::Java.Lang.Object[]? p1)
		{
			const string __id = "outputLogEvent.(Ljava/lang/String;[Ljava/lang/Object;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
			IntPtr native_p1 = JNIEnv.NewArray (p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				if (p1 != null) {
					JNIEnv.CopyArray (native_p1, p1);
					JNIEnv.DeleteLocalRef (native_p1);
				}
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBoxManager']/method[@name='outputLogReturnFunction' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("outputLogReturnFunction", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		protected override unsafe void OutputLogReturnFunction (string? p0, params global::Java.Lang.Object[]? p1)
		{
			const string __id = "outputLogReturnFunction.(Ljava/lang/String;[Ljava/lang/Object;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
			IntPtr native_p1 = JNIEnv.NewArray (p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				if (p1 != null) {
					JNIEnv.CopyArray (native_p1, p1);
					JNIEnv.DeleteLocalRef (native_p1);
				}
				global::System.GC.KeepAlive (p1);
			}
		}

	}
}
