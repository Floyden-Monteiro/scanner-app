//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Epson.Epos2.Printer {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.epson.epos2.printer']/class[@name='EposSdkJson']"
	[global::Android.Runtime.Register ("com/epson/epos2/printer/EposSdkJson", DoNotGenerateAcw=true)]
	public partial class EposSdkJson : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/epson/epos2/printer/EposSdkJson", typeof (EposSdkJson));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected EposSdkJson (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.epson.epos2.printer']/class[@name='EposSdkJson']/constructor[@name='EposSdkJson' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe EposSdkJson () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.printer']/class[@name='EposSdkJson']/method[@name='appendSdkJson' and count(parameter)=3 and parameter[1][@type='org.json.JSONObject'] and parameter[2][@type='java.lang.String[]'] and parameter[3][@type='java.lang.String']]"
		[Register ("appendSdkJson", "(Lorg/json/JSONObject;[Ljava/lang/String;Ljava/lang/String;)V", "")]
		public static unsafe void AppendSdkJson (global::Org.Json.JSONObject? target, string[]? keys, string? value)
		{
			const string __id = "appendSdkJson.(Lorg/json/JSONObject;[Ljava/lang/String;Ljava/lang/String;)V";
			IntPtr native_keys = JNIEnv.NewArray (keys);
			IntPtr native_value = JNIEnv.NewString ((string?)value);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((target == null) ? IntPtr.Zero : ((global::Java.Lang.Object) target).Handle);
				__args [1] = new JniArgumentValue (native_keys);
				__args [2] = new JniArgumentValue (native_value);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				if (keys != null) {
					JNIEnv.CopyArray (native_keys, keys);
					JNIEnv.DeleteLocalRef (native_keys);
				}
				JNIEnv.DeleteLocalRef (native_value);
				global::System.GC.KeepAlive (target);
				global::System.GC.KeepAlive (keys);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.printer']/class[@name='EposSdkJson']/method[@name='createSdkJson' and count(parameter)=2 and parameter[1][@type='java.lang.String[][]'] and parameter[2][@type='java.lang.String']]"
		[Register ("createSdkJson", "([[Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string? CreateSdkJson (string[][]? keyList, string? jsonString)
		{
			const string __id = "createSdkJson.([[Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_keyList = JNIEnv.NewArray (keyList);
			IntPtr native_jsonString = JNIEnv.NewString ((string?)jsonString);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_keyList);
				__args [1] = new JniArgumentValue (native_jsonString);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				if (keyList != null) {
					JNIEnv.CopyArray (native_keyList, keyList);
					JNIEnv.DeleteLocalRef (native_keyList);
				}
				JNIEnv.DeleteLocalRef (native_jsonString);
				global::System.GC.KeepAlive (keyList);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.printer']/class[@name='EposSdkJson']/method[@name='jsonToSdkJson' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("jsonToSdkJson", "(Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string? JsonToSdkJson (string? jsonString)
		{
			const string __id = "jsonToSdkJson.(Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_jsonString = JNIEnv.NewString ((string?)jsonString);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_jsonString);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_jsonString);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.printer']/class[@name='EposSdkJson']/method[@name='jsonToSdkJsonDeprecated' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("jsonToSdkJsonDeprecated", "(Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string? JsonToSdkJsonDeprecated (string? jsonString)
		{
			const string __id = "jsonToSdkJsonDeprecated.(Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_jsonString = JNIEnv.NewString ((string?)jsonString);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_jsonString);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_jsonString);
			}
		}

	}
}
