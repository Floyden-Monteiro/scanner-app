//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Epson.Eposdevice.Display {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']"
	[global::Android.Runtime.Register ("com/epson/eposdevice/display/Display", DoNotGenerateAcw=true)]
	public abstract partial class Display : global::Java.Lang.Object {
		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/field[@name='BRIGHTNESS_100']"
		[Register ("BRIGHTNESS_100")]
		public const int Brightness100 = (int) 3;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/field[@name='BRIGHTNESS_20']"
		[Register ("BRIGHTNESS_20")]
		public const int Brightness20 = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/field[@name='BRIGHTNESS_40']"
		[Register ("BRIGHTNESS_40")]
		public const int Brightness40 = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/field[@name='BRIGHTNESS_60']"
		[Register ("BRIGHTNESS_60")]
		public const int Brightness60 = (int) 2;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/field[@name='CURSOR_NONE']"
		[Register ("CURSOR_NONE")]
		public const int CursorNone = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/field[@name='CURSOR_UNDERLINE']"
		[Register ("CURSOR_UNDERLINE")]
		public const int CursorUnderline = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/field[@name='FALSE']"
		[Register ("FALSE")]
		public const int False = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/field[@name='LANG_EN']"
		[Register ("LANG_EN")]
		public const int LangEn = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/field[@name='LANG_JA']"
		[Register ("LANG_JA")]
		public const int LangJa = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/field[@name='MARQUEE_PLACE']"
		[Register ("MARQUEE_PLACE")]
		public const int MarqueePlace = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/field[@name='MARQUEE_WALK']"
		[Register ("MARQUEE_WALK")]
		public const int MarqueeWalk = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/field[@name='MOVE_BOTTOM_LEFT']"
		[Register ("MOVE_BOTTOM_LEFT")]
		public const int MoveBottomLeft = (int) 2;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/field[@name='MOVE_BOTTOM_RIGHT']"
		[Register ("MOVE_BOTTOM_RIGHT")]
		public const int MoveBottomRight = (int) 3;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/field[@name='MOVE_TOP_LEFT']"
		[Register ("MOVE_TOP_LEFT")]
		public const int MoveTopLeft = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/field[@name='MOVE_TOP_RIGHT']"
		[Register ("MOVE_TOP_RIGHT")]
		public const int MoveTopRight = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/field[@name='SCROLL_HORIZONTAL']"
		[Register ("SCROLL_HORIZONTAL")]
		public const int ScrollHorizontal = (int) 2;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/field[@name='SCROLL_OVERWRITE']"
		[Register ("SCROLL_OVERWRITE")]
		public const int ScrollOverwrite = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/field[@name='SCROLL_VERTICAL']"
		[Register ("SCROLL_VERTICAL")]
		public const int ScrollVertical = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/field[@name='TRUE']"
		[Register ("TRUE")]
		public const int True = (int) 1;

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/epson/eposdevice/display/Display", typeof (Display));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected Display (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/constructor[@name='Display' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register (".ctor", "(J)V", "")]
		protected unsafe Display (long dspHandle) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(J)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (dspHandle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_getInnerHandle;
#pragma warning disable 0169
		static Delegate GetGetInnerHandleHandler ()
		{
			if (cb_getInnerHandle == null)
				cb_getInnerHandle = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_J (n_GetInnerHandle));
			return cb_getInnerHandle;
		}

		static long n_GetInnerHandle (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.InnerHandle;
		}
#pragma warning restore 0169

		protected virtual unsafe long InnerHandle {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='getInnerHandle' and count(parameter)=0]"
			[Register ("getInnerHandle", "()J", "GetGetInnerHandleHandler")]
			get {
				const string __id = "getInnerHandle.()J";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt64Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_addCommand_arrayB;
#pragma warning disable 0169
		static Delegate GetAddCommand_arrayBHandler ()
		{
			if (cb_addCommand_arrayB == null)
				cb_addCommand_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_AddCommand_arrayB));
			return cb_addCommand_arrayB;
		}

		static void n_AddCommand_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_data)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var data = (byte[]?) JNIEnv.GetArray (native_data, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.AddCommand (data);
			if (data != null)
				JNIEnv.CopyArray (data, native_data);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='addCommand' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("addCommand", "([B)V", "GetAddCommand_arrayBHandler")]
		public virtual unsafe void AddCommand (byte[]? data)
		{
			const string __id = "addCommand.([B)V";
			IntPtr native_data = JNIEnv.NewArray (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_data);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (data != null) {
					JNIEnv.CopyArray (native_data, data);
					JNIEnv.DeleteLocalRef (native_data);
				}
				global::System.GC.KeepAlive (data);
			}
		}

		static Delegate? cb_addMarquee_Ljava_lang_String_IIIII;
#pragma warning disable 0169
		static Delegate GetAddMarquee_Ljava_lang_String_IIIIIHandler ()
		{
			if (cb_addMarquee_Ljava_lang_String_IIIII == null)
				cb_addMarquee_Ljava_lang_String_IIIII = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLIIIII_V (n_AddMarquee_Ljava_lang_String_IIIII));
			return cb_addMarquee_Ljava_lang_String_IIIII;
		}

		static void n_AddMarquee_Ljava_lang_String_IIIII (IntPtr jnienv, IntPtr native__this, IntPtr native_data, int format, int unitWait, int repeatWait, int repeatCount, int lang)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var data = JNIEnv.GetString (native_data, JniHandleOwnership.DoNotTransfer);
			__this.AddMarquee (data, format, unitWait, repeatWait, repeatCount, lang);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='addMarquee' and count(parameter)=6 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]"
		[Register ("addMarquee", "(Ljava/lang/String;IIIII)V", "GetAddMarquee_Ljava_lang_String_IIIIIHandler")]
		public virtual unsafe void AddMarquee (string? data, int format, int unitWait, int repeatWait, int repeatCount, int lang)
		{
			const string __id = "addMarquee.(Ljava/lang/String;IIIII)V";
			IntPtr native_data = JNIEnv.NewString ((string?)data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (native_data);
				__args [1] = new JniArgumentValue (format);
				__args [2] = new JniArgumentValue (unitWait);
				__args [3] = new JniArgumentValue (repeatWait);
				__args [4] = new JniArgumentValue (repeatCount);
				__args [5] = new JniArgumentValue (lang);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
			}
		}

		static Delegate? cb_addReverseText_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetAddReverseText_Ljava_lang_String_Handler ()
		{
			if (cb_addReverseText_Ljava_lang_String_ == null)
				cb_addReverseText_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_AddReverseText_Ljava_lang_String_));
			return cb_addReverseText_Ljava_lang_String_;
		}

		static void n_AddReverseText_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_data)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var data = JNIEnv.GetString (native_data, JniHandleOwnership.DoNotTransfer);
			__this.AddReverseText (data);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='addReverseText' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("addReverseText", "(Ljava/lang/String;)V", "GetAddReverseText_Ljava_lang_String_Handler")]
		public virtual unsafe void AddReverseText (string? data)
		{
			const string __id = "addReverseText.(Ljava/lang/String;)V";
			IntPtr native_data = JNIEnv.NewString ((string?)data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_data);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
			}
		}

		static Delegate? cb_addReverseText_Ljava_lang_String_I;
#pragma warning disable 0169
		static Delegate GetAddReverseText_Ljava_lang_String_IHandler ()
		{
			if (cb_addReverseText_Ljava_lang_String_I == null)
				cb_addReverseText_Ljava_lang_String_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_V (n_AddReverseText_Ljava_lang_String_I));
			return cb_addReverseText_Ljava_lang_String_I;
		}

		static void n_AddReverseText_Ljava_lang_String_I (IntPtr jnienv, IntPtr native__this, IntPtr native_data, int lang)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var data = JNIEnv.GetString (native_data, JniHandleOwnership.DoNotTransfer);
			__this.AddReverseText (data, lang);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='addReverseText' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int']]"
		[Register ("addReverseText", "(Ljava/lang/String;I)V", "GetAddReverseText_Ljava_lang_String_IHandler")]
		public virtual unsafe void AddReverseText (string? data, int lang)
		{
			const string __id = "addReverseText.(Ljava/lang/String;I)V";
			IntPtr native_data = JNIEnv.NewString ((string?)data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_data);
				__args [1] = new JniArgumentValue (lang);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
			}
		}

		static Delegate? cb_addReverseText_Ljava_lang_String_II;
#pragma warning disable 0169
		static Delegate GetAddReverseText_Ljava_lang_String_IIHandler ()
		{
			if (cb_addReverseText_Ljava_lang_String_II == null)
				cb_addReverseText_Ljava_lang_String_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLII_V (n_AddReverseText_Ljava_lang_String_II));
			return cb_addReverseText_Ljava_lang_String_II;
		}

		static void n_AddReverseText_Ljava_lang_String_II (IntPtr jnienv, IntPtr native__this, IntPtr native_data, int x, int y)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var data = JNIEnv.GetString (native_data, JniHandleOwnership.DoNotTransfer);
			__this.AddReverseText (data, x, y);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='addReverseText' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[Register ("addReverseText", "(Ljava/lang/String;II)V", "GetAddReverseText_Ljava_lang_String_IIHandler")]
		public virtual unsafe void AddReverseText (string? data, int x, int y)
		{
			const string __id = "addReverseText.(Ljava/lang/String;II)V";
			IntPtr native_data = JNIEnv.NewString ((string?)data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_data);
				__args [1] = new JniArgumentValue (x);
				__args [2] = new JniArgumentValue (y);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
			}
		}

		static Delegate? cb_addReverseText_Ljava_lang_String_III;
#pragma warning disable 0169
		static Delegate GetAddReverseText_Ljava_lang_String_IIIHandler ()
		{
			if (cb_addReverseText_Ljava_lang_String_III == null)
				cb_addReverseText_Ljava_lang_String_III = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLIII_V (n_AddReverseText_Ljava_lang_String_III));
			return cb_addReverseText_Ljava_lang_String_III;
		}

		static void n_AddReverseText_Ljava_lang_String_III (IntPtr jnienv, IntPtr native__this, IntPtr native_data, int x, int y, int lang)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var data = JNIEnv.GetString (native_data, JniHandleOwnership.DoNotTransfer);
			__this.AddReverseText (data, x, y, lang);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='addReverseText' and count(parameter)=4 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
		[Register ("addReverseText", "(Ljava/lang/String;III)V", "GetAddReverseText_Ljava_lang_String_IIIHandler")]
		public virtual unsafe void AddReverseText (string? data, int x, int y, int lang)
		{
			const string __id = "addReverseText.(Ljava/lang/String;III)V";
			IntPtr native_data = JNIEnv.NewString ((string?)data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (native_data);
				__args [1] = new JniArgumentValue (x);
				__args [2] = new JniArgumentValue (y);
				__args [3] = new JniArgumentValue (lang);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
			}
		}

		static Delegate? cb_addText_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetAddText_Ljava_lang_String_Handler ()
		{
			if (cb_addText_Ljava_lang_String_ == null)
				cb_addText_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_AddText_Ljava_lang_String_));
			return cb_addText_Ljava_lang_String_;
		}

		static void n_AddText_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_data)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var data = JNIEnv.GetString (native_data, JniHandleOwnership.DoNotTransfer);
			__this.AddText (data);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='addText' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("addText", "(Ljava/lang/String;)V", "GetAddText_Ljava_lang_String_Handler")]
		public virtual unsafe void AddText (string? data)
		{
			const string __id = "addText.(Ljava/lang/String;)V";
			IntPtr native_data = JNIEnv.NewString ((string?)data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_data);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
			}
		}

		static Delegate? cb_addText_Ljava_lang_String_I;
#pragma warning disable 0169
		static Delegate GetAddText_Ljava_lang_String_IHandler ()
		{
			if (cb_addText_Ljava_lang_String_I == null)
				cb_addText_Ljava_lang_String_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_V (n_AddText_Ljava_lang_String_I));
			return cb_addText_Ljava_lang_String_I;
		}

		static void n_AddText_Ljava_lang_String_I (IntPtr jnienv, IntPtr native__this, IntPtr native_data, int lang)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var data = JNIEnv.GetString (native_data, JniHandleOwnership.DoNotTransfer);
			__this.AddText (data, lang);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='addText' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int']]"
		[Register ("addText", "(Ljava/lang/String;I)V", "GetAddText_Ljava_lang_String_IHandler")]
		public virtual unsafe void AddText (string? data, int lang)
		{
			const string __id = "addText.(Ljava/lang/String;I)V";
			IntPtr native_data = JNIEnv.NewString ((string?)data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_data);
				__args [1] = new JniArgumentValue (lang);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
			}
		}

		static Delegate? cb_addText_Ljava_lang_String_II;
#pragma warning disable 0169
		static Delegate GetAddText_Ljava_lang_String_IIHandler ()
		{
			if (cb_addText_Ljava_lang_String_II == null)
				cb_addText_Ljava_lang_String_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLII_V (n_AddText_Ljava_lang_String_II));
			return cb_addText_Ljava_lang_String_II;
		}

		static void n_AddText_Ljava_lang_String_II (IntPtr jnienv, IntPtr native__this, IntPtr native_data, int x, int y)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var data = JNIEnv.GetString (native_data, JniHandleOwnership.DoNotTransfer);
			__this.AddText (data, x, y);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='addText' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[Register ("addText", "(Ljava/lang/String;II)V", "GetAddText_Ljava_lang_String_IIHandler")]
		public virtual unsafe void AddText (string? data, int x, int y)
		{
			const string __id = "addText.(Ljava/lang/String;II)V";
			IntPtr native_data = JNIEnv.NewString ((string?)data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_data);
				__args [1] = new JniArgumentValue (x);
				__args [2] = new JniArgumentValue (y);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
			}
		}

		static Delegate? cb_addText_Ljava_lang_String_III;
#pragma warning disable 0169
		static Delegate GetAddText_Ljava_lang_String_IIIHandler ()
		{
			if (cb_addText_Ljava_lang_String_III == null)
				cb_addText_Ljava_lang_String_III = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLIII_V (n_AddText_Ljava_lang_String_III));
			return cb_addText_Ljava_lang_String_III;
		}

		static void n_AddText_Ljava_lang_String_III (IntPtr jnienv, IntPtr native__this, IntPtr native_data, int x, int y, int lang)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var data = JNIEnv.GetString (native_data, JniHandleOwnership.DoNotTransfer);
			__this.AddText (data, x, y, lang);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='addText' and count(parameter)=4 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
		[Register ("addText", "(Ljava/lang/String;III)V", "GetAddText_Ljava_lang_String_IIIHandler")]
		public virtual unsafe void AddText (string? data, int x, int y, int lang)
		{
			const string __id = "addText.(Ljava/lang/String;III)V";
			IntPtr native_data = JNIEnv.NewString ((string?)data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (native_data);
				__args [1] = new JniArgumentValue (x);
				__args [2] = new JniArgumentValue (y);
				__args [3] = new JniArgumentValue (lang);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
			}
		}

		static Delegate? cb_checkHandle;
#pragma warning disable 0169
		static Delegate GetCheckHandleHandler ()
		{
			if (cb_checkHandle == null)
				cb_checkHandle = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_CheckHandle));
			return cb_checkHandle;
		}

		static void n_CheckHandle (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.CheckHandle ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='checkHandle' and count(parameter)=0]"
		[Register ("checkHandle", "()V", "GetCheckHandleHandler")]
		protected virtual unsafe void CheckHandle ()
		{
			const string __id = "checkHandle.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_clearCommandBuffer;
#pragma warning disable 0169
		static Delegate GetClearCommandBufferHandler ()
		{
			if (cb_clearCommandBuffer == null)
				cb_clearCommandBuffer = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_ClearCommandBuffer));
			return cb_clearCommandBuffer;
		}

		static void n_ClearCommandBuffer (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.ClearCommandBuffer ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='clearCommandBuffer' and count(parameter)=0]"
		[Register ("clearCommandBuffer", "()V", "GetClearCommandBufferHandler")]
		public virtual unsafe void ClearCommandBuffer ()
		{
			const string __id = "clearCommandBuffer.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_clearWindow;
#pragma warning disable 0169
		static Delegate GetClearWindowHandler ()
		{
			if (cb_clearWindow == null)
				cb_clearWindow = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_ClearWindow));
			return cb_clearWindow;
		}

		static void n_ClearWindow (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.ClearWindow ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='clearWindow' and count(parameter)=0]"
		[Register ("clearWindow", "()V", "GetClearWindowHandler")]
		public virtual unsafe void ClearWindow ()
		{
			const string __id = "clearWindow.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_createWindow_IIIIII;
#pragma warning disable 0169
		static Delegate GetCreateWindow_IIIIIIHandler ()
		{
			if (cb_createWindow_IIIIII == null)
				cb_createWindow_IIIIII = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIIIIII_V (n_CreateWindow_IIIIII));
			return cb_createWindow_IIIIII;
		}

		static void n_CreateWindow_IIIIII (IntPtr jnienv, IntPtr native__this, int number, int x, int y, int width, int height, int scrollMode)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.CreateWindow (number, x, y, width, height, scrollMode);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='createWindow' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]"
		[Register ("createWindow", "(IIIIII)V", "GetCreateWindow_IIIIIIHandler")]
		public virtual unsafe void CreateWindow (int number, int x, int y, int width, int height, int scrollMode)
		{
			const string __id = "createWindow.(IIIIII)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (number);
				__args [1] = new JniArgumentValue (x);
				__args [2] = new JniArgumentValue (y);
				__args [3] = new JniArgumentValue (width);
				__args [4] = new JniArgumentValue (height);
				__args [5] = new JniArgumentValue (scrollMode);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_destroyWindow_I;
#pragma warning disable 0169
		static Delegate GetDestroyWindow_IHandler ()
		{
			if (cb_destroyWindow_I == null)
				cb_destroyWindow_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_DestroyWindow_I));
			return cb_destroyWindow_I;
		}

		static void n_DestroyWindow_I (IntPtr jnienv, IntPtr native__this, int number)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.DestroyWindow (number);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='destroyWindow' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("destroyWindow", "(I)V", "GetDestroyWindow_IHandler")]
		public virtual unsafe void DestroyWindow (int number)
		{
			const string __id = "destroyWindow.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (number);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_innerDeleteInstance;
#pragma warning disable 0169
		static Delegate GetInnerDeleteInstanceHandler ()
		{
			if (cb_innerDeleteInstance == null)
				cb_innerDeleteInstance = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_InnerDeleteInstance));
			return cb_innerDeleteInstance;
		}

		static void n_InnerDeleteInstance (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.InnerDeleteInstance ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='innerDeleteInstance' and count(parameter)=0]"
		[Register ("innerDeleteInstance", "()V", "GetInnerDeleteInstanceHandler")]
		protected virtual unsafe void InnerDeleteInstance ()
		{
			const string __id = "innerDeleteInstance.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_moveCursorPosition_I;
#pragma warning disable 0169
		static Delegate GetMoveCursorPosition_IHandler ()
		{
			if (cb_moveCursorPosition_I == null)
				cb_moveCursorPosition_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_MoveCursorPosition_I));
			return cb_moveCursorPosition_I;
		}

		static void n_MoveCursorPosition_I (IntPtr jnienv, IntPtr native__this, int position)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.MoveCursorPosition (position);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='moveCursorPosition' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("moveCursorPosition", "(I)V", "GetMoveCursorPosition_IHandler")]
		public virtual unsafe void MoveCursorPosition (int position)
		{
			const string __id = "moveCursorPosition.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (position);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_nativeOnDspReceive_Ljava_lang_String_Ljava_lang_String_IIJJ;
#pragma warning disable 0169
		static Delegate GetNativeOnDspReceive_Ljava_lang_String_Ljava_lang_String_IIJJHandler ()
		{
			if (cb_nativeOnDspReceive_Ljava_lang_String_Ljava_lang_String_IIJJ == null)
				cb_nativeOnDspReceive_Ljava_lang_String_Ljava_lang_String_IIJJ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLIIJJ_V (n_NativeOnDspReceive_Ljava_lang_String_Ljava_lang_String_IIJJ));
			return cb_nativeOnDspReceive_Ljava_lang_String_Ljava_lang_String_IIJJ;
		}

		static void n_NativeOnDspReceive_Ljava_lang_String_Ljava_lang_String_IIJJ (IntPtr jnienv, IntPtr native__this, IntPtr native_ipAddress, IntPtr native_deviceId, int success, int code, long status, long battery)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var ipAddress = JNIEnv.GetString (native_ipAddress, JniHandleOwnership.DoNotTransfer);
			var deviceId = JNIEnv.GetString (native_deviceId, JniHandleOwnership.DoNotTransfer);
			__this.NativeOnDspReceive (ipAddress, deviceId, success, code, status, battery);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='nativeOnDspReceive' and count(parameter)=6 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='long'] and parameter[6][@type='long']]"
		[Register ("nativeOnDspReceive", "(Ljava/lang/String;Ljava/lang/String;IIJJ)V", "GetNativeOnDspReceive_Ljava_lang_String_Ljava_lang_String_IIJJHandler")]
		protected virtual unsafe void NativeOnDspReceive (string? ipAddress, string? deviceId, int success, int code, long status, long battery)
		{
			const string __id = "nativeOnDspReceive.(Ljava/lang/String;Ljava/lang/String;IIJJ)V";
			IntPtr native_ipAddress = JNIEnv.NewString ((string?)ipAddress);
			IntPtr native_deviceId = JNIEnv.NewString ((string?)deviceId);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (native_ipAddress);
				__args [1] = new JniArgumentValue (native_deviceId);
				__args [2] = new JniArgumentValue (success);
				__args [3] = new JniArgumentValue (code);
				__args [4] = new JniArgumentValue (status);
				__args [5] = new JniArgumentValue (battery);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_ipAddress);
				JNIEnv.DeleteLocalRef (native_deviceId);
			}
		}

		static Delegate? cb_outputException_Ljava_lang_String_Ljava_lang_Exception_;
#pragma warning disable 0169
		static Delegate GetOutputException_Ljava_lang_String_Ljava_lang_Exception_Handler ()
		{
			if (cb_outputException_Ljava_lang_String_Ljava_lang_Exception_ == null)
				cb_outputException_Ljava_lang_String_Ljava_lang_Exception_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_OutputException_Ljava_lang_String_Ljava_lang_Exception_));
			return cb_outputException_Ljava_lang_String_Ljava_lang_Exception_;
		}

		static void n_OutputException_Ljava_lang_String_Ljava_lang_Exception_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = global::Java.Lang.Object.GetObject<global::Java.Lang.Exception> (native_p1, JniHandleOwnership.DoNotTransfer);
			__this.OutputException (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='outputException' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Exception']]"
		[Register ("outputException", "(Ljava/lang/String;Ljava/lang/Exception;)V", "GetOutputException_Ljava_lang_String_Ljava_lang_Exception_Handler")]
		protected abstract void OutputException (string? p0, global::Java.Lang.Exception? p1);

		static Delegate? cb_outputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetOutputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler ()
		{
			if (cb_outputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_ == null)
				cb_outputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_OutputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_));
			return cb_outputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_;
		}

		static void n_OutputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = (global::Java.Lang.Object[]?) JNIEnv.GetArray (native_p1, JniHandleOwnership.DoNotTransfer, typeof (global::Java.Lang.Object));
			__this.OutputLogCallFunction (p0, p1);
			if (p1 != null)
				JNIEnv.CopyArray (p1, native_p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='outputLogCallFunction' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("outputLogCallFunction", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		protected abstract void OutputLogCallFunction (string? p0, params global::Java.Lang.Object[]? p1);

		static Delegate? cb_outputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetOutputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_Handler ()
		{
			if (cb_outputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_ == null)
				cb_outputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_OutputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_));
			return cb_outputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_;
		}

		static void n_OutputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = (global::Java.Lang.Object[]?) JNIEnv.GetArray (native_p1, JniHandleOwnership.DoNotTransfer, typeof (global::Java.Lang.Object));
			__this.OutputLogEvent (p0, p1);
			if (p1 != null)
				JNIEnv.CopyArray (p1, native_p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='outputLogEvent' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("outputLogEvent", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		protected abstract void OutputLogEvent (string? p0, params global::Java.Lang.Object[]? p1);

		static Delegate? cb_outputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetOutputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler ()
		{
			if (cb_outputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_ == null)
				cb_outputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_OutputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_));
			return cb_outputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_;
		}

		static void n_OutputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = (global::Java.Lang.Object[]?) JNIEnv.GetArray (native_p1, JniHandleOwnership.DoNotTransfer, typeof (global::Java.Lang.Object));
			__this.OutputLogReturnFunction (p0, p1);
			if (p1 != null)
				JNIEnv.CopyArray (p1, native_p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='outputLogReturnFunction' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("outputLogReturnFunction", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		protected abstract void OutputLogReturnFunction (string? p0, params global::Java.Lang.Object[]? p1);

		static Delegate? cb_reset;
#pragma warning disable 0169
		static Delegate GetResetHandler ()
		{
			if (cb_reset == null)
				cb_reset = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Reset));
			return cb_reset;
		}

		static void n_Reset (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Reset ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='reset' and count(parameter)=0]"
		[Register ("reset", "()V", "GetResetHandler")]
		public virtual unsafe void Reset ()
		{
			const string __id = "reset.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_sendData;
#pragma warning disable 0169
		static Delegate GetSendDataHandler ()
		{
			if (cb_sendData == null)
				cb_sendData = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_SendData));
			return cb_sendData;
		}

		static void n_SendData (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.SendData ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='sendData' and count(parameter)=0]"
		[Register ("sendData", "()V", "GetSendDataHandler")]
		public virtual unsafe void SendData ()
		{
			const string __id = "sendData.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_setBlink_I;
#pragma warning disable 0169
		static Delegate GetSetBlink_IHandler ()
		{
			if (cb_setBlink_I == null)
				cb_setBlink_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetBlink_I));
			return cb_setBlink_I;
		}

		static void n_SetBlink_I (IntPtr jnienv, IntPtr native__this, int interval)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.SetBlink (interval);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='setBlink' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setBlink", "(I)V", "GetSetBlink_IHandler")]
		public virtual unsafe void SetBlink (int interval)
		{
			const string __id = "setBlink.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (interval);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_setBrightness_I;
#pragma warning disable 0169
		static Delegate GetSetBrightness_IHandler ()
		{
			if (cb_setBrightness_I == null)
				cb_setBrightness_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetBrightness_I));
			return cb_setBrightness_I;
		}

		static void n_SetBrightness_I (IntPtr jnienv, IntPtr native__this, int brightness)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.SetBrightness (brightness);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='setBrightness' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setBrightness", "(I)V", "GetSetBrightness_IHandler")]
		public virtual unsafe void SetBrightness (int brightness)
		{
			const string __id = "setBrightness.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (brightness);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_setCurrentWindow_I;
#pragma warning disable 0169
		static Delegate GetSetCurrentWindow_IHandler ()
		{
			if (cb_setCurrentWindow_I == null)
				cb_setCurrentWindow_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetCurrentWindow_I));
			return cb_setCurrentWindow_I;
		}

		static void n_SetCurrentWindow_I (IntPtr jnienv, IntPtr native__this, int number)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.SetCurrentWindow (number);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='setCurrentWindow' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setCurrentWindow", "(I)V", "GetSetCurrentWindow_IHandler")]
		public virtual unsafe void SetCurrentWindow (int number)
		{
			const string __id = "setCurrentWindow.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (number);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_setCursorPosition_II;
#pragma warning disable 0169
		static Delegate GetSetCursorPosition_IIHandler ()
		{
			if (cb_setCursorPosition_II == null)
				cb_setCursorPosition_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPII_V (n_SetCursorPosition_II));
			return cb_setCursorPosition_II;
		}

		static void n_SetCursorPosition_II (IntPtr jnienv, IntPtr native__this, int x, int y)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.SetCursorPosition (x, y);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='setCursorPosition' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("setCursorPosition", "(II)V", "GetSetCursorPosition_IIHandler")]
		public virtual unsafe void SetCursorPosition (int x, int y)
		{
			const string __id = "setCursorPosition.(II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (x);
				__args [1] = new JniArgumentValue (y);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_setCursorType_I;
#pragma warning disable 0169
		static Delegate GetSetCursorType_IHandler ()
		{
			if (cb_setCursorType_I == null)
				cb_setCursorType_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetCursorType_I));
			return cb_setCursorType_I;
		}

		static void n_SetCursorType_I (IntPtr jnienv, IntPtr native__this, int type)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.SetCursorType (type);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='setCursorType' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setCursorType", "(I)V", "GetSetCursorType_IHandler")]
		public virtual unsafe void SetCursorType (int type)
		{
			const string __id = "setCursorType.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (type);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_setReceiveEventCallback_Lcom_epson_eposdevice_display_ReceiveListener_;
#pragma warning disable 0169
		static Delegate GetSetReceiveEventCallback_Lcom_epson_eposdevice_display_ReceiveListener_Handler ()
		{
			if (cb_setReceiveEventCallback_Lcom_epson_eposdevice_display_ReceiveListener_ == null)
				cb_setReceiveEventCallback_Lcom_epson_eposdevice_display_ReceiveListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetReceiveEventCallback_Lcom_epson_eposdevice_display_ReceiveListener_));
			return cb_setReceiveEventCallback_Lcom_epson_eposdevice_display_ReceiveListener_;
		}

		static void n_SetReceiveEventCallback_Lcom_epson_eposdevice_display_ReceiveListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_target)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var target = (global::Com.Epson.Eposdevice.Display.IReceiveListener?)global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.IReceiveListener> (native_target, JniHandleOwnership.DoNotTransfer);
			__this.SetReceiveEventCallback (target);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='setReceiveEventCallback' and count(parameter)=1 and parameter[1][@type='com.epson.eposdevice.display.ReceiveListener']]"
		[Register ("setReceiveEventCallback", "(Lcom/epson/eposdevice/display/ReceiveListener;)V", "GetSetReceiveEventCallback_Lcom_epson_eposdevice_display_ReceiveListener_Handler")]
		public virtual unsafe void SetReceiveEventCallback (global::Com.Epson.Eposdevice.Display.IReceiveListener? target)
		{
			const string __id = "setReceiveEventCallback.(Lcom/epson/eposdevice/display/ReceiveListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((target == null) ? IntPtr.Zero : ((global::Java.Lang.Object) target).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (target);
			}
		}

		static Delegate? cb_showClock;
#pragma warning disable 0169
		static Delegate GetShowClockHandler ()
		{
			if (cb_showClock == null)
				cb_showClock = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_ShowClock));
			return cb_showClock;
		}

		static void n_ShowClock (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.ShowClock ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='showClock' and count(parameter)=0]"
		[Register ("showClock", "()V", "GetShowClockHandler")]
		public virtual unsafe void ShowClock ()
		{
			const string __id = "showClock.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_nativeDspAddBlink_JJ;
#pragma warning disable 0169
		static Delegate GetNativeDspAddBlink_JJHandler ()
		{
			if (cb_nativeDspAddBlink_JJ == null)
				cb_nativeDspAddBlink_JJ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJJ_I (n_NativeDspAddBlink_JJ));
			return cb_nativeDspAddBlink_JJ;
		}

		static int n_NativeDspAddBlink_JJ (IntPtr jnienv, IntPtr native__this, long p0, long p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeDspAddBlink (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='nativeDspAddBlink' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='long']]"
		[Register ("nativeDspAddBlink", "(JJ)I", "GetNativeDspAddBlink_JJHandler")]
		protected virtual unsafe int NativeDspAddBlink (long p0, long p1)
		{
			const string __id = "nativeDspAddBlink.(JJ)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeDspAddBrightness_JI;
#pragma warning disable 0169
		static Delegate GetNativeDspAddBrightness_JIHandler ()
		{
			if (cb_nativeDspAddBrightness_JI == null)
				cb_nativeDspAddBrightness_JI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJI_I (n_NativeDspAddBrightness_JI));
			return cb_nativeDspAddBrightness_JI;
		}

		static int n_NativeDspAddBrightness_JI (IntPtr jnienv, IntPtr native__this, long p0, int p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeDspAddBrightness (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='nativeDspAddBrightness' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='int']]"
		[Register ("nativeDspAddBrightness", "(JI)I", "GetNativeDspAddBrightness_JIHandler")]
		protected virtual unsafe int NativeDspAddBrightness (long p0, int p1)
		{
			const string __id = "nativeDspAddBrightness.(JI)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeDspAddClearWindow_J;
#pragma warning disable 0169
		static Delegate GetNativeDspAddClearWindow_JHandler ()
		{
			if (cb_nativeDspAddClearWindow_J == null)
				cb_nativeDspAddClearWindow_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_I (n_NativeDspAddClearWindow_J));
			return cb_nativeDspAddClearWindow_J;
		}

		static int n_NativeDspAddClearWindow_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeDspAddClearWindow (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='nativeDspAddClearWindow' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeDspAddClearWindow", "(J)I", "GetNativeDspAddClearWindow_JHandler")]
		protected virtual unsafe int NativeDspAddClearWindow (long p0)
		{
			const string __id = "nativeDspAddClearWindow.(J)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeDspAddCommand_JarrayB;
#pragma warning disable 0169
		static Delegate GetNativeDspAddCommand_JarrayBHandler ()
		{
			if (cb_nativeDspAddCommand_JarrayB == null)
				cb_nativeDspAddCommand_JarrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJL_I (n_NativeDspAddCommand_JarrayB));
			return cb_nativeDspAddCommand_JarrayB;
		}

		static int n_NativeDspAddCommand_JarrayB (IntPtr jnienv, IntPtr native__this, long p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p1 = (byte[]?) JNIEnv.GetArray (native_p1, JniHandleOwnership.DoNotTransfer, typeof (byte));
			int __ret = __this.NativeDspAddCommand (p0, p1);
			if (p1 != null)
				JNIEnv.CopyArray (p1, native_p1);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='nativeDspAddCommand' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='byte[]']]"
		[Register ("nativeDspAddCommand", "(J[B)I", "GetNativeDspAddCommand_JarrayBHandler")]
		protected virtual unsafe int NativeDspAddCommand (long p0, byte[]? p1)
		{
			const string __id = "nativeDspAddCommand.(J[B)I";
			IntPtr native_p1 = JNIEnv.NewArray (p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (native_p1);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				if (p1 != null) {
					JNIEnv.CopyArray (native_p1, p1);
					JNIEnv.DeleteLocalRef (native_p1);
				}
				global::System.GC.KeepAlive (p1);
			}
		}

		static Delegate? cb_nativeDspAddCreateWindow_JJJJJJI;
#pragma warning disable 0169
		static Delegate GetNativeDspAddCreateWindow_JJJJJJIHandler ()
		{
			if (cb_nativeDspAddCreateWindow_JJJJJJI == null)
				cb_nativeDspAddCreateWindow_JJJJJJI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJJJJJJI_I (n_NativeDspAddCreateWindow_JJJJJJI));
			return cb_nativeDspAddCreateWindow_JJJJJJI;
		}

		static int n_NativeDspAddCreateWindow_JJJJJJI (IntPtr jnienv, IntPtr native__this, long p0, long p1, long p2, long p3, long p4, long p5, int p6)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeDspAddCreateWindow (p0, p1, p2, p3, p4, p5, p6);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='nativeDspAddCreateWindow' and count(parameter)=7 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='long'] and parameter[5][@type='long'] and parameter[6][@type='long'] and parameter[7][@type='int']]"
		[Register ("nativeDspAddCreateWindow", "(JJJJJJI)I", "GetNativeDspAddCreateWindow_JJJJJJIHandler")]
		protected virtual unsafe int NativeDspAddCreateWindow (long p0, long p1, long p2, long p3, long p4, long p5, int p6)
		{
			const string __id = "nativeDspAddCreateWindow.(JJJJJJI)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [7];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue (p5);
				__args [6] = new JniArgumentValue (p6);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeDspAddDestroyWindow_JJ;
#pragma warning disable 0169
		static Delegate GetNativeDspAddDestroyWindow_JJHandler ()
		{
			if (cb_nativeDspAddDestroyWindow_JJ == null)
				cb_nativeDspAddDestroyWindow_JJ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJJ_I (n_NativeDspAddDestroyWindow_JJ));
			return cb_nativeDspAddDestroyWindow_JJ;
		}

		static int n_NativeDspAddDestroyWindow_JJ (IntPtr jnienv, IntPtr native__this, long p0, long p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeDspAddDestroyWindow (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='nativeDspAddDestroyWindow' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='long']]"
		[Register ("nativeDspAddDestroyWindow", "(JJ)I", "GetNativeDspAddDestroyWindow_JJHandler")]
		protected virtual unsafe int NativeDspAddDestroyWindow (long p0, long p1)
		{
			const string __id = "nativeDspAddDestroyWindow.(JJ)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeDspAddMarquee_JLjava_lang_String_IJJJI;
#pragma warning disable 0169
		static Delegate GetNativeDspAddMarquee_JLjava_lang_String_IJJJIHandler ()
		{
			if (cb_nativeDspAddMarquee_JLjava_lang_String_IJJJI == null)
				cb_nativeDspAddMarquee_JLjava_lang_String_IJJJI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJLIJJJI_I (n_NativeDspAddMarquee_JLjava_lang_String_IJJJI));
			return cb_nativeDspAddMarquee_JLjava_lang_String_IJJJI;
		}

		static int n_NativeDspAddMarquee_JLjava_lang_String_IJJJI (IntPtr jnienv, IntPtr native__this, long p0, IntPtr native_p1, int p2, long p3, long p4, long p5, int p6)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.NativeDspAddMarquee (p0, p1, p2, p3, p4, p5, p6);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='nativeDspAddMarquee' and count(parameter)=7 and parameter[1][@type='long'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='long'] and parameter[6][@type='long'] and parameter[7][@type='int']]"
		[Register ("nativeDspAddMarquee", "(JLjava/lang/String;IJJJI)I", "GetNativeDspAddMarquee_JLjava_lang_String_IJJJIHandler")]
		protected virtual unsafe int NativeDspAddMarquee (long p0, string? p1, int p2, long p3, long p4, long p5, int p6)
		{
			const string __id = "nativeDspAddMarquee.(JLjava/lang/String;IJJJI)I";
			IntPtr native_p1 = JNIEnv.NewString ((string?)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [7];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue (p5);
				__args [6] = new JniArgumentValue (p6);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
			}
		}

		static Delegate? cb_nativeDspAddMoveCursorPosition_JI;
#pragma warning disable 0169
		static Delegate GetNativeDspAddMoveCursorPosition_JIHandler ()
		{
			if (cb_nativeDspAddMoveCursorPosition_JI == null)
				cb_nativeDspAddMoveCursorPosition_JI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJI_I (n_NativeDspAddMoveCursorPosition_JI));
			return cb_nativeDspAddMoveCursorPosition_JI;
		}

		static int n_NativeDspAddMoveCursorPosition_JI (IntPtr jnienv, IntPtr native__this, long p0, int p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeDspAddMoveCursorPosition (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='nativeDspAddMoveCursorPosition' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='int']]"
		[Register ("nativeDspAddMoveCursorPosition", "(JI)I", "GetNativeDspAddMoveCursorPosition_JIHandler")]
		protected virtual unsafe int NativeDspAddMoveCursorPosition (long p0, int p1)
		{
			const string __id = "nativeDspAddMoveCursorPosition.(JI)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeDspAddReset_J;
#pragma warning disable 0169
		static Delegate GetNativeDspAddReset_JHandler ()
		{
			if (cb_nativeDspAddReset_J == null)
				cb_nativeDspAddReset_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_I (n_NativeDspAddReset_J));
			return cb_nativeDspAddReset_J;
		}

		static int n_NativeDspAddReset_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeDspAddReset (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='nativeDspAddReset' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeDspAddReset", "(J)I", "GetNativeDspAddReset_JHandler")]
		protected virtual unsafe int NativeDspAddReset (long p0)
		{
			const string __id = "nativeDspAddReset.(J)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeDspAddReverseText_JLjava_lang_String_;
#pragma warning disable 0169
		static Delegate GetNativeDspAddReverseText_JLjava_lang_String_Handler ()
		{
			if (cb_nativeDspAddReverseText_JLjava_lang_String_ == null)
				cb_nativeDspAddReverseText_JLjava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJL_I (n_NativeDspAddReverseText_JLjava_lang_String_));
			return cb_nativeDspAddReverseText_JLjava_lang_String_;
		}

		static int n_NativeDspAddReverseText_JLjava_lang_String_ (IntPtr jnienv, IntPtr native__this, long p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.NativeDspAddReverseText (p0, p1);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='nativeDspAddReverseText' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='java.lang.String']]"
		[Register ("nativeDspAddReverseText", "(JLjava/lang/String;)I", "GetNativeDspAddReverseText_JLjava_lang_String_Handler")]
		protected virtual unsafe int NativeDspAddReverseText (long p0, string? p1)
		{
			const string __id = "nativeDspAddReverseText.(JLjava/lang/String;)I";
			IntPtr native_p1 = JNIEnv.NewString ((string?)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (native_p1);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
			}
		}

		static Delegate? cb_nativeDspAddReverseTextLang_JLjava_lang_String_I;
#pragma warning disable 0169
		static Delegate GetNativeDspAddReverseTextLang_JLjava_lang_String_IHandler ()
		{
			if (cb_nativeDspAddReverseTextLang_JLjava_lang_String_I == null)
				cb_nativeDspAddReverseTextLang_JLjava_lang_String_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJLI_I (n_NativeDspAddReverseTextLang_JLjava_lang_String_I));
			return cb_nativeDspAddReverseTextLang_JLjava_lang_String_I;
		}

		static int n_NativeDspAddReverseTextLang_JLjava_lang_String_I (IntPtr jnienv, IntPtr native__this, long p0, IntPtr native_p1, int p2)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.NativeDspAddReverseTextLang (p0, p1, p2);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='nativeDspAddReverseTextLang' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='int']]"
		[Register ("nativeDspAddReverseTextLang", "(JLjava/lang/String;I)I", "GetNativeDspAddReverseTextLang_JLjava_lang_String_IHandler")]
		protected virtual unsafe int NativeDspAddReverseTextLang (long p0, string? p1, int p2)
		{
			const string __id = "nativeDspAddReverseTextLang.(JLjava/lang/String;I)I";
			IntPtr native_p1 = JNIEnv.NewString ((string?)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
			}
		}

		static Delegate? cb_nativeDspAddReverseTextPosition_JLjava_lang_String_JJ;
#pragma warning disable 0169
		static Delegate GetNativeDspAddReverseTextPosition_JLjava_lang_String_JJHandler ()
		{
			if (cb_nativeDspAddReverseTextPosition_JLjava_lang_String_JJ == null)
				cb_nativeDspAddReverseTextPosition_JLjava_lang_String_JJ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJLJJ_I (n_NativeDspAddReverseTextPosition_JLjava_lang_String_JJ));
			return cb_nativeDspAddReverseTextPosition_JLjava_lang_String_JJ;
		}

		static int n_NativeDspAddReverseTextPosition_JLjava_lang_String_JJ (IntPtr jnienv, IntPtr native__this, long p0, IntPtr native_p1, long p2, long p3)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.NativeDspAddReverseTextPosition (p0, p1, p2, p3);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='nativeDspAddReverseTextPosition' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='long'] and parameter[4][@type='long']]"
		[Register ("nativeDspAddReverseTextPosition", "(JLjava/lang/String;JJ)I", "GetNativeDspAddReverseTextPosition_JLjava_lang_String_JJHandler")]
		protected virtual unsafe int NativeDspAddReverseTextPosition (long p0, string? p1, long p2, long p3)
		{
			const string __id = "nativeDspAddReverseTextPosition.(JLjava/lang/String;JJ)I";
			IntPtr native_p1 = JNIEnv.NewString ((string?)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
			}
		}

		static Delegate? cb_nativeDspAddReverseTextPositionLang_JLjava_lang_String_JJI;
#pragma warning disable 0169
		static Delegate GetNativeDspAddReverseTextPositionLang_JLjava_lang_String_JJIHandler ()
		{
			if (cb_nativeDspAddReverseTextPositionLang_JLjava_lang_String_JJI == null)
				cb_nativeDspAddReverseTextPositionLang_JLjava_lang_String_JJI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJLJJI_I (n_NativeDspAddReverseTextPositionLang_JLjava_lang_String_JJI));
			return cb_nativeDspAddReverseTextPositionLang_JLjava_lang_String_JJI;
		}

		static int n_NativeDspAddReverseTextPositionLang_JLjava_lang_String_JJI (IntPtr jnienv, IntPtr native__this, long p0, IntPtr native_p1, long p2, long p3, int p4)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.NativeDspAddReverseTextPositionLang (p0, p1, p2, p3, p4);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='nativeDspAddReverseTextPositionLang' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='long'] and parameter[4][@type='long'] and parameter[5][@type='int']]"
		[Register ("nativeDspAddReverseTextPositionLang", "(JLjava/lang/String;JJI)I", "GetNativeDspAddReverseTextPositionLang_JLjava_lang_String_JJIHandler")]
		protected virtual unsafe int NativeDspAddReverseTextPositionLang (long p0, string? p1, long p2, long p3, int p4)
		{
			const string __id = "nativeDspAddReverseTextPositionLang.(JLjava/lang/String;JJI)I";
			IntPtr native_p1 = JNIEnv.NewString ((string?)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
			}
		}

		static Delegate? cb_nativeDspAddSetCurrentWindow_JJ;
#pragma warning disable 0169
		static Delegate GetNativeDspAddSetCurrentWindow_JJHandler ()
		{
			if (cb_nativeDspAddSetCurrentWindow_JJ == null)
				cb_nativeDspAddSetCurrentWindow_JJ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJJ_I (n_NativeDspAddSetCurrentWindow_JJ));
			return cb_nativeDspAddSetCurrentWindow_JJ;
		}

		static int n_NativeDspAddSetCurrentWindow_JJ (IntPtr jnienv, IntPtr native__this, long p0, long p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeDspAddSetCurrentWindow (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='nativeDspAddSetCurrentWindow' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='long']]"
		[Register ("nativeDspAddSetCurrentWindow", "(JJ)I", "GetNativeDspAddSetCurrentWindow_JJHandler")]
		protected virtual unsafe int NativeDspAddSetCurrentWindow (long p0, long p1)
		{
			const string __id = "nativeDspAddSetCurrentWindow.(JJ)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeDspAddSetCursorPosition_JJJ;
#pragma warning disable 0169
		static Delegate GetNativeDspAddSetCursorPosition_JJJHandler ()
		{
			if (cb_nativeDspAddSetCursorPosition_JJJ == null)
				cb_nativeDspAddSetCursorPosition_JJJ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJJJ_I (n_NativeDspAddSetCursorPosition_JJJ));
			return cb_nativeDspAddSetCursorPosition_JJJ;
		}

		static int n_NativeDspAddSetCursorPosition_JJJ (IntPtr jnienv, IntPtr native__this, long p0, long p1, long p2)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeDspAddSetCursorPosition (p0, p1, p2);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='nativeDspAddSetCursorPosition' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long']]"
		[Register ("nativeDspAddSetCursorPosition", "(JJJ)I", "GetNativeDspAddSetCursorPosition_JJJHandler")]
		protected virtual unsafe int NativeDspAddSetCursorPosition (long p0, long p1, long p2)
		{
			const string __id = "nativeDspAddSetCursorPosition.(JJJ)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeDspAddSetCursorType_JI;
#pragma warning disable 0169
		static Delegate GetNativeDspAddSetCursorType_JIHandler ()
		{
			if (cb_nativeDspAddSetCursorType_JI == null)
				cb_nativeDspAddSetCursorType_JI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJI_I (n_NativeDspAddSetCursorType_JI));
			return cb_nativeDspAddSetCursorType_JI;
		}

		static int n_NativeDspAddSetCursorType_JI (IntPtr jnienv, IntPtr native__this, long p0, int p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeDspAddSetCursorType (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='nativeDspAddSetCursorType' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='int']]"
		[Register ("nativeDspAddSetCursorType", "(JI)I", "GetNativeDspAddSetCursorType_JIHandler")]
		protected virtual unsafe int NativeDspAddSetCursorType (long p0, int p1)
		{
			const string __id = "nativeDspAddSetCursorType.(JI)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeDspAddShowClock_J;
#pragma warning disable 0169
		static Delegate GetNativeDspAddShowClock_JHandler ()
		{
			if (cb_nativeDspAddShowClock_J == null)
				cb_nativeDspAddShowClock_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_I (n_NativeDspAddShowClock_J));
			return cb_nativeDspAddShowClock_J;
		}

		static int n_NativeDspAddShowClock_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeDspAddShowClock (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='nativeDspAddShowClock' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeDspAddShowClock", "(J)I", "GetNativeDspAddShowClock_JHandler")]
		protected virtual unsafe int NativeDspAddShowClock (long p0)
		{
			const string __id = "nativeDspAddShowClock.(J)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeDspAddText_JLjava_lang_String_;
#pragma warning disable 0169
		static Delegate GetNativeDspAddText_JLjava_lang_String_Handler ()
		{
			if (cb_nativeDspAddText_JLjava_lang_String_ == null)
				cb_nativeDspAddText_JLjava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJL_I (n_NativeDspAddText_JLjava_lang_String_));
			return cb_nativeDspAddText_JLjava_lang_String_;
		}

		static int n_NativeDspAddText_JLjava_lang_String_ (IntPtr jnienv, IntPtr native__this, long p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.NativeDspAddText (p0, p1);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='nativeDspAddText' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='java.lang.String']]"
		[Register ("nativeDspAddText", "(JLjava/lang/String;)I", "GetNativeDspAddText_JLjava_lang_String_Handler")]
		protected virtual unsafe int NativeDspAddText (long p0, string? p1)
		{
			const string __id = "nativeDspAddText.(JLjava/lang/String;)I";
			IntPtr native_p1 = JNIEnv.NewString ((string?)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (native_p1);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
			}
		}

		static Delegate? cb_nativeDspAddTextLang_JLjava_lang_String_I;
#pragma warning disable 0169
		static Delegate GetNativeDspAddTextLang_JLjava_lang_String_IHandler ()
		{
			if (cb_nativeDspAddTextLang_JLjava_lang_String_I == null)
				cb_nativeDspAddTextLang_JLjava_lang_String_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJLI_I (n_NativeDspAddTextLang_JLjava_lang_String_I));
			return cb_nativeDspAddTextLang_JLjava_lang_String_I;
		}

		static int n_NativeDspAddTextLang_JLjava_lang_String_I (IntPtr jnienv, IntPtr native__this, long p0, IntPtr native_p1, int p2)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.NativeDspAddTextLang (p0, p1, p2);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='nativeDspAddTextLang' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='int']]"
		[Register ("nativeDspAddTextLang", "(JLjava/lang/String;I)I", "GetNativeDspAddTextLang_JLjava_lang_String_IHandler")]
		protected virtual unsafe int NativeDspAddTextLang (long p0, string? p1, int p2)
		{
			const string __id = "nativeDspAddTextLang.(JLjava/lang/String;I)I";
			IntPtr native_p1 = JNIEnv.NewString ((string?)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
			}
		}

		static Delegate? cb_nativeDspAddTextPosition_JLjava_lang_String_JJ;
#pragma warning disable 0169
		static Delegate GetNativeDspAddTextPosition_JLjava_lang_String_JJHandler ()
		{
			if (cb_nativeDspAddTextPosition_JLjava_lang_String_JJ == null)
				cb_nativeDspAddTextPosition_JLjava_lang_String_JJ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJLJJ_I (n_NativeDspAddTextPosition_JLjava_lang_String_JJ));
			return cb_nativeDspAddTextPosition_JLjava_lang_String_JJ;
		}

		static int n_NativeDspAddTextPosition_JLjava_lang_String_JJ (IntPtr jnienv, IntPtr native__this, long p0, IntPtr native_p1, long p2, long p3)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.NativeDspAddTextPosition (p0, p1, p2, p3);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='nativeDspAddTextPosition' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='long'] and parameter[4][@type='long']]"
		[Register ("nativeDspAddTextPosition", "(JLjava/lang/String;JJ)I", "GetNativeDspAddTextPosition_JLjava_lang_String_JJHandler")]
		protected virtual unsafe int NativeDspAddTextPosition (long p0, string? p1, long p2, long p3)
		{
			const string __id = "nativeDspAddTextPosition.(JLjava/lang/String;JJ)I";
			IntPtr native_p1 = JNIEnv.NewString ((string?)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
			}
		}

		static Delegate? cb_nativeDspAddTextPositionLang_JLjava_lang_String_JJI;
#pragma warning disable 0169
		static Delegate GetNativeDspAddTextPositionLang_JLjava_lang_String_JJIHandler ()
		{
			if (cb_nativeDspAddTextPositionLang_JLjava_lang_String_JJI == null)
				cb_nativeDspAddTextPositionLang_JLjava_lang_String_JJI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJLJJI_I (n_NativeDspAddTextPositionLang_JLjava_lang_String_JJI));
			return cb_nativeDspAddTextPositionLang_JLjava_lang_String_JJI;
		}

		static int n_NativeDspAddTextPositionLang_JLjava_lang_String_JJI (IntPtr jnienv, IntPtr native__this, long p0, IntPtr native_p1, long p2, long p3, int p4)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.NativeDspAddTextPositionLang (p0, p1, p2, p3, p4);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='nativeDspAddTextPositionLang' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='long'] and parameter[4][@type='long'] and parameter[5][@type='int']]"
		[Register ("nativeDspAddTextPositionLang", "(JLjava/lang/String;JJI)I", "GetNativeDspAddTextPositionLang_JLjava_lang_String_JJIHandler")]
		protected virtual unsafe int NativeDspAddTextPositionLang (long p0, string? p1, long p2, long p3, int p4)
		{
			const string __id = "nativeDspAddTextPositionLang.(JLjava/lang/String;JJI)I";
			IntPtr native_p1 = JNIEnv.NewString ((string?)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
			}
		}

		static Delegate? cb_nativeDspClearCommandBuffer_J;
#pragma warning disable 0169
		static Delegate GetNativeDspClearCommandBuffer_JHandler ()
		{
			if (cb_nativeDspClearCommandBuffer_J == null)
				cb_nativeDspClearCommandBuffer_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_I (n_NativeDspClearCommandBuffer_J));
			return cb_nativeDspClearCommandBuffer_J;
		}

		static int n_NativeDspClearCommandBuffer_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeDspClearCommandBuffer (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='nativeDspClearCommandBuffer' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeDspClearCommandBuffer", "(J)I", "GetNativeDspClearCommandBuffer_JHandler")]
		protected virtual unsafe int NativeDspClearCommandBuffer (long p0)
		{
			const string __id = "nativeDspClearCommandBuffer.(J)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeDspSendData_J;
#pragma warning disable 0169
		static Delegate GetNativeDspSendData_JHandler ()
		{
			if (cb_nativeDspSendData_J == null)
				cb_nativeDspSendData_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_I (n_NativeDspSendData_J));
			return cb_nativeDspSendData_J;
		}

		static int n_NativeDspSendData_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Display.Display> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeDspSendData (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='nativeDspSendData' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeDspSendData", "(J)I", "GetNativeDspSendData_JHandler")]
		protected virtual unsafe int NativeDspSendData (long p0)
		{
			const string __id = "nativeDspSendData.(J)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		#region "Event implementation for Com.Epson.Eposdevice.Display.IReceiveListener"

		public event EventHandler<global::Com.Epson.Eposdevice.Display.ReceiveEventArgs> ReceiveEventCallback {
			add {
				global::Java.Interop.EventHelper.AddEventHandler<global::Com.Epson.Eposdevice.Display.IReceiveListener, global::Com.Epson.Eposdevice.Display.IReceiveListenerImplementor>(
				ref weak_implementor_SetReceiveEventCallback,
				__CreateIReceiveListenerImplementor,
				SetReceiveEventCallback,
				__h => __h.Handler += value);
			}
			remove {
				global::Java.Interop.EventHelper.RemoveEventHandler<global::Com.Epson.Eposdevice.Display.IReceiveListener, global::Com.Epson.Eposdevice.Display.IReceiveListenerImplementor>(
				ref weak_implementor_SetReceiveEventCallback,
				global::Com.Epson.Eposdevice.Display.IReceiveListenerImplementor.__IsEmpty,
				__v => SetReceiveEventCallback (null),
				__h => __h.Handler -= value);
			}
		}

		WeakReference? weak_implementor_SetReceiveEventCallback;

		global::Com.Epson.Eposdevice.Display.IReceiveListenerImplementor __CreateIReceiveListenerImplementor ()
		{
			return new global::Com.Epson.Eposdevice.Display.IReceiveListenerImplementor (this);
		}

		#endregion

	}

	[global::Android.Runtime.Register ("com/epson/eposdevice/display/Display", DoNotGenerateAcw=true)]
	internal partial class DisplayInvoker : Display {
		public DisplayInvoker (IntPtr handle, JniHandleOwnership transfer) : base (handle, transfer)
		{
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/epson/eposdevice/display/Display", typeof (DisplayInvoker));

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='outputException' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Exception']]"
		[Register ("outputException", "(Ljava/lang/String;Ljava/lang/Exception;)V", "GetOutputException_Ljava_lang_String_Ljava_lang_Exception_Handler")]
		protected override unsafe void OutputException (string? p0, global::Java.Lang.Exception? p1)
		{
			const string __id = "outputException.(Ljava/lang/String;Ljava/lang/Exception;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Throwable) p1).Handle);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='outputLogCallFunction' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("outputLogCallFunction", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		protected override unsafe void OutputLogCallFunction (string? p0, params global::Java.Lang.Object[]? p1)
		{
			const string __id = "outputLogCallFunction.(Ljava/lang/String;[Ljava/lang/Object;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
			IntPtr native_p1 = JNIEnv.NewArray (p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				if (p1 != null) {
					JNIEnv.CopyArray (native_p1, p1);
					JNIEnv.DeleteLocalRef (native_p1);
				}
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='outputLogEvent' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("outputLogEvent", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		protected override unsafe void OutputLogEvent (string? p0, params global::Java.Lang.Object[]? p1)
		{
			const string __id = "outputLogEvent.(Ljava/lang/String;[Ljava/lang/Object;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
			IntPtr native_p1 = JNIEnv.NewArray (p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				if (p1 != null) {
					JNIEnv.CopyArray (native_p1, p1);
					JNIEnv.DeleteLocalRef (native_p1);
				}
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.display']/class[@name='Display']/method[@name='outputLogReturnFunction' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("outputLogReturnFunction", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		protected override unsafe void OutputLogReturnFunction (string? p0, params global::Java.Lang.Object[]? p1)
		{
			const string __id = "outputLogReturnFunction.(Ljava/lang/String;[Ljava/lang/Object;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
			IntPtr native_p1 = JNIEnv.NewArray (p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				if (p1 != null) {
					JNIEnv.CopyArray (native_p1, p1);
					JNIEnv.DeleteLocalRef (native_p1);
				}
				global::System.GC.KeepAlive (p1);
			}
		}

	}
}
