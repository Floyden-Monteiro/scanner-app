//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Epson.Epos2.Poskeyboard {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.epson.epos2.poskeyboard']/class[@name='PosKeyboard']"
	[global::Android.Runtime.Register ("com/epson/epos2/poskeyboard/PosKeyboard", DoNotGenerateAcw=true)]
	public partial class PosKeyboard : global::Java.Lang.Object {
		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.poskeyboard']/class[@name='PosKeyboard']/field[@name='EVENT_DISCONNECT']"
		[Register ("EVENT_DISCONNECT")]
		public const int EventDisconnect = (int) 2;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.poskeyboard']/class[@name='PosKeyboard']/field[@name='EVENT_RECONNECT']"
		[Register ("EVENT_RECONNECT")]
		public const int EventReconnect = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.poskeyboard']/class[@name='PosKeyboard']/field[@name='EVENT_RECONNECTING']"
		[Register ("EVENT_RECONNECTING")]
		public const int EventReconnecting = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.poskeyboard']/class[@name='PosKeyboard']/field[@name='FALSE']"
		[Register ("FALSE")]
		public const int False = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.poskeyboard']/class[@name='PosKeyboard']/field[@name='PARAM_DEFAULT']"
		[Register ("PARAM_DEFAULT")]
		public const int ParamDefault = (int) -2;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.poskeyboard']/class[@name='PosKeyboard']/field[@name='TRUE']"
		[Register ("TRUE")]
		public const int True = (int) 1;

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/epson/epos2/poskeyboard/PosKeyboard", typeof (PosKeyboard));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected PosKeyboard (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.epson.epos2.poskeyboard']/class[@name='PosKeyboard']/constructor[@name='PosKeyboard' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register (".ctor", "(Landroid/content/Context;)V", "")]
		public unsafe PosKeyboard (global::Android.Content.Context? context) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Landroid/content/Context;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (context);
			}
		}

		static Delegate? cb_getAdmin;
#pragma warning disable 0169
		static Delegate GetGetAdminHandler ()
		{
			if (cb_getAdmin == null)
				cb_getAdmin = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetAdmin));
			return cb_getAdmin;
		}

		static IntPtr n_GetAdmin (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Poskeyboard.PosKeyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.Admin);
		}
#pragma warning restore 0169

		public virtual unsafe string? Admin {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.poskeyboard']/class[@name='PosKeyboard']/method[@name='getAdmin' and count(parameter)=0]"
			[Register ("getAdmin", "()Ljava/lang/String;", "GetGetAdminHandler")]
			get {
				const string __id = "getAdmin.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getLocation;
#pragma warning disable 0169
		static Delegate GetGetLocationHandler ()
		{
			if (cb_getLocation == null)
				cb_getLocation = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetLocation));
			return cb_getLocation;
		}

		static IntPtr n_GetLocation (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Poskeyboard.PosKeyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.Location);
		}
#pragma warning restore 0169

		public virtual unsafe string? Location {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.poskeyboard']/class[@name='PosKeyboard']/method[@name='getLocation' and count(parameter)=0]"
			[Register ("getLocation", "()Ljava/lang/String;", "GetGetLocationHandler")]
			get {
				const string __id = "getLocation.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getStauts;
#pragma warning disable 0169
		static Delegate GetGetStautsHandler ()
		{
			if (cb_getStauts == null)
				cb_getStauts = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetStauts));
			return cb_getStauts;
		}

		static IntPtr n_GetStauts (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Poskeyboard.PosKeyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.Stauts);
		}
#pragma warning restore 0169

		public virtual unsafe global::Com.Epson.Epos2.Poskeyboard.PosKeyboardStatusInfo? Stauts {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.poskeyboard']/class[@name='PosKeyboard']/method[@name='getStauts' and count(parameter)=0]"
			[Register ("getStauts", "()Lcom/epson/epos2/poskeyboard/PosKeyboardStatusInfo;", "GetGetStautsHandler")]
			get {
				const string __id = "getStauts.()Lcom/epson/epos2/poskeyboard/PosKeyboardStatusInfo;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Poskeyboard.PosKeyboardStatusInfo> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_checkHandle;
#pragma warning disable 0169
		static Delegate GetCheckHandleHandler ()
		{
			if (cb_checkHandle == null)
				cb_checkHandle = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_CheckHandle));
			return cb_checkHandle;
		}

		static void n_CheckHandle (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Poskeyboard.PosKeyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.CheckHandle ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.poskeyboard']/class[@name='PosKeyboard']/method[@name='checkHandle' and count(parameter)=0]"
		[Register ("checkHandle", "()V", "GetCheckHandleHandler")]
		protected virtual unsafe void CheckHandle ()
		{
			const string __id = "checkHandle.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_connect_Ljava_lang_String_I;
#pragma warning disable 0169
		static Delegate GetConnect_Ljava_lang_String_IHandler ()
		{
			if (cb_connect_Ljava_lang_String_I == null)
				cb_connect_Ljava_lang_String_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_V (n_Connect_Ljava_lang_String_I));
			return cb_connect_Ljava_lang_String_I;
		}

		static void n_Connect_Ljava_lang_String_I (IntPtr jnienv, IntPtr native__this, IntPtr native_target, int timeout)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Poskeyboard.PosKeyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var target = JNIEnv.GetString (native_target, JniHandleOwnership.DoNotTransfer);
			__this.Connect (target, timeout);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.poskeyboard']/class[@name='PosKeyboard']/method[@name='connect' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int']]"
		[Register ("connect", "(Ljava/lang/String;I)V", "GetConnect_Ljava_lang_String_IHandler")]
		public virtual unsafe void Connect (string? target, int timeout)
		{
			const string __id = "connect.(Ljava/lang/String;I)V";
			IntPtr native_target = JNIEnv.NewString ((string?)target);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_target);
				__args [1] = new JniArgumentValue (timeout);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_target);
			}
		}

		static Delegate? cb_disconnect;
#pragma warning disable 0169
		static Delegate GetDisconnectHandler ()
		{
			if (cb_disconnect == null)
				cb_disconnect = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Disconnect));
			return cb_disconnect;
		}

		static void n_Disconnect (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Poskeyboard.PosKeyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Disconnect ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.poskeyboard']/class[@name='PosKeyboard']/method[@name='disconnect' and count(parameter)=0]"
		[Register ("disconnect", "()V", "GetDisconnectHandler")]
		public virtual unsafe void Disconnect ()
		{
			const string __id = "disconnect.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_initializePosKbdInstance;
#pragma warning disable 0169
		static Delegate GetInitializePosKbdInstanceHandler ()
		{
			if (cb_initializePosKbdInstance == null)
				cb_initializePosKbdInstance = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_InitializePosKbdInstance));
			return cb_initializePosKbdInstance;
		}

		static void n_InitializePosKbdInstance (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Poskeyboard.PosKeyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.InitializePosKbdInstance ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.poskeyboard']/class[@name='PosKeyboard']/method[@name='initializePosKbdInstance' and count(parameter)=0]"
		[Register ("initializePosKbdInstance", "()V", "GetInitializePosKbdInstanceHandler")]
		protected virtual unsafe void InitializePosKbdInstance ()
		{
			const string __id = "initializePosKbdInstance.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2GetAdmin_J;
#pragma warning disable 0169
		static Delegate GetNativeEpos2GetAdmin_JHandler ()
		{
			if (cb_nativeEpos2GetAdmin_J == null)
				cb_nativeEpos2GetAdmin_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_L (n_NativeEpos2GetAdmin_J));
			return cb_nativeEpos2GetAdmin_J;
		}

		static IntPtr n_NativeEpos2GetAdmin_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Poskeyboard.PosKeyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.NativeEpos2GetAdmin (p0));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.poskeyboard']/class[@name='PosKeyboard']/method[@name='nativeEpos2GetAdmin' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeEpos2GetAdmin", "(J)Ljava/lang/String;", "GetNativeEpos2GetAdmin_JHandler")]
		protected virtual unsafe string? NativeEpos2GetAdmin (long p0)
		{
			const string __id = "nativeEpos2GetAdmin.(J)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2GetLocation_J;
#pragma warning disable 0169
		static Delegate GetNativeEpos2GetLocation_JHandler ()
		{
			if (cb_nativeEpos2GetLocation_J == null)
				cb_nativeEpos2GetLocation_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_L (n_NativeEpos2GetLocation_J));
			return cb_nativeEpos2GetLocation_J;
		}

		static IntPtr n_NativeEpos2GetLocation_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Poskeyboard.PosKeyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.NativeEpos2GetLocation (p0));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.poskeyboard']/class[@name='PosKeyboard']/method[@name='nativeEpos2GetLocation' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeEpos2GetLocation", "(J)Ljava/lang/String;", "GetNativeEpos2GetLocation_JHandler")]
		protected virtual unsafe string? NativeEpos2GetLocation (long p0)
		{
			const string __id = "nativeEpos2GetLocation.(J)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2GetStatus_J;
#pragma warning disable 0169
		static Delegate GetNativeEpos2GetStatus_JHandler ()
		{
			if (cb_nativeEpos2GetStatus_J == null)
				cb_nativeEpos2GetStatus_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_L (n_NativeEpos2GetStatus_J));
			return cb_nativeEpos2GetStatus_J;
		}

		static IntPtr n_NativeEpos2GetStatus_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Poskeyboard.PosKeyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.NativeEpos2GetStatus (p0));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.poskeyboard']/class[@name='PosKeyboard']/method[@name='nativeEpos2GetStatus' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeEpos2GetStatus", "(J)Lcom/epson/epos2/poskeyboard/PosKeyboardStatusInfo;", "GetNativeEpos2GetStatus_JHandler")]
		protected virtual unsafe global::Com.Epson.Epos2.Poskeyboard.PosKeyboardStatusInfo? NativeEpos2GetStatus (long p0)
		{
			const string __id = "nativeEpos2GetStatus.(J)Lcom/epson/epos2/poskeyboard/PosKeyboardStatusInfo;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Poskeyboard.PosKeyboardStatusInfo> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate? cb_onPosKbdKeyPress_I;
#pragma warning disable 0169
		static Delegate GetOnPosKbdKeyPress_IHandler ()
		{
			if (cb_onPosKbdKeyPress_I == null)
				cb_onPosKbdKeyPress_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_OnPosKbdKeyPress_I));
			return cb_onPosKbdKeyPress_I;
		}

		static void n_OnPosKbdKeyPress_I (IntPtr jnienv, IntPtr native__this, int input)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Poskeyboard.PosKeyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.OnPosKbdKeyPress (input);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.poskeyboard']/class[@name='PosKeyboard']/method[@name='onPosKbdKeyPress' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("onPosKbdKeyPress", "(I)V", "GetOnPosKbdKeyPress_IHandler")]
		protected virtual unsafe void OnPosKbdKeyPress (int input)
		{
			const string __id = "onPosKbdKeyPress.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (input);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_setConnectionEventListener_Lcom_epson_epos2_ConnectionListener_;
#pragma warning disable 0169
		static Delegate GetSetConnectionEventListener_Lcom_epson_epos2_ConnectionListener_Handler ()
		{
			if (cb_setConnectionEventListener_Lcom_epson_epos2_ConnectionListener_ == null)
				cb_setConnectionEventListener_Lcom_epson_epos2_ConnectionListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetConnectionEventListener_Lcom_epson_epos2_ConnectionListener_));
			return cb_setConnectionEventListener_Lcom_epson_epos2_ConnectionListener_;
		}

		static void n_SetConnectionEventListener_Lcom_epson_epos2_ConnectionListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_listener)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Poskeyboard.PosKeyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var listener = (global::Com.Epson.Epos2.IConnectionListener?)global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.IConnectionListener> (native_listener, JniHandleOwnership.DoNotTransfer);
			__this.SetConnectionEventListener (listener);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.poskeyboard']/class[@name='PosKeyboard']/method[@name='setConnectionEventListener' and count(parameter)=1 and parameter[1][@type='com.epson.epos2.ConnectionListener']]"
		[Register ("setConnectionEventListener", "(Lcom/epson/epos2/ConnectionListener;)V", "GetSetConnectionEventListener_Lcom_epson_epos2_ConnectionListener_Handler")]
		public virtual unsafe void SetConnectionEventListener (global::Com.Epson.Epos2.IConnectionListener? listener)
		{
			const string __id = "setConnectionEventListener.(Lcom/epson/epos2/ConnectionListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((listener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) listener).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (listener);
			}
		}

		static Delegate? cb_setKeyPressEventListener_Lcom_epson_epos2_poskeyboard_KeyPressListener_;
#pragma warning disable 0169
		static Delegate GetSetKeyPressEventListener_Lcom_epson_epos2_poskeyboard_KeyPressListener_Handler ()
		{
			if (cb_setKeyPressEventListener_Lcom_epson_epos2_poskeyboard_KeyPressListener_ == null)
				cb_setKeyPressEventListener_Lcom_epson_epos2_poskeyboard_KeyPressListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetKeyPressEventListener_Lcom_epson_epos2_poskeyboard_KeyPressListener_));
			return cb_setKeyPressEventListener_Lcom_epson_epos2_poskeyboard_KeyPressListener_;
		}

		static void n_SetKeyPressEventListener_Lcom_epson_epos2_poskeyboard_KeyPressListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_listener)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Poskeyboard.PosKeyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var listener = (global::Com.Epson.Epos2.Poskeyboard.IKeyPressListener?)global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Poskeyboard.IKeyPressListener> (native_listener, JniHandleOwnership.DoNotTransfer);
			__this.SetKeyPressEventListener (listener);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.poskeyboard']/class[@name='PosKeyboard']/method[@name='setKeyPressEventListener' and count(parameter)=1 and parameter[1][@type='com.epson.epos2.poskeyboard.KeyPressListener']]"
		[Register ("setKeyPressEventListener", "(Lcom/epson/epos2/poskeyboard/KeyPressListener;)V", "GetSetKeyPressEventListener_Lcom_epson_epos2_poskeyboard_KeyPressListener_Handler")]
		public virtual unsafe void SetKeyPressEventListener (global::Com.Epson.Epos2.Poskeyboard.IKeyPressListener? listener)
		{
			const string __id = "setKeyPressEventListener.(Lcom/epson/epos2/poskeyboard/KeyPressListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((listener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) listener).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (listener);
			}
		}

	}
}
