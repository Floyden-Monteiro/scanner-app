//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Epson.Epsonio {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.epson.epsonio']/class[@name='Finder']"
	[global::Android.Runtime.Register ("com/epson/epsonio/Finder", DoNotGenerateAcw=true)]
	public partial class Finder : global::Java.Lang.Object {
		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epsonio']/class[@name='Finder']/field[@name='FILTER_NAME']"
		[Register ("FILTER_NAME")]
		public const int FilterName = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epsonio']/class[@name='Finder']/field[@name='FILTER_NONE']"
		[Register ("FILTER_NONE")]
		public const int FilterNone = (int) 0;


		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epsonio']/class[@name='Finder']/field[@name='LIST_MATCH']"
		[Register ("LIST_MATCH")]
		public static IList<string>? ListMatch {
			get {
				const string __id = "LIST_MATCH.[Ljava/lang/String;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Android.Runtime.JavaArray<string>.FromJniHandle (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epsonio']/class[@name='Finder']/field[@name='LIST_PREFIX']"
		[Register ("LIST_PREFIX")]
		public static IList<string>? ListPrefix {
			get {
				const string __id = "LIST_PREFIX.[Ljava/lang/String;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Android.Runtime.JavaArray<string>.FromJniHandle (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
		}

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epsonio']/class[@name='Finder']/field[@name='PARAM_DEFAULT']"
		[Register ("PARAM_DEFAULT")]
		public const int ParamDefault = (int) -2;

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/epson/epsonio/Finder", typeof (Finder));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected Finder (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.epson.epsonio']/class[@name='Finder']/constructor[@name='Finder' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe Finder () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epsonio']/class[@name='Finder']/method[@name='getDeviceInfoList' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("getDeviceInfoList", "(I)[Lcom/epson/epsonio/DeviceInfo;", "")]
		public static unsafe global::Com.Epson.Epsonio.DeviceInfo[]? GetDeviceInfoList (int filterOption)
		{
			const string __id = "getDeviceInfoList.(I)[Lcom/epson/epsonio/DeviceInfo;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (filterOption);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return (global::Com.Epson.Epsonio.DeviceInfo[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Com.Epson.Epsonio.DeviceInfo));
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epsonio']/class[@name='Finder']/method[@name='getResult' and count(parameter)=0]"
		[Register ("getResult", "()[Ljava/lang/String;", "")]
		public static unsafe string[]? GetResult ()
		{
			const string __id = "getResult.()[Ljava/lang/String;";
			try {
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
				return (string[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (string));
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epsonio']/class[@name='Finder']/method[@name='isEpson' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("isEpson", "(Ljava/lang/String;)Z", "")]
		public static unsafe bool IsEpson (string? name)
		{
			const string __id = "isEpson.(Ljava/lang/String;)Z";
			IntPtr native_name = JNIEnv.NewString ((string?)name);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_name);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epsonio']/class[@name='Finder']/method[@name='start' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='java.lang.String']]"
		[Register ("start", "(Landroid/content/Context;ILjava/lang/String;)V", "")]
		public static unsafe void Start (global::Android.Content.Context? context, int deviceType, string? findOption)
		{
			const string __id = "start.(Landroid/content/Context;ILjava/lang/String;)V";
			IntPtr native_findOption = JNIEnv.NewString ((string?)findOption);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue (deviceType);
				__args [2] = new JniArgumentValue (native_findOption);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_findOption);
				global::System.GC.KeepAlive (context);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epsonio']/class[@name='Finder']/method[@name='stop' and count(parameter)=0]"
		[Register ("stop", "()V", "")]
		public static unsafe void Stop ()
		{
			const string __id = "stop.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

	}
}
