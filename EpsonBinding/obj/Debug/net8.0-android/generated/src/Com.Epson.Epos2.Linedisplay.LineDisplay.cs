//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Epson.Epos2.Linedisplay {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']"
	[global::Android.Runtime.Register ("com/epson/epos2/linedisplay/LineDisplay", DoNotGenerateAcw=true)]
	public partial class LineDisplay : global::Java.Lang.Object {
		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='ALL_ROWS']"
		[Register ("ALL_ROWS")]
		public const int AllRows = (int) -12;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='BRIGHTNESS_100']"
		[Register ("BRIGHTNESS_100")]
		public const int Brightness100 = (int) 3;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='BRIGHTNESS_20']"
		[Register ("BRIGHTNESS_20")]
		public const int Brightness20 = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='BRIGHTNESS_40']"
		[Register ("BRIGHTNESS_40")]
		public const int Brightness40 = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='BRIGHTNESS_60']"
		[Register ("BRIGHTNESS_60")]
		public const int Brightness60 = (int) 2;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='CURSOR_NONE']"
		[Register ("CURSOR_NONE")]
		public const int CursorNone = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='CURSOR_UNDERLINE']"
		[Register ("CURSOR_UNDERLINE")]
		public const int CursorUnderline = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='DM_D110']"
		[Register ("DM_D110")]
		public const int DmD110 = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='DM_D210']"
		[Register ("DM_D210")]
		public const int DmD210 = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='DM_D30']"
		[Register ("DM_D30")]
		public const int DmD30 = (int) 2;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='DM_D70']"
		[Register ("DM_D70")]
		public const int DmD70 = (int) 3;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='EVENT_DISCONNECT']"
		[Register ("EVENT_DISCONNECT")]
		public const int EventDisconnect = (int) 2;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='EVENT_RECONNECT']"
		[Register ("EVENT_RECONNECT")]
		public const int EventReconnect = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='EVENT_RECONNECTING']"
		[Register ("EVENT_RECONNECTING")]
		public const int EventReconnecting = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='EVEN_ROWS']"
		[Register ("EVEN_ROWS")]
		public const int EvenRows = (int) -10;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='FALSE']"
		[Register ("FALSE")]
		public const int False = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='LANDSCAPE_LAYOUT_MODE_1']"
		[Register ("LANDSCAPE_LAYOUT_MODE_1")]
		public const int LandscapeLayoutMode1 = (int) 15;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='LANDSCAPE_LAYOUT_MODE_2']"
		[Register ("LANDSCAPE_LAYOUT_MODE_2")]
		public const int LandscapeLayoutMode2 = (int) 16;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='LANDSCAPE_LAYOUT_MODE_3']"
		[Register ("LANDSCAPE_LAYOUT_MODE_3")]
		public const int LandscapeLayoutMode3 = (int) 17;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='LANDSCAPE_LAYOUT_MODE_4']"
		[Register ("LANDSCAPE_LAYOUT_MODE_4")]
		public const int LandscapeLayoutMode4 = (int) 18;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='LANDSCAPE_LAYOUT_MODE_5']"
		[Register ("LANDSCAPE_LAYOUT_MODE_5")]
		public const int LandscapeLayoutMode5 = (int) 19;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='LANG_EN']"
		[Register ("LANG_EN")]
		public const int LangEn = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='LANG_JA']"
		[Register ("LANG_JA")]
		public const int LangJa = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='LANG_MULTI']"
		[Register ("LANG_MULTI")]
		public const int LangMulti = (int) 7;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='LAYOUT_MODE_1']"
		[Register ("LAYOUT_MODE_1")]
		public const int LayoutMode1 = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='LAYOUT_MODE_10']"
		[Register ("LAYOUT_MODE_10")]
		public const int LayoutMode10 = (int) 9;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='LAYOUT_MODE_11']"
		[Register ("LAYOUT_MODE_11")]
		public const int LayoutMode11 = (int) 10;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='LAYOUT_MODE_12']"
		[Register ("LAYOUT_MODE_12")]
		public const int LayoutMode12 = (int) 11;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='LAYOUT_MODE_13']"
		[Register ("LAYOUT_MODE_13")]
		public const int LayoutMode13 = (int) 12;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='LAYOUT_MODE_14']"
		[Register ("LAYOUT_MODE_14")]
		public const int LayoutMode14 = (int) 13;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='LAYOUT_MODE_15']"
		[Register ("LAYOUT_MODE_15")]
		public const int LayoutMode15 = (int) 14;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='LAYOUT_MODE_2']"
		[Register ("LAYOUT_MODE_2")]
		public const int LayoutMode2 = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='LAYOUT_MODE_3']"
		[Register ("LAYOUT_MODE_3")]
		public const int LayoutMode3 = (int) 2;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='LAYOUT_MODE_4']"
		[Register ("LAYOUT_MODE_4")]
		public const int LayoutMode4 = (int) 3;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='LAYOUT_MODE_5']"
		[Register ("LAYOUT_MODE_5")]
		public const int LayoutMode5 = (int) 4;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='LAYOUT_MODE_6']"
		[Register ("LAYOUT_MODE_6")]
		public const int LayoutMode6 = (int) 5;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='LAYOUT_MODE_7']"
		[Register ("LAYOUT_MODE_7")]
		public const int LayoutMode7 = (int) 6;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='LAYOUT_MODE_8']"
		[Register ("LAYOUT_MODE_8")]
		public const int LayoutMode8 = (int) 7;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='LAYOUT_MODE_9']"
		[Register ("LAYOUT_MODE_9")]
		public const int LayoutMode9 = (int) 8;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='LEVEL_H']"
		[Register ("LEVEL_H")]
		public const int LevelH = (int) 12;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='LEVEL_L']"
		[Register ("LEVEL_L")]
		public const int LevelL = (int) 9;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='LEVEL_M']"
		[Register ("LEVEL_M")]
		public const int LevelM = (int) 10;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='LEVEL_Q']"
		[Register ("LEVEL_Q")]
		public const int LevelQ = (int) 11;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='MARQUEE_PLACE']"
		[Register ("MARQUEE_PLACE")]
		public const int MarqueePlace = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='MARQUEE_WALK']"
		[Register ("MARQUEE_WALK")]
		public const int MarqueeWalk = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='MOVE_BOTTOM_LEFT']"
		[Register ("MOVE_BOTTOM_LEFT")]
		public const int MoveBottomLeft = (int) 2;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='MOVE_BOTTOM_RIGHT']"
		[Register ("MOVE_BOTTOM_RIGHT")]
		public const int MoveBottomRight = (int) 3;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='MOVE_TOP_LEFT']"
		[Register ("MOVE_TOP_LEFT")]
		public const int MoveTopLeft = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='MOVE_TOP_RIGHT']"
		[Register ("MOVE_TOP_RIGHT")]
		public const int MoveTopRight = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='ODD_ROWS']"
		[Register ("ODD_ROWS")]
		public const int OddRows = (int) -11;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='PARAM_DEFAULT']"
		[Register ("PARAM_DEFAULT")]
		public const int ParamDefault = (int) -2;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='PARAM_UNUSE']"
		[Register ("PARAM_UNUSE")]
		public const int ParamUnuse = (int) -4;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='PORTRAIT_LAYOUT_MODE_1']"
		[Register ("PORTRAIT_LAYOUT_MODE_1")]
		public const int PortraitLayoutMode1 = (int) 20;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='PORTRAIT_LAYOUT_MODE_2']"
		[Register ("PORTRAIT_LAYOUT_MODE_2")]
		public const int PortraitLayoutMode2 = (int) 21;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='PORTRAIT_LAYOUT_MODE_3']"
		[Register ("PORTRAIT_LAYOUT_MODE_3")]
		public const int PortraitLayoutMode3 = (int) 22;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='PORTRAIT_LAYOUT_MODE_4']"
		[Register ("PORTRAIT_LAYOUT_MODE_4")]
		public const int PortraitLayoutMode4 = (int) 23;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='PORTRAIT_LAYOUT_MODE_5']"
		[Register ("PORTRAIT_LAYOUT_MODE_5")]
		public const int PortraitLayoutMode5 = (int) 24;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='PORTRAIT_LAYOUT_MODE_6']"
		[Register ("PORTRAIT_LAYOUT_MODE_6")]
		public const int PortraitLayoutMode6 = (int) 25;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='PORTRAIT_LAYOUT_MODE_7']"
		[Register ("PORTRAIT_LAYOUT_MODE_7")]
		public const int PortraitLayoutMode7 = (int) 26;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='SCROLL_HORIZONTAL']"
		[Register ("SCROLL_HORIZONTAL")]
		public const int ScrollHorizontal = (int) 2;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='SCROLL_OVERWRITE']"
		[Register ("SCROLL_OVERWRITE")]
		public const int ScrollOverwrite = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='SCROLL_VERTICAL']"
		[Register ("SCROLL_VERTICAL")]
		public const int ScrollVertical = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='SYMBOL_QRCODE_MODEL_1']"
		[Register ("SYMBOL_QRCODE_MODEL_1")]
		public const int SymbolQrcodeModel1 = (int) 2;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='SYMBOL_QRCODE_MODEL_2']"
		[Register ("SYMBOL_QRCODE_MODEL_2")]
		public const int SymbolQrcodeModel2 = (int) 3;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/field[@name='TRUE']"
		[Register ("TRUE")]
		public const int True = (int) 1;

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/epson/epos2/linedisplay/LineDisplay", typeof (LineDisplay));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected LineDisplay (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/constructor[@name='LineDisplay' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='android.content.Context']]"
		[Register (".ctor", "(ILandroid/content/Context;)V", "")]
		public unsafe LineDisplay (int displaySeries, global::Android.Content.Context? context) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(ILandroid/content/Context;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (displaySeries);
				__args [1] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (context);
			}
		}

		static Delegate? cb_getAdmin;
#pragma warning disable 0169
		static Delegate GetGetAdminHandler ()
		{
			if (cb_getAdmin == null)
				cb_getAdmin = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetAdmin));
			return cb_getAdmin;
		}

		static IntPtr n_GetAdmin (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.Admin);
		}
#pragma warning restore 0169

		public virtual unsafe string? Admin {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='getAdmin' and count(parameter)=0]"
			[Register ("getAdmin", "()Ljava/lang/String;", "GetGetAdminHandler")]
			get {
				const string __id = "getAdmin.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getLocation;
#pragma warning disable 0169
		static Delegate GetGetLocationHandler ()
		{
			if (cb_getLocation == null)
				cb_getLocation = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetLocation));
			return cb_getLocation;
		}

		static IntPtr n_GetLocation (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.Location);
		}
#pragma warning restore 0169

		public virtual unsafe string? Location {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='getLocation' and count(parameter)=0]"
			[Register ("getLocation", "()Ljava/lang/String;", "GetGetLocationHandler")]
			get {
				const string __id = "getLocation.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getStatus;
#pragma warning disable 0169
		static Delegate GetGetStatusHandler ()
		{
			if (cb_getStatus == null)
				cb_getStatus = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetStatus));
			return cb_getStatus;
		}

		static IntPtr n_GetStatus (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.Status);
		}
#pragma warning restore 0169

		public virtual unsafe global::Com.Epson.Epos2.Linedisplay.DisplayStatusInfo? Status {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='getStatus' and count(parameter)=0]"
			[Register ("getStatus", "()Lcom/epson/epos2/linedisplay/DisplayStatusInfo;", "GetGetStatusHandler")]
			get {
				const string __id = "getStatus.()Lcom/epson/epos2/linedisplay/DisplayStatusInfo;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.DisplayStatusInfo> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_addBackgroundColor_IIII;
#pragma warning disable 0169
		static Delegate GetAddBackgroundColor_IIIIHandler ()
		{
			if (cb_addBackgroundColor_IIII == null)
				cb_addBackgroundColor_IIII = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIIII_V (n_AddBackgroundColor_IIII));
			return cb_addBackgroundColor_IIII;
		}

		static void n_AddBackgroundColor_IIII (IntPtr jnienv, IntPtr native__this, int row, int r, int g, int b)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.AddBackgroundColor (row, r, g, b);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addBackgroundColor' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
		[Register ("addBackgroundColor", "(IIII)V", "GetAddBackgroundColor_IIIIHandler")]
		public virtual unsafe void AddBackgroundColor (int row, int r, int g, int b)
		{
			const string __id = "addBackgroundColor.(IIII)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (row);
				__args [1] = new JniArgumentValue (r);
				__args [2] = new JniArgumentValue (g);
				__args [3] = new JniArgumentValue (b);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_addClearCurrentTextArea;
#pragma warning disable 0169
		static Delegate GetAddClearCurrentTextAreaHandler ()
		{
			if (cb_addClearCurrentTextArea == null)
				cb_addClearCurrentTextArea = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_AddClearCurrentTextArea));
			return cb_addClearCurrentTextArea;
		}

		static void n_AddClearCurrentTextArea (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.AddClearCurrentTextArea ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addClearCurrentTextArea' and count(parameter)=0]"
		[Register ("addClearCurrentTextArea", "()V", "GetAddClearCurrentTextAreaHandler")]
		public virtual unsafe void AddClearCurrentTextArea ()
		{
			const string __id = "addClearCurrentTextArea.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_addClearCurrentWindow;
#pragma warning disable 0169
		static Delegate GetAddClearCurrentWindowHandler ()
		{
			if (cb_addClearCurrentWindow == null)
				cb_addClearCurrentWindow = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_AddClearCurrentWindow));
			return cb_addClearCurrentWindow;
		}

		static void n_AddClearCurrentWindow (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.AddClearCurrentWindow ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addClearCurrentWindow' and count(parameter)=0]"
		[Register ("addClearCurrentWindow", "()V", "GetAddClearCurrentWindowHandler")]
		public virtual unsafe void AddClearCurrentWindow ()
		{
			const string __id = "addClearCurrentWindow.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_addClearImage;
#pragma warning disable 0169
		static Delegate GetAddClearImageHandler ()
		{
			if (cb_addClearImage == null)
				cb_addClearImage = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_AddClearImage));
			return cb_addClearImage;
		}

		static void n_AddClearImage (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.AddClearImage ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addClearImage' and count(parameter)=0]"
		[Register ("addClearImage", "()V", "GetAddClearImageHandler")]
		public virtual unsafe void AddClearImage ()
		{
			const string __id = "addClearImage.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_addClearSymbol;
#pragma warning disable 0169
		static Delegate GetAddClearSymbolHandler ()
		{
			if (cb_addClearSymbol == null)
				cb_addClearSymbol = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_AddClearSymbol));
			return cb_addClearSymbol;
		}

		static void n_AddClearSymbol (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.AddClearSymbol ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addClearSymbol' and count(parameter)=0]"
		[Register ("addClearSymbol", "()V", "GetAddClearSymbolHandler")]
		public virtual unsafe void AddClearSymbol ()
		{
			const string __id = "addClearSymbol.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_addCommand_arrayB;
#pragma warning disable 0169
		static Delegate GetAddCommand_arrayBHandler ()
		{
			if (cb_addCommand_arrayB == null)
				cb_addCommand_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_AddCommand_arrayB));
			return cb_addCommand_arrayB;
		}

		static void n_AddCommand_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_data)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var data = (byte[]?) JNIEnv.GetArray (native_data, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.AddCommand (data);
			if (data != null)
				JNIEnv.CopyArray (data, native_data);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addCommand' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("addCommand", "([B)V", "GetAddCommand_arrayBHandler")]
		public virtual unsafe void AddCommand (byte[]? data)
		{
			const string __id = "addCommand.([B)V";
			IntPtr native_data = JNIEnv.NewArray (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_data);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (data != null) {
					JNIEnv.CopyArray (native_data, data);
					JNIEnv.DeleteLocalRef (native_data);
				}
				global::System.GC.KeepAlive (data);
			}
		}

		static Delegate? cb_addCreateScreen_I;
#pragma warning disable 0169
		static Delegate GetAddCreateScreen_IHandler ()
		{
			if (cb_addCreateScreen_I == null)
				cb_addCreateScreen_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_AddCreateScreen_I));
			return cb_addCreateScreen_I;
		}

		static void n_AddCreateScreen_I (IntPtr jnienv, IntPtr native__this, int mode)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.AddCreateScreen (mode);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addCreateScreen' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("addCreateScreen", "(I)V", "GetAddCreateScreen_IHandler")]
		public virtual unsafe void AddCreateScreen (int mode)
		{
			const string __id = "addCreateScreen.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (mode);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_addCreateScreenCustom_III;
#pragma warning disable 0169
		static Delegate GetAddCreateScreenCustom_IIIHandler ()
		{
			if (cb_addCreateScreenCustom_III == null)
				cb_addCreateScreenCustom_III = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIII_V (n_AddCreateScreenCustom_III));
			return cb_addCreateScreenCustom_III;
		}

		static void n_AddCreateScreenCustom_III (IntPtr jnienv, IntPtr native__this, int mode, int column, int row)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.AddCreateScreenCustom (mode, column, row);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addCreateScreenCustom' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[Register ("addCreateScreenCustom", "(III)V", "GetAddCreateScreenCustom_IIIHandler")]
		public virtual unsafe void AddCreateScreenCustom (int mode, int column, int row)
		{
			const string __id = "addCreateScreenCustom.(III)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (mode);
				__args [1] = new JniArgumentValue (column);
				__args [2] = new JniArgumentValue (row);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_addCreateTextArea_IIIIII;
#pragma warning disable 0169
		static Delegate GetAddCreateTextArea_IIIIIIHandler ()
		{
			if (cb_addCreateTextArea_IIIIII == null)
				cb_addCreateTextArea_IIIIII = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIIIIII_V (n_AddCreateTextArea_IIIIII));
			return cb_addCreateTextArea_IIIIII;
		}

		static void n_AddCreateTextArea_IIIIII (IntPtr jnienv, IntPtr native__this, int number, int x, int y, int width, int height, int scrollMode)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.AddCreateTextArea (number, x, y, width, height, scrollMode);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addCreateTextArea' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]"
		[Register ("addCreateTextArea", "(IIIIII)V", "GetAddCreateTextArea_IIIIIIHandler")]
		public virtual unsafe void AddCreateTextArea (int number, int x, int y, int width, int height, int scrollMode)
		{
			const string __id = "addCreateTextArea.(IIIIII)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (number);
				__args [1] = new JniArgumentValue (x);
				__args [2] = new JniArgumentValue (y);
				__args [3] = new JniArgumentValue (width);
				__args [4] = new JniArgumentValue (height);
				__args [5] = new JniArgumentValue (scrollMode);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_addCreateWindow_IIIIII;
#pragma warning disable 0169
		static Delegate GetAddCreateWindow_IIIIIIHandler ()
		{
			if (cb_addCreateWindow_IIIIII == null)
				cb_addCreateWindow_IIIIII = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIIIIII_V (n_AddCreateWindow_IIIIII));
			return cb_addCreateWindow_IIIIII;
		}

		static void n_AddCreateWindow_IIIIII (IntPtr jnienv, IntPtr native__this, int number, int x, int y, int width, int height, int scrollMode)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.AddCreateWindow (number, x, y, width, height, scrollMode);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addCreateWindow' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]"
		[Register ("addCreateWindow", "(IIIIII)V", "GetAddCreateWindow_IIIIIIHandler")]
		public virtual unsafe void AddCreateWindow (int number, int x, int y, int width, int height, int scrollMode)
		{
			const string __id = "addCreateWindow.(IIIIII)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (number);
				__args [1] = new JniArgumentValue (x);
				__args [2] = new JniArgumentValue (y);
				__args [3] = new JniArgumentValue (width);
				__args [4] = new JniArgumentValue (height);
				__args [5] = new JniArgumentValue (scrollMode);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_addDestroyTextArea_I;
#pragma warning disable 0169
		static Delegate GetAddDestroyTextArea_IHandler ()
		{
			if (cb_addDestroyTextArea_I == null)
				cb_addDestroyTextArea_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_AddDestroyTextArea_I));
			return cb_addDestroyTextArea_I;
		}

		static void n_AddDestroyTextArea_I (IntPtr jnienv, IntPtr native__this, int number)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.AddDestroyTextArea (number);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addDestroyTextArea' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("addDestroyTextArea", "(I)V", "GetAddDestroyTextArea_IHandler")]
		public virtual unsafe void AddDestroyTextArea (int number)
		{
			const string __id = "addDestroyTextArea.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (number);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_addDestroyWindow_I;
#pragma warning disable 0169
		static Delegate GetAddDestroyWindow_IHandler ()
		{
			if (cb_addDestroyWindow_I == null)
				cb_addDestroyWindow_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_AddDestroyWindow_I));
			return cb_addDestroyWindow_I;
		}

		static void n_AddDestroyWindow_I (IntPtr jnienv, IntPtr native__this, int number)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.AddDestroyWindow (number);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addDestroyWindow' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("addDestroyWindow", "(I)V", "GetAddDestroyWindow_IHandler")]
		public virtual unsafe void AddDestroyWindow (int number)
		{
			const string __id = "addDestroyWindow.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (number);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_addDownloadImage_IIIIII;
#pragma warning disable 0169
		static Delegate GetAddDownloadImage_IIIIIIHandler ()
		{
			if (cb_addDownloadImage_IIIIII == null)
				cb_addDownloadImage_IIIIII = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIIIIII_V (n_AddDownloadImage_IIIIII));
			return cb_addDownloadImage_IIIIII;
		}

		static void n_AddDownloadImage_IIIIII (IntPtr jnienv, IntPtr native__this, int key1, int key2, int dotX, int dotY, int width, int height)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.AddDownloadImage (key1, key2, dotX, dotY, width, height);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addDownloadImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]"
		[Register ("addDownloadImage", "(IIIIII)V", "GetAddDownloadImage_IIIIIIHandler")]
		public virtual unsafe void AddDownloadImage (int key1, int key2, int dotX, int dotY, int width, int height)
		{
			const string __id = "addDownloadImage.(IIIIII)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (key1);
				__args [1] = new JniArgumentValue (key2);
				__args [2] = new JniArgumentValue (dotX);
				__args [3] = new JniArgumentValue (dotY);
				__args [4] = new JniArgumentValue (width);
				__args [5] = new JniArgumentValue (height);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_addInitialize;
#pragma warning disable 0169
		static Delegate GetAddInitializeHandler ()
		{
			if (cb_addInitialize == null)
				cb_addInitialize = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_AddInitialize));
			return cb_addInitialize;
		}

		static void n_AddInitialize (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.AddInitialize ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addInitialize' and count(parameter)=0]"
		[Register ("addInitialize", "()V", "GetAddInitializeHandler")]
		public virtual unsafe void AddInitialize ()
		{
			const string __id = "addInitialize.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_addMarqueeText_Ljava_lang_String_IIIII;
#pragma warning disable 0169
		static Delegate GetAddMarqueeText_Ljava_lang_String_IIIIIHandler ()
		{
			if (cb_addMarqueeText_Ljava_lang_String_IIIII == null)
				cb_addMarqueeText_Ljava_lang_String_IIIII = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLIIIII_V (n_AddMarqueeText_Ljava_lang_String_IIIII));
			return cb_addMarqueeText_Ljava_lang_String_IIIII;
		}

		static void n_AddMarqueeText_Ljava_lang_String_IIIII (IntPtr jnienv, IntPtr native__this, IntPtr native_data, int format, int unitWait, int repeatWait, int repeatCount, int lang)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var data = JNIEnv.GetString (native_data, JniHandleOwnership.DoNotTransfer);
			__this.AddMarqueeText (data, format, unitWait, repeatWait, repeatCount, lang);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addMarqueeText' and count(parameter)=6 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]"
		[Register ("addMarqueeText", "(Ljava/lang/String;IIIII)V", "GetAddMarqueeText_Ljava_lang_String_IIIIIHandler")]
		public virtual unsafe void AddMarqueeText (string? data, int format, int unitWait, int repeatWait, int repeatCount, int lang)
		{
			const string __id = "addMarqueeText.(Ljava/lang/String;IIIII)V";
			IntPtr native_data = JNIEnv.NewString ((string?)data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (native_data);
				__args [1] = new JniArgumentValue (format);
				__args [2] = new JniArgumentValue (unitWait);
				__args [3] = new JniArgumentValue (repeatWait);
				__args [4] = new JniArgumentValue (repeatCount);
				__args [5] = new JniArgumentValue (lang);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
			}
		}

		static Delegate? cb_addMoveCursorPosition_I;
#pragma warning disable 0169
		static Delegate GetAddMoveCursorPosition_IHandler ()
		{
			if (cb_addMoveCursorPosition_I == null)
				cb_addMoveCursorPosition_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_AddMoveCursorPosition_I));
			return cb_addMoveCursorPosition_I;
		}

		static void n_AddMoveCursorPosition_I (IntPtr jnienv, IntPtr native__this, int position)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.AddMoveCursorPosition (position);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addMoveCursorPosition' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("addMoveCursorPosition", "(I)V", "GetAddMoveCursorPosition_IHandler")]
		public virtual unsafe void AddMoveCursorPosition (int position)
		{
			const string __id = "addMoveCursorPosition.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (position);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_addNVImage_IIIIII;
#pragma warning disable 0169
		static Delegate GetAddNVImage_IIIIIIHandler ()
		{
			if (cb_addNVImage_IIIIII == null)
				cb_addNVImage_IIIIII = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIIIIII_V (n_AddNVImage_IIIIII));
			return cb_addNVImage_IIIIII;
		}

		static void n_AddNVImage_IIIIII (IntPtr jnienv, IntPtr native__this, int key1, int key2, int dotX, int dotY, int width, int height)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.AddNVImage (key1, key2, dotX, dotY, width, height);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addNVImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]"
		[Register ("addNVImage", "(IIIIII)V", "GetAddNVImage_IIIIIIHandler")]
		public virtual unsafe void AddNVImage (int key1, int key2, int dotX, int dotY, int width, int height)
		{
			const string __id = "addNVImage.(IIIIII)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (key1);
				__args [1] = new JniArgumentValue (key2);
				__args [2] = new JniArgumentValue (dotX);
				__args [3] = new JniArgumentValue (dotY);
				__args [4] = new JniArgumentValue (width);
				__args [5] = new JniArgumentValue (height);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_addRegisterDownloadImage_arrayBII;
#pragma warning disable 0169
		static Delegate GetAddRegisterDownloadImage_arrayBIIHandler ()
		{
			if (cb_addRegisterDownloadImage_arrayBII == null)
				cb_addRegisterDownloadImage_arrayBII = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLII_V (n_AddRegisterDownloadImage_arrayBII));
			return cb_addRegisterDownloadImage_arrayBII;
		}

		static void n_AddRegisterDownloadImage_arrayBII (IntPtr jnienv, IntPtr native__this, IntPtr native_data, int key1, int key2)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var data = (byte[]?) JNIEnv.GetArray (native_data, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.AddRegisterDownloadImage (data, key1, key2);
			if (data != null)
				JNIEnv.CopyArray (data, native_data);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addRegisterDownloadImage' and count(parameter)=3 and parameter[1][@type='byte[]'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[Register ("addRegisterDownloadImage", "([BII)V", "GetAddRegisterDownloadImage_arrayBIIHandler")]
		public virtual unsafe void AddRegisterDownloadImage (byte[]? data, int key1, int key2)
		{
			const string __id = "addRegisterDownloadImage.([BII)V";
			IntPtr native_data = JNIEnv.NewArray (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_data);
				__args [1] = new JniArgumentValue (key1);
				__args [2] = new JniArgumentValue (key2);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (data != null) {
					JNIEnv.CopyArray (native_data, data);
					JNIEnv.DeleteLocalRef (native_data);
				}
				global::System.GC.KeepAlive (data);
			}
		}

		static Delegate? cb_addReverseText_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetAddReverseText_Ljava_lang_String_Handler ()
		{
			if (cb_addReverseText_Ljava_lang_String_ == null)
				cb_addReverseText_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_AddReverseText_Ljava_lang_String_));
			return cb_addReverseText_Ljava_lang_String_;
		}

		static void n_AddReverseText_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_data)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var data = JNIEnv.GetString (native_data, JniHandleOwnership.DoNotTransfer);
			__this.AddReverseText (data);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addReverseText' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("addReverseText", "(Ljava/lang/String;)V", "GetAddReverseText_Ljava_lang_String_Handler")]
		public virtual unsafe void AddReverseText (string? data)
		{
			const string __id = "addReverseText.(Ljava/lang/String;)V";
			IntPtr native_data = JNIEnv.NewString ((string?)data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_data);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
			}
		}

		static Delegate? cb_addReverseText_Ljava_lang_String_I;
#pragma warning disable 0169
		static Delegate GetAddReverseText_Ljava_lang_String_IHandler ()
		{
			if (cb_addReverseText_Ljava_lang_String_I == null)
				cb_addReverseText_Ljava_lang_String_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_V (n_AddReverseText_Ljava_lang_String_I));
			return cb_addReverseText_Ljava_lang_String_I;
		}

		static void n_AddReverseText_Ljava_lang_String_I (IntPtr jnienv, IntPtr native__this, IntPtr native_data, int lang)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var data = JNIEnv.GetString (native_data, JniHandleOwnership.DoNotTransfer);
			__this.AddReverseText (data, lang);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addReverseText' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int']]"
		[Register ("addReverseText", "(Ljava/lang/String;I)V", "GetAddReverseText_Ljava_lang_String_IHandler")]
		public virtual unsafe void AddReverseText (string? data, int lang)
		{
			const string __id = "addReverseText.(Ljava/lang/String;I)V";
			IntPtr native_data = JNIEnv.NewString ((string?)data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_data);
				__args [1] = new JniArgumentValue (lang);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
			}
		}

		static Delegate? cb_addReverseText_Ljava_lang_String_II;
#pragma warning disable 0169
		static Delegate GetAddReverseText_Ljava_lang_String_IIHandler ()
		{
			if (cb_addReverseText_Ljava_lang_String_II == null)
				cb_addReverseText_Ljava_lang_String_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLII_V (n_AddReverseText_Ljava_lang_String_II));
			return cb_addReverseText_Ljava_lang_String_II;
		}

		static void n_AddReverseText_Ljava_lang_String_II (IntPtr jnienv, IntPtr native__this, IntPtr native_data, int x, int y)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var data = JNIEnv.GetString (native_data, JniHandleOwnership.DoNotTransfer);
			__this.AddReverseText (data, x, y);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addReverseText' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[Register ("addReverseText", "(Ljava/lang/String;II)V", "GetAddReverseText_Ljava_lang_String_IIHandler")]
		public virtual unsafe void AddReverseText (string? data, int x, int y)
		{
			const string __id = "addReverseText.(Ljava/lang/String;II)V";
			IntPtr native_data = JNIEnv.NewString ((string?)data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_data);
				__args [1] = new JniArgumentValue (x);
				__args [2] = new JniArgumentValue (y);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
			}
		}

		static Delegate? cb_addReverseText_Ljava_lang_String_III;
#pragma warning disable 0169
		static Delegate GetAddReverseText_Ljava_lang_String_IIIHandler ()
		{
			if (cb_addReverseText_Ljava_lang_String_III == null)
				cb_addReverseText_Ljava_lang_String_III = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLIII_V (n_AddReverseText_Ljava_lang_String_III));
			return cb_addReverseText_Ljava_lang_String_III;
		}

		static void n_AddReverseText_Ljava_lang_String_III (IntPtr jnienv, IntPtr native__this, IntPtr native_data, int x, int y, int lang)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var data = JNIEnv.GetString (native_data, JniHandleOwnership.DoNotTransfer);
			__this.AddReverseText (data, x, y, lang);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addReverseText' and count(parameter)=4 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
		[Register ("addReverseText", "(Ljava/lang/String;III)V", "GetAddReverseText_Ljava_lang_String_IIIHandler")]
		public virtual unsafe void AddReverseText (string? data, int x, int y, int lang)
		{
			const string __id = "addReverseText.(Ljava/lang/String;III)V";
			IntPtr native_data = JNIEnv.NewString ((string?)data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (native_data);
				__args [1] = new JniArgumentValue (x);
				__args [2] = new JniArgumentValue (y);
				__args [3] = new JniArgumentValue (lang);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
			}
		}

		static Delegate? cb_addSetBlink_I;
#pragma warning disable 0169
		static Delegate GetAddSetBlink_IHandler ()
		{
			if (cb_addSetBlink_I == null)
				cb_addSetBlink_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_AddSetBlink_I));
			return cb_addSetBlink_I;
		}

		static void n_AddSetBlink_I (IntPtr jnienv, IntPtr native__this, int interval)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.AddSetBlink (interval);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addSetBlink' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("addSetBlink", "(I)V", "GetAddSetBlink_IHandler")]
		public virtual unsafe void AddSetBlink (int interval)
		{
			const string __id = "addSetBlink.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (interval);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_addSetBrightness_I;
#pragma warning disable 0169
		static Delegate GetAddSetBrightness_IHandler ()
		{
			if (cb_addSetBrightness_I == null)
				cb_addSetBrightness_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_AddSetBrightness_I));
			return cb_addSetBrightness_I;
		}

		static void n_AddSetBrightness_I (IntPtr jnienv, IntPtr native__this, int brightness)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.AddSetBrightness (brightness);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addSetBrightness' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("addSetBrightness", "(I)V", "GetAddSetBrightness_IHandler")]
		public virtual unsafe void AddSetBrightness (int brightness)
		{
			const string __id = "addSetBrightness.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (brightness);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_addSetCurrentTextArea_I;
#pragma warning disable 0169
		static Delegate GetAddSetCurrentTextArea_IHandler ()
		{
			if (cb_addSetCurrentTextArea_I == null)
				cb_addSetCurrentTextArea_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_AddSetCurrentTextArea_I));
			return cb_addSetCurrentTextArea_I;
		}

		static void n_AddSetCurrentTextArea_I (IntPtr jnienv, IntPtr native__this, int number)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.AddSetCurrentTextArea (number);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addSetCurrentTextArea' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("addSetCurrentTextArea", "(I)V", "GetAddSetCurrentTextArea_IHandler")]
		public virtual unsafe void AddSetCurrentTextArea (int number)
		{
			const string __id = "addSetCurrentTextArea.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (number);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_addSetCurrentWindow_I;
#pragma warning disable 0169
		static Delegate GetAddSetCurrentWindow_IHandler ()
		{
			if (cb_addSetCurrentWindow_I == null)
				cb_addSetCurrentWindow_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_AddSetCurrentWindow_I));
			return cb_addSetCurrentWindow_I;
		}

		static void n_AddSetCurrentWindow_I (IntPtr jnienv, IntPtr native__this, int number)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.AddSetCurrentWindow (number);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addSetCurrentWindow' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("addSetCurrentWindow", "(I)V", "GetAddSetCurrentWindow_IHandler")]
		public virtual unsafe void AddSetCurrentWindow (int number)
		{
			const string __id = "addSetCurrentWindow.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (number);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_addSetCursorPosition_II;
#pragma warning disable 0169
		static Delegate GetAddSetCursorPosition_IIHandler ()
		{
			if (cb_addSetCursorPosition_II == null)
				cb_addSetCursorPosition_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPII_V (n_AddSetCursorPosition_II));
			return cb_addSetCursorPosition_II;
		}

		static void n_AddSetCursorPosition_II (IntPtr jnienv, IntPtr native__this, int x, int y)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.AddSetCursorPosition (x, y);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addSetCursorPosition' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("addSetCursorPosition", "(II)V", "GetAddSetCursorPosition_IIHandler")]
		public virtual unsafe void AddSetCursorPosition (int x, int y)
		{
			const string __id = "addSetCursorPosition.(II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (x);
				__args [1] = new JniArgumentValue (y);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_addSetCursorType_I;
#pragma warning disable 0169
		static Delegate GetAddSetCursorType_IHandler ()
		{
			if (cb_addSetCursorType_I == null)
				cb_addSetCursorType_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_AddSetCursorType_I));
			return cb_addSetCursorType_I;
		}

		static void n_AddSetCursorType_I (IntPtr jnienv, IntPtr native__this, int type)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.AddSetCursorType (type);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addSetCursorType' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("addSetCursorType", "(I)V", "GetAddSetCursorType_IHandler")]
		public virtual unsafe void AddSetCursorType (int type)
		{
			const string __id = "addSetCursorType.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (type);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_addShowClock;
#pragma warning disable 0169
		static Delegate GetAddShowClockHandler ()
		{
			if (cb_addShowClock == null)
				cb_addShowClock = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_AddShowClock));
			return cb_addShowClock;
		}

		static void n_AddShowClock (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.AddShowClock ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addShowClock' and count(parameter)=0]"
		[Register ("addShowClock", "()V", "GetAddShowClockHandler")]
		public virtual unsafe void AddShowClock ()
		{
			const string __id = "addShowClock.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_addStartSlideShow_I;
#pragma warning disable 0169
		static Delegate GetAddStartSlideShow_IHandler ()
		{
			if (cb_addStartSlideShow_I == null)
				cb_addStartSlideShow_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_AddStartSlideShow_I));
			return cb_addStartSlideShow_I;
		}

		static void n_AddStartSlideShow_I (IntPtr jnienv, IntPtr native__this, int interval)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.AddStartSlideShow (interval);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addStartSlideShow' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("addStartSlideShow", "(I)V", "GetAddStartSlideShow_IHandler")]
		public virtual unsafe void AddStartSlideShow (int interval)
		{
			const string __id = "addStartSlideShow.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (interval);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_addStopSlideShow;
#pragma warning disable 0169
		static Delegate GetAddStopSlideShowHandler ()
		{
			if (cb_addStopSlideShow == null)
				cb_addStopSlideShow = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_AddStopSlideShow));
			return cb_addStopSlideShow;
		}

		static void n_AddStopSlideShow (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.AddStopSlideShow ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addStopSlideShow' and count(parameter)=0]"
		[Register ("addStopSlideShow", "()V", "GetAddStopSlideShowHandler")]
		public virtual unsafe void AddStopSlideShow ()
		{
			const string __id = "addStopSlideShow.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_addSymbol_Ljava_lang_String_IIIIIII;
#pragma warning disable 0169
		static Delegate GetAddSymbol_Ljava_lang_String_IIIIIIIHandler ()
		{
			if (cb_addSymbol_Ljava_lang_String_IIIIIII == null)
				cb_addSymbol_Ljava_lang_String_IIIIIII = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLIIIIIII_V (n_AddSymbol_Ljava_lang_String_IIIIIII));
			return cb_addSymbol_Ljava_lang_String_IIIIIII;
		}

		static void n_AddSymbol_Ljava_lang_String_IIIIIII (IntPtr jnienv, IntPtr native__this, IntPtr native_data, int type, int level, int width, int height, int dotX, int dotY, int quietZone)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var data = JNIEnv.GetString (native_data, JniHandleOwnership.DoNotTransfer);
			__this.AddSymbol (data, type, level, width, height, dotX, dotY, quietZone);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addSymbol' and count(parameter)=8 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='int'] and parameter[8][@type='int']]"
		[Register ("addSymbol", "(Ljava/lang/String;IIIIIII)V", "GetAddSymbol_Ljava_lang_String_IIIIIIIHandler")]
		public virtual unsafe void AddSymbol (string? data, int type, int level, int width, int height, int dotX, int dotY, int quietZone)
		{
			const string __id = "addSymbol.(Ljava/lang/String;IIIIIII)V";
			IntPtr native_data = JNIEnv.NewString ((string?)data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [8];
				__args [0] = new JniArgumentValue (native_data);
				__args [1] = new JniArgumentValue (type);
				__args [2] = new JniArgumentValue (level);
				__args [3] = new JniArgumentValue (width);
				__args [4] = new JniArgumentValue (height);
				__args [5] = new JniArgumentValue (dotX);
				__args [6] = new JniArgumentValue (dotY);
				__args [7] = new JniArgumentValue (quietZone);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
			}
		}

		static Delegate? cb_addText_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetAddText_Ljava_lang_String_Handler ()
		{
			if (cb_addText_Ljava_lang_String_ == null)
				cb_addText_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_AddText_Ljava_lang_String_));
			return cb_addText_Ljava_lang_String_;
		}

		static void n_AddText_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_data)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var data = JNIEnv.GetString (native_data, JniHandleOwnership.DoNotTransfer);
			__this.AddText (data);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addText' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("addText", "(Ljava/lang/String;)V", "GetAddText_Ljava_lang_String_Handler")]
		public virtual unsafe void AddText (string? data)
		{
			const string __id = "addText.(Ljava/lang/String;)V";
			IntPtr native_data = JNIEnv.NewString ((string?)data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_data);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
			}
		}

		static Delegate? cb_addText_Ljava_lang_String_I;
#pragma warning disable 0169
		static Delegate GetAddText_Ljava_lang_String_IHandler ()
		{
			if (cb_addText_Ljava_lang_String_I == null)
				cb_addText_Ljava_lang_String_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_V (n_AddText_Ljava_lang_String_I));
			return cb_addText_Ljava_lang_String_I;
		}

		static void n_AddText_Ljava_lang_String_I (IntPtr jnienv, IntPtr native__this, IntPtr native_data, int lang)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var data = JNIEnv.GetString (native_data, JniHandleOwnership.DoNotTransfer);
			__this.AddText (data, lang);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addText' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int']]"
		[Register ("addText", "(Ljava/lang/String;I)V", "GetAddText_Ljava_lang_String_IHandler")]
		public virtual unsafe void AddText (string? data, int lang)
		{
			const string __id = "addText.(Ljava/lang/String;I)V";
			IntPtr native_data = JNIEnv.NewString ((string?)data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_data);
				__args [1] = new JniArgumentValue (lang);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
			}
		}

		static Delegate? cb_addText_Ljava_lang_String_II;
#pragma warning disable 0169
		static Delegate GetAddText_Ljava_lang_String_IIHandler ()
		{
			if (cb_addText_Ljava_lang_String_II == null)
				cb_addText_Ljava_lang_String_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLII_V (n_AddText_Ljava_lang_String_II));
			return cb_addText_Ljava_lang_String_II;
		}

		static void n_AddText_Ljava_lang_String_II (IntPtr jnienv, IntPtr native__this, IntPtr native_data, int x, int y)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var data = JNIEnv.GetString (native_data, JniHandleOwnership.DoNotTransfer);
			__this.AddText (data, x, y);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addText' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[Register ("addText", "(Ljava/lang/String;II)V", "GetAddText_Ljava_lang_String_IIHandler")]
		public virtual unsafe void AddText (string? data, int x, int y)
		{
			const string __id = "addText.(Ljava/lang/String;II)V";
			IntPtr native_data = JNIEnv.NewString ((string?)data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_data);
				__args [1] = new JniArgumentValue (x);
				__args [2] = new JniArgumentValue (y);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
			}
		}

		static Delegate? cb_addText_Ljava_lang_String_III;
#pragma warning disable 0169
		static Delegate GetAddText_Ljava_lang_String_IIIHandler ()
		{
			if (cb_addText_Ljava_lang_String_III == null)
				cb_addText_Ljava_lang_String_III = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLIII_V (n_AddText_Ljava_lang_String_III));
			return cb_addText_Ljava_lang_String_III;
		}

		static void n_AddText_Ljava_lang_String_III (IntPtr jnienv, IntPtr native__this, IntPtr native_data, int x, int y, int lang)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var data = JNIEnv.GetString (native_data, JniHandleOwnership.DoNotTransfer);
			__this.AddText (data, x, y, lang);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addText' and count(parameter)=4 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
		[Register ("addText", "(Ljava/lang/String;III)V", "GetAddText_Ljava_lang_String_IIIHandler")]
		public virtual unsafe void AddText (string? data, int x, int y, int lang)
		{
			const string __id = "addText.(Ljava/lang/String;III)V";
			IntPtr native_data = JNIEnv.NewString ((string?)data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (native_data);
				__args [1] = new JniArgumentValue (x);
				__args [2] = new JniArgumentValue (y);
				__args [3] = new JniArgumentValue (lang);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
			}
		}

		static Delegate? cb_addText_Ljava_lang_String_IIIIII;
#pragma warning disable 0169
		static Delegate GetAddText_Ljava_lang_String_IIIIIIHandler ()
		{
			if (cb_addText_Ljava_lang_String_IIIIII == null)
				cb_addText_Ljava_lang_String_IIIIII = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLIIIIII_V (n_AddText_Ljava_lang_String_IIIIII));
			return cb_addText_Ljava_lang_String_IIIIII;
		}

		static void n_AddText_Ljava_lang_String_IIIIII (IntPtr jnienv, IntPtr native__this, IntPtr native_data, int x, int y, int lang, int r, int g, int b)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var data = JNIEnv.GetString (native_data, JniHandleOwnership.DoNotTransfer);
			__this.AddText (data, x, y, lang, r, g, b);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='addText' and count(parameter)=7 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='int']]"
		[Register ("addText", "(Ljava/lang/String;IIIIII)V", "GetAddText_Ljava_lang_String_IIIIIIHandler")]
		public virtual unsafe void AddText (string? data, int x, int y, int lang, int r, int g, int b)
		{
			const string __id = "addText.(Ljava/lang/String;IIIIII)V";
			IntPtr native_data = JNIEnv.NewString ((string?)data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [7];
				__args [0] = new JniArgumentValue (native_data);
				__args [1] = new JniArgumentValue (x);
				__args [2] = new JniArgumentValue (y);
				__args [3] = new JniArgumentValue (lang);
				__args [4] = new JniArgumentValue (r);
				__args [5] = new JniArgumentValue (g);
				__args [6] = new JniArgumentValue (b);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
			}
		}

		static Delegate? cb_checkHandle;
#pragma warning disable 0169
		static Delegate GetCheckHandleHandler ()
		{
			if (cb_checkHandle == null)
				cb_checkHandle = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_CheckHandle));
			return cb_checkHandle;
		}

		static void n_CheckHandle (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.CheckHandle ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='checkHandle' and count(parameter)=0]"
		[Register ("checkHandle", "()V", "GetCheckHandleHandler")]
		protected virtual unsafe void CheckHandle ()
		{
			const string __id = "checkHandle.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_clearCommandBuffer;
#pragma warning disable 0169
		static Delegate GetClearCommandBufferHandler ()
		{
			if (cb_clearCommandBuffer == null)
				cb_clearCommandBuffer = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_ClearCommandBuffer));
			return cb_clearCommandBuffer;
		}

		static void n_ClearCommandBuffer (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.ClearCommandBuffer ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='clearCommandBuffer' and count(parameter)=0]"
		[Register ("clearCommandBuffer", "()V", "GetClearCommandBufferHandler")]
		public virtual unsafe void ClearCommandBuffer ()
		{
			const string __id = "clearCommandBuffer.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_connect_Ljava_lang_String_I;
#pragma warning disable 0169
		static Delegate GetConnect_Ljava_lang_String_IHandler ()
		{
			if (cb_connect_Ljava_lang_String_I == null)
				cb_connect_Ljava_lang_String_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_V (n_Connect_Ljava_lang_String_I));
			return cb_connect_Ljava_lang_String_I;
		}

		static void n_Connect_Ljava_lang_String_I (IntPtr jnienv, IntPtr native__this, IntPtr native_target, int timeout)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var target = JNIEnv.GetString (native_target, JniHandleOwnership.DoNotTransfer);
			__this.Connect (target, timeout);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='connect' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int']]"
		[Register ("connect", "(Ljava/lang/String;I)V", "GetConnect_Ljava_lang_String_IHandler")]
		public virtual unsafe void Connect (string? target, int timeout)
		{
			const string __id = "connect.(Ljava/lang/String;I)V";
			IntPtr native_target = JNIEnv.NewString ((string?)target);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_target);
				__args [1] = new JniArgumentValue (timeout);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_target);
			}
		}

		static Delegate? cb_disconnect;
#pragma warning disable 0169
		static Delegate GetDisconnectHandler ()
		{
			if (cb_disconnect == null)
				cb_disconnect = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Disconnect));
			return cb_disconnect;
		}

		static void n_Disconnect (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Disconnect ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='disconnect' and count(parameter)=0]"
		[Register ("disconnect", "()V", "GetDisconnectHandler")]
		public virtual unsafe void Disconnect ()
		{
			const string __id = "disconnect.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_initializeDisplayInstance_I;
#pragma warning disable 0169
		static Delegate GetInitializeDisplayInstance_IHandler ()
		{
			if (cb_initializeDisplayInstance_I == null)
				cb_initializeDisplayInstance_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_InitializeDisplayInstance_I));
			return cb_initializeDisplayInstance_I;
		}

		static void n_InitializeDisplayInstance_I (IntPtr jnienv, IntPtr native__this, int displaySeries)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.InitializeDisplayInstance (displaySeries);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='initializeDisplayInstance' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("initializeDisplayInstance", "(I)V", "GetInitializeDisplayInstance_IHandler")]
		protected virtual unsafe void InitializeDisplayInstance (int displaySeries)
		{
			const string __id = "initializeDisplayInstance.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (displaySeries);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2AddBackgroundColor_JJJJJ;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddBackgroundColor_JJJJJHandler ()
		{
			if (cb_nativeEpos2AddBackgroundColor_JJJJJ == null)
				cb_nativeEpos2AddBackgroundColor_JJJJJ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJJJJJ_I (n_NativeEpos2AddBackgroundColor_JJJJJ));
			return cb_nativeEpos2AddBackgroundColor_JJJJJ;
		}

		static int n_NativeEpos2AddBackgroundColor_JJJJJ (IntPtr jnienv, IntPtr native__this, long p0, long p1, long p2, long p3, long p4)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeEpos2AddBackgroundColor (p0, p1, p2, p3, p4);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddBackgroundColor' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='long'] and parameter[5][@type='long']]"
		[Register ("nativeEpos2AddBackgroundColor", "(JJJJJ)I", "GetNativeEpos2AddBackgroundColor_JJJJJHandler")]
		protected virtual unsafe int NativeEpos2AddBackgroundColor (long p0, long p1, long p2, long p3, long p4)
		{
			const string __id = "nativeEpos2AddBackgroundColor.(JJJJJ)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2AddClearCurrentTextArea_J;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddClearCurrentTextArea_JHandler ()
		{
			if (cb_nativeEpos2AddClearCurrentTextArea_J == null)
				cb_nativeEpos2AddClearCurrentTextArea_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_I (n_NativeEpos2AddClearCurrentTextArea_J));
			return cb_nativeEpos2AddClearCurrentTextArea_J;
		}

		static int n_NativeEpos2AddClearCurrentTextArea_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeEpos2AddClearCurrentTextArea (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddClearCurrentTextArea' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeEpos2AddClearCurrentTextArea", "(J)I", "GetNativeEpos2AddClearCurrentTextArea_JHandler")]
		protected virtual unsafe int NativeEpos2AddClearCurrentTextArea (long p0)
		{
			const string __id = "nativeEpos2AddClearCurrentTextArea.(J)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2AddClearCurrentWindow_J;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddClearCurrentWindow_JHandler ()
		{
			if (cb_nativeEpos2AddClearCurrentWindow_J == null)
				cb_nativeEpos2AddClearCurrentWindow_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_I (n_NativeEpos2AddClearCurrentWindow_J));
			return cb_nativeEpos2AddClearCurrentWindow_J;
		}

		static int n_NativeEpos2AddClearCurrentWindow_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeEpos2AddClearCurrentWindow (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddClearCurrentWindow' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeEpos2AddClearCurrentWindow", "(J)I", "GetNativeEpos2AddClearCurrentWindow_JHandler")]
		protected virtual unsafe int NativeEpos2AddClearCurrentWindow (long p0)
		{
			const string __id = "nativeEpos2AddClearCurrentWindow.(J)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2AddCommand_JarrayB;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddCommand_JarrayBHandler ()
		{
			if (cb_nativeEpos2AddCommand_JarrayB == null)
				cb_nativeEpos2AddCommand_JarrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJL_I (n_NativeEpos2AddCommand_JarrayB));
			return cb_nativeEpos2AddCommand_JarrayB;
		}

		static int n_NativeEpos2AddCommand_JarrayB (IntPtr jnienv, IntPtr native__this, long p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p1 = (byte[]?) JNIEnv.GetArray (native_p1, JniHandleOwnership.DoNotTransfer, typeof (byte));
			int __ret = __this.NativeEpos2AddCommand (p0, p1);
			if (p1 != null)
				JNIEnv.CopyArray (p1, native_p1);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddCommand' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='byte[]']]"
		[Register ("nativeEpos2AddCommand", "(J[B)I", "GetNativeEpos2AddCommand_JarrayBHandler")]
		protected virtual unsafe int NativeEpos2AddCommand (long p0, byte[]? p1)
		{
			const string __id = "nativeEpos2AddCommand.(J[B)I";
			IntPtr native_p1 = JNIEnv.NewArray (p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (native_p1);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				if (p1 != null) {
					JNIEnv.CopyArray (native_p1, p1);
					JNIEnv.DeleteLocalRef (native_p1);
				}
				global::System.GC.KeepAlive (p1);
			}
		}

		static Delegate? cb_nativeEpos2AddCreateScreen_JI;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddCreateScreen_JIHandler ()
		{
			if (cb_nativeEpos2AddCreateScreen_JI == null)
				cb_nativeEpos2AddCreateScreen_JI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJI_I (n_NativeEpos2AddCreateScreen_JI));
			return cb_nativeEpos2AddCreateScreen_JI;
		}

		static int n_NativeEpos2AddCreateScreen_JI (IntPtr jnienv, IntPtr native__this, long p0, int p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeEpos2AddCreateScreen (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddCreateScreen' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='int']]"
		[Register ("nativeEpos2AddCreateScreen", "(JI)I", "GetNativeEpos2AddCreateScreen_JIHandler")]
		protected virtual unsafe int NativeEpos2AddCreateScreen (long p0, int p1)
		{
			const string __id = "nativeEpos2AddCreateScreen.(JI)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2AddCreateScreenCustom_JIJJ;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddCreateScreenCustom_JIJJHandler ()
		{
			if (cb_nativeEpos2AddCreateScreenCustom_JIJJ == null)
				cb_nativeEpos2AddCreateScreenCustom_JIJJ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJIJJ_I (n_NativeEpos2AddCreateScreenCustom_JIJJ));
			return cb_nativeEpos2AddCreateScreenCustom_JIJJ;
		}

		static int n_NativeEpos2AddCreateScreenCustom_JIJJ (IntPtr jnienv, IntPtr native__this, long p0, int p1, long p2, long p3)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeEpos2AddCreateScreenCustom (p0, p1, p2, p3);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddCreateScreenCustom' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='int'] and parameter[3][@type='long'] and parameter[4][@type='long']]"
		[Register ("nativeEpos2AddCreateScreenCustom", "(JIJJ)I", "GetNativeEpos2AddCreateScreenCustom_JIJJHandler")]
		protected virtual unsafe int NativeEpos2AddCreateScreenCustom (long p0, int p1, long p2, long p3)
		{
			const string __id = "nativeEpos2AddCreateScreenCustom.(JIJJ)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2AddCreateTextArea_JJJJJJI;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddCreateTextArea_JJJJJJIHandler ()
		{
			if (cb_nativeEpos2AddCreateTextArea_JJJJJJI == null)
				cb_nativeEpos2AddCreateTextArea_JJJJJJI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJJJJJJI_I (n_NativeEpos2AddCreateTextArea_JJJJJJI));
			return cb_nativeEpos2AddCreateTextArea_JJJJJJI;
		}

		static int n_NativeEpos2AddCreateTextArea_JJJJJJI (IntPtr jnienv, IntPtr native__this, long p0, long p1, long p2, long p3, long p4, long p5, int p6)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeEpos2AddCreateTextArea (p0, p1, p2, p3, p4, p5, p6);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddCreateTextArea' and count(parameter)=7 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='long'] and parameter[5][@type='long'] and parameter[6][@type='long'] and parameter[7][@type='int']]"
		[Register ("nativeEpos2AddCreateTextArea", "(JJJJJJI)I", "GetNativeEpos2AddCreateTextArea_JJJJJJIHandler")]
		protected virtual unsafe int NativeEpos2AddCreateTextArea (long p0, long p1, long p2, long p3, long p4, long p5, int p6)
		{
			const string __id = "nativeEpos2AddCreateTextArea.(JJJJJJI)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [7];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue (p5);
				__args [6] = new JniArgumentValue (p6);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2AddCreateWindow_JJJJJJI;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddCreateWindow_JJJJJJIHandler ()
		{
			if (cb_nativeEpos2AddCreateWindow_JJJJJJI == null)
				cb_nativeEpos2AddCreateWindow_JJJJJJI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJJJJJJI_I (n_NativeEpos2AddCreateWindow_JJJJJJI));
			return cb_nativeEpos2AddCreateWindow_JJJJJJI;
		}

		static int n_NativeEpos2AddCreateWindow_JJJJJJI (IntPtr jnienv, IntPtr native__this, long p0, long p1, long p2, long p3, long p4, long p5, int p6)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeEpos2AddCreateWindow (p0, p1, p2, p3, p4, p5, p6);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddCreateWindow' and count(parameter)=7 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='long'] and parameter[5][@type='long'] and parameter[6][@type='long'] and parameter[7][@type='int']]"
		[Register ("nativeEpos2AddCreateWindow", "(JJJJJJI)I", "GetNativeEpos2AddCreateWindow_JJJJJJIHandler")]
		protected virtual unsafe int NativeEpos2AddCreateWindow (long p0, long p1, long p2, long p3, long p4, long p5, int p6)
		{
			const string __id = "nativeEpos2AddCreateWindow.(JJJJJJI)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [7];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue (p5);
				__args [6] = new JniArgumentValue (p6);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2AddDestroyTextArea_JJ;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddDestroyTextArea_JJHandler ()
		{
			if (cb_nativeEpos2AddDestroyTextArea_JJ == null)
				cb_nativeEpos2AddDestroyTextArea_JJ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJJ_I (n_NativeEpos2AddDestroyTextArea_JJ));
			return cb_nativeEpos2AddDestroyTextArea_JJ;
		}

		static int n_NativeEpos2AddDestroyTextArea_JJ (IntPtr jnienv, IntPtr native__this, long p0, long p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeEpos2AddDestroyTextArea (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddDestroyTextArea' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='long']]"
		[Register ("nativeEpos2AddDestroyTextArea", "(JJ)I", "GetNativeEpos2AddDestroyTextArea_JJHandler")]
		protected virtual unsafe int NativeEpos2AddDestroyTextArea (long p0, long p1)
		{
			const string __id = "nativeEpos2AddDestroyTextArea.(JJ)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2AddDestroyWindow_JJ;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddDestroyWindow_JJHandler ()
		{
			if (cb_nativeEpos2AddDestroyWindow_JJ == null)
				cb_nativeEpos2AddDestroyWindow_JJ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJJ_I (n_NativeEpos2AddDestroyWindow_JJ));
			return cb_nativeEpos2AddDestroyWindow_JJ;
		}

		static int n_NativeEpos2AddDestroyWindow_JJ (IntPtr jnienv, IntPtr native__this, long p0, long p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeEpos2AddDestroyWindow (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddDestroyWindow' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='long']]"
		[Register ("nativeEpos2AddDestroyWindow", "(JJ)I", "GetNativeEpos2AddDestroyWindow_JJHandler")]
		protected virtual unsafe int NativeEpos2AddDestroyWindow (long p0, long p1)
		{
			const string __id = "nativeEpos2AddDestroyWindow.(JJ)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2AddDspClearImage_J;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddDspClearImage_JHandler ()
		{
			if (cb_nativeEpos2AddDspClearImage_J == null)
				cb_nativeEpos2AddDspClearImage_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_I (n_NativeEpos2AddDspClearImage_J));
			return cb_nativeEpos2AddDspClearImage_J;
		}

		static int n_NativeEpos2AddDspClearImage_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeEpos2AddDspClearImage (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddDspClearImage' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeEpos2AddDspClearImage", "(J)I", "GetNativeEpos2AddDspClearImage_JHandler")]
		protected virtual unsafe int NativeEpos2AddDspClearImage (long p0)
		{
			const string __id = "nativeEpos2AddDspClearImage.(J)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2AddDspClearSymbol_J;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddDspClearSymbol_JHandler ()
		{
			if (cb_nativeEpos2AddDspClearSymbol_J == null)
				cb_nativeEpos2AddDspClearSymbol_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_I (n_NativeEpos2AddDspClearSymbol_J));
			return cb_nativeEpos2AddDspClearSymbol_J;
		}

		static int n_NativeEpos2AddDspClearSymbol_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeEpos2AddDspClearSymbol (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddDspClearSymbol' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeEpos2AddDspClearSymbol", "(J)I", "GetNativeEpos2AddDspClearSymbol_JHandler")]
		protected virtual unsafe int NativeEpos2AddDspClearSymbol (long p0)
		{
			const string __id = "nativeEpos2AddDspClearSymbol.(J)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2AddDspDownloadImage_JJJJJJJ;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddDspDownloadImage_JJJJJJJHandler ()
		{
			if (cb_nativeEpos2AddDspDownloadImage_JJJJJJJ == null)
				cb_nativeEpos2AddDspDownloadImage_JJJJJJJ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJJJJJJJ_I (n_NativeEpos2AddDspDownloadImage_JJJJJJJ));
			return cb_nativeEpos2AddDspDownloadImage_JJJJJJJ;
		}

		static int n_NativeEpos2AddDspDownloadImage_JJJJJJJ (IntPtr jnienv, IntPtr native__this, long p0, long p1, long p2, long p3, long p4, long p5, long p6)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeEpos2AddDspDownloadImage (p0, p1, p2, p3, p4, p5, p6);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddDspDownloadImage' and count(parameter)=7 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='long'] and parameter[5][@type='long'] and parameter[6][@type='long'] and parameter[7][@type='long']]"
		[Register ("nativeEpos2AddDspDownloadImage", "(JJJJJJJ)I", "GetNativeEpos2AddDspDownloadImage_JJJJJJJHandler")]
		protected virtual unsafe int NativeEpos2AddDspDownloadImage (long p0, long p1, long p2, long p3, long p4, long p5, long p6)
		{
			const string __id = "nativeEpos2AddDspDownloadImage.(JJJJJJJ)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [7];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue (p5);
				__args [6] = new JniArgumentValue (p6);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2AddDspNVImage_JJJJJJJ;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddDspNVImage_JJJJJJJHandler ()
		{
			if (cb_nativeEpos2AddDspNVImage_JJJJJJJ == null)
				cb_nativeEpos2AddDspNVImage_JJJJJJJ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJJJJJJJ_I (n_NativeEpos2AddDspNVImage_JJJJJJJ));
			return cb_nativeEpos2AddDspNVImage_JJJJJJJ;
		}

		static int n_NativeEpos2AddDspNVImage_JJJJJJJ (IntPtr jnienv, IntPtr native__this, long p0, long p1, long p2, long p3, long p4, long p5, long p6)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeEpos2AddDspNVImage (p0, p1, p2, p3, p4, p5, p6);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddDspNVImage' and count(parameter)=7 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='long'] and parameter[5][@type='long'] and parameter[6][@type='long'] and parameter[7][@type='long']]"
		[Register ("nativeEpos2AddDspNVImage", "(JJJJJJJ)I", "GetNativeEpos2AddDspNVImage_JJJJJJJHandler")]
		protected virtual unsafe int NativeEpos2AddDspNVImage (long p0, long p1, long p2, long p3, long p4, long p5, long p6)
		{
			const string __id = "nativeEpos2AddDspNVImage.(JJJJJJJ)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [7];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue (p5);
				__args [6] = new JniArgumentValue (p6);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2AddDspRegisterDownloadImage_JarrayBJJ;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddDspRegisterDownloadImage_JarrayBJJHandler ()
		{
			if (cb_nativeEpos2AddDspRegisterDownloadImage_JarrayBJJ == null)
				cb_nativeEpos2AddDspRegisterDownloadImage_JarrayBJJ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJLJJ_I (n_NativeEpos2AddDspRegisterDownloadImage_JarrayBJJ));
			return cb_nativeEpos2AddDspRegisterDownloadImage_JarrayBJJ;
		}

		static int n_NativeEpos2AddDspRegisterDownloadImage_JarrayBJJ (IntPtr jnienv, IntPtr native__this, long p0, IntPtr native_p1, long p2, long p3)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p1 = (byte[]?) JNIEnv.GetArray (native_p1, JniHandleOwnership.DoNotTransfer, typeof (byte));
			int __ret = __this.NativeEpos2AddDspRegisterDownloadImage (p0, p1, p2, p3);
			if (p1 != null)
				JNIEnv.CopyArray (p1, native_p1);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddDspRegisterDownloadImage' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='byte[]'] and parameter[3][@type='long'] and parameter[4][@type='long']]"
		[Register ("nativeEpos2AddDspRegisterDownloadImage", "(J[BJJ)I", "GetNativeEpos2AddDspRegisterDownloadImage_JarrayBJJHandler")]
		protected virtual unsafe int NativeEpos2AddDspRegisterDownloadImage (long p0, byte[]? p1, long p2, long p3)
		{
			const string __id = "nativeEpos2AddDspRegisterDownloadImage.(J[BJJ)I";
			IntPtr native_p1 = JNIEnv.NewArray (p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				if (p1 != null) {
					JNIEnv.CopyArray (native_p1, p1);
					JNIEnv.DeleteLocalRef (native_p1);
				}
				global::System.GC.KeepAlive (p1);
			}
		}

		static Delegate? cb_nativeEpos2AddDspSymbol_JLjava_lang_String_IIJJJJI;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddDspSymbol_JLjava_lang_String_IIJJJJIHandler ()
		{
			if (cb_nativeEpos2AddDspSymbol_JLjava_lang_String_IIJJJJI == null)
				cb_nativeEpos2AddDspSymbol_JLjava_lang_String_IIJJJJI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJLIIJJJJI_I (n_NativeEpos2AddDspSymbol_JLjava_lang_String_IIJJJJI));
			return cb_nativeEpos2AddDspSymbol_JLjava_lang_String_IIJJJJI;
		}

		static int n_NativeEpos2AddDspSymbol_JLjava_lang_String_IIJJJJI (IntPtr jnienv, IntPtr native__this, long p0, IntPtr native_p1, int p2, int p3, long p4, long p5, long p6, long p7, int p8)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.NativeEpos2AddDspSymbol (p0, p1, p2, p3, p4, p5, p6, p7, p8);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddDspSymbol' and count(parameter)=9 and parameter[1][@type='long'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='long'] and parameter[6][@type='long'] and parameter[7][@type='long'] and parameter[8][@type='long'] and parameter[9][@type='int']]"
		[Register ("nativeEpos2AddDspSymbol", "(JLjava/lang/String;IIJJJJI)I", "GetNativeEpos2AddDspSymbol_JLjava_lang_String_IIJJJJIHandler")]
		protected virtual unsafe int NativeEpos2AddDspSymbol (long p0, string? p1, int p2, int p3, long p4, long p5, long p6, long p7, int p8)
		{
			const string __id = "nativeEpos2AddDspSymbol.(JLjava/lang/String;IIJJJJI)I";
			IntPtr native_p1 = JNIEnv.NewString ((string?)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [9];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue (p5);
				__args [6] = new JniArgumentValue (p6);
				__args [7] = new JniArgumentValue (p7);
				__args [8] = new JniArgumentValue (p8);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
			}
		}

		static Delegate? cb_nativeEpos2AddInitialize_J;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddInitialize_JHandler ()
		{
			if (cb_nativeEpos2AddInitialize_J == null)
				cb_nativeEpos2AddInitialize_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_I (n_NativeEpos2AddInitialize_J));
			return cb_nativeEpos2AddInitialize_J;
		}

		static int n_NativeEpos2AddInitialize_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeEpos2AddInitialize (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddInitialize' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeEpos2AddInitialize", "(J)I", "GetNativeEpos2AddInitialize_JHandler")]
		protected virtual unsafe int NativeEpos2AddInitialize (long p0)
		{
			const string __id = "nativeEpos2AddInitialize.(J)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2AddMarqueeText_JLjava_lang_String_IJJJI;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddMarqueeText_JLjava_lang_String_IJJJIHandler ()
		{
			if (cb_nativeEpos2AddMarqueeText_JLjava_lang_String_IJJJI == null)
				cb_nativeEpos2AddMarqueeText_JLjava_lang_String_IJJJI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJLIJJJI_I (n_NativeEpos2AddMarqueeText_JLjava_lang_String_IJJJI));
			return cb_nativeEpos2AddMarqueeText_JLjava_lang_String_IJJJI;
		}

		static int n_NativeEpos2AddMarqueeText_JLjava_lang_String_IJJJI (IntPtr jnienv, IntPtr native__this, long p0, IntPtr native_p1, int p2, long p3, long p4, long p5, int p6)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.NativeEpos2AddMarqueeText (p0, p1, p2, p3, p4, p5, p6);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddMarqueeText' and count(parameter)=7 and parameter[1][@type='long'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='long'] and parameter[6][@type='long'] and parameter[7][@type='int']]"
		[Register ("nativeEpos2AddMarqueeText", "(JLjava/lang/String;IJJJI)I", "GetNativeEpos2AddMarqueeText_JLjava_lang_String_IJJJIHandler")]
		protected virtual unsafe int NativeEpos2AddMarqueeText (long p0, string? p1, int p2, long p3, long p4, long p5, int p6)
		{
			const string __id = "nativeEpos2AddMarqueeText.(JLjava/lang/String;IJJJI)I";
			IntPtr native_p1 = JNIEnv.NewString ((string?)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [7];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue (p5);
				__args [6] = new JniArgumentValue (p6);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
			}
		}

		static Delegate? cb_nativeEpos2AddMoveCursorPosition_JI;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddMoveCursorPosition_JIHandler ()
		{
			if (cb_nativeEpos2AddMoveCursorPosition_JI == null)
				cb_nativeEpos2AddMoveCursorPosition_JI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJI_I (n_NativeEpos2AddMoveCursorPosition_JI));
			return cb_nativeEpos2AddMoveCursorPosition_JI;
		}

		static int n_NativeEpos2AddMoveCursorPosition_JI (IntPtr jnienv, IntPtr native__this, long p0, int p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeEpos2AddMoveCursorPosition (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddMoveCursorPosition' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='int']]"
		[Register ("nativeEpos2AddMoveCursorPosition", "(JI)I", "GetNativeEpos2AddMoveCursorPosition_JIHandler")]
		protected virtual unsafe int NativeEpos2AddMoveCursorPosition (long p0, int p1)
		{
			const string __id = "nativeEpos2AddMoveCursorPosition.(JI)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2AddReverseText_JLjava_lang_String_;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddReverseText_JLjava_lang_String_Handler ()
		{
			if (cb_nativeEpos2AddReverseText_JLjava_lang_String_ == null)
				cb_nativeEpos2AddReverseText_JLjava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJL_I (n_NativeEpos2AddReverseText_JLjava_lang_String_));
			return cb_nativeEpos2AddReverseText_JLjava_lang_String_;
		}

		static int n_NativeEpos2AddReverseText_JLjava_lang_String_ (IntPtr jnienv, IntPtr native__this, long p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.NativeEpos2AddReverseText (p0, p1);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddReverseText' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='java.lang.String']]"
		[Register ("nativeEpos2AddReverseText", "(JLjava/lang/String;)I", "GetNativeEpos2AddReverseText_JLjava_lang_String_Handler")]
		protected virtual unsafe int NativeEpos2AddReverseText (long p0, string? p1)
		{
			const string __id = "nativeEpos2AddReverseText.(JLjava/lang/String;)I";
			IntPtr native_p1 = JNIEnv.NewString ((string?)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (native_p1);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
			}
		}

		static Delegate? cb_nativeEpos2AddReverseTextLang_JLjava_lang_String_I;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddReverseTextLang_JLjava_lang_String_IHandler ()
		{
			if (cb_nativeEpos2AddReverseTextLang_JLjava_lang_String_I == null)
				cb_nativeEpos2AddReverseTextLang_JLjava_lang_String_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJLI_I (n_NativeEpos2AddReverseTextLang_JLjava_lang_String_I));
			return cb_nativeEpos2AddReverseTextLang_JLjava_lang_String_I;
		}

		static int n_NativeEpos2AddReverseTextLang_JLjava_lang_String_I (IntPtr jnienv, IntPtr native__this, long p0, IntPtr native_p1, int p2)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.NativeEpos2AddReverseTextLang (p0, p1, p2);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddReverseTextLang' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='int']]"
		[Register ("nativeEpos2AddReverseTextLang", "(JLjava/lang/String;I)I", "GetNativeEpos2AddReverseTextLang_JLjava_lang_String_IHandler")]
		protected virtual unsafe int NativeEpos2AddReverseTextLang (long p0, string? p1, int p2)
		{
			const string __id = "nativeEpos2AddReverseTextLang.(JLjava/lang/String;I)I";
			IntPtr native_p1 = JNIEnv.NewString ((string?)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
			}
		}

		static Delegate? cb_nativeEpos2AddReverseTextPosition_JLjava_lang_String_JJ;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddReverseTextPosition_JLjava_lang_String_JJHandler ()
		{
			if (cb_nativeEpos2AddReverseTextPosition_JLjava_lang_String_JJ == null)
				cb_nativeEpos2AddReverseTextPosition_JLjava_lang_String_JJ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJLJJ_I (n_NativeEpos2AddReverseTextPosition_JLjava_lang_String_JJ));
			return cb_nativeEpos2AddReverseTextPosition_JLjava_lang_String_JJ;
		}

		static int n_NativeEpos2AddReverseTextPosition_JLjava_lang_String_JJ (IntPtr jnienv, IntPtr native__this, long p0, IntPtr native_p1, long p2, long p3)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.NativeEpos2AddReverseTextPosition (p0, p1, p2, p3);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddReverseTextPosition' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='long'] and parameter[4][@type='long']]"
		[Register ("nativeEpos2AddReverseTextPosition", "(JLjava/lang/String;JJ)I", "GetNativeEpos2AddReverseTextPosition_JLjava_lang_String_JJHandler")]
		protected virtual unsafe int NativeEpos2AddReverseTextPosition (long p0, string? p1, long p2, long p3)
		{
			const string __id = "nativeEpos2AddReverseTextPosition.(JLjava/lang/String;JJ)I";
			IntPtr native_p1 = JNIEnv.NewString ((string?)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
			}
		}

		static Delegate? cb_nativeEpos2AddReverseTextPositionLang_JLjava_lang_String_JJI;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddReverseTextPositionLang_JLjava_lang_String_JJIHandler ()
		{
			if (cb_nativeEpos2AddReverseTextPositionLang_JLjava_lang_String_JJI == null)
				cb_nativeEpos2AddReverseTextPositionLang_JLjava_lang_String_JJI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJLJJI_I (n_NativeEpos2AddReverseTextPositionLang_JLjava_lang_String_JJI));
			return cb_nativeEpos2AddReverseTextPositionLang_JLjava_lang_String_JJI;
		}

		static int n_NativeEpos2AddReverseTextPositionLang_JLjava_lang_String_JJI (IntPtr jnienv, IntPtr native__this, long p0, IntPtr native_p1, long p2, long p3, int p4)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.NativeEpos2AddReverseTextPositionLang (p0, p1, p2, p3, p4);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddReverseTextPositionLang' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='long'] and parameter[4][@type='long'] and parameter[5][@type='int']]"
		[Register ("nativeEpos2AddReverseTextPositionLang", "(JLjava/lang/String;JJI)I", "GetNativeEpos2AddReverseTextPositionLang_JLjava_lang_String_JJIHandler")]
		protected virtual unsafe int NativeEpos2AddReverseTextPositionLang (long p0, string? p1, long p2, long p3, int p4)
		{
			const string __id = "nativeEpos2AddReverseTextPositionLang.(JLjava/lang/String;JJI)I";
			IntPtr native_p1 = JNIEnv.NewString ((string?)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
			}
		}

		static Delegate? cb_nativeEpos2AddSetBlink_JJ;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddSetBlink_JJHandler ()
		{
			if (cb_nativeEpos2AddSetBlink_JJ == null)
				cb_nativeEpos2AddSetBlink_JJ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJJ_I (n_NativeEpos2AddSetBlink_JJ));
			return cb_nativeEpos2AddSetBlink_JJ;
		}

		static int n_NativeEpos2AddSetBlink_JJ (IntPtr jnienv, IntPtr native__this, long p0, long p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeEpos2AddSetBlink (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddSetBlink' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='long']]"
		[Register ("nativeEpos2AddSetBlink", "(JJ)I", "GetNativeEpos2AddSetBlink_JJHandler")]
		protected virtual unsafe int NativeEpos2AddSetBlink (long p0, long p1)
		{
			const string __id = "nativeEpos2AddSetBlink.(JJ)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2AddSetBrightness_JI;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddSetBrightness_JIHandler ()
		{
			if (cb_nativeEpos2AddSetBrightness_JI == null)
				cb_nativeEpos2AddSetBrightness_JI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJI_I (n_NativeEpos2AddSetBrightness_JI));
			return cb_nativeEpos2AddSetBrightness_JI;
		}

		static int n_NativeEpos2AddSetBrightness_JI (IntPtr jnienv, IntPtr native__this, long p0, int p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeEpos2AddSetBrightness (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddSetBrightness' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='int']]"
		[Register ("nativeEpos2AddSetBrightness", "(JI)I", "GetNativeEpos2AddSetBrightness_JIHandler")]
		protected virtual unsafe int NativeEpos2AddSetBrightness (long p0, int p1)
		{
			const string __id = "nativeEpos2AddSetBrightness.(JI)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2AddSetCurrentTextArea_JJ;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddSetCurrentTextArea_JJHandler ()
		{
			if (cb_nativeEpos2AddSetCurrentTextArea_JJ == null)
				cb_nativeEpos2AddSetCurrentTextArea_JJ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJJ_I (n_NativeEpos2AddSetCurrentTextArea_JJ));
			return cb_nativeEpos2AddSetCurrentTextArea_JJ;
		}

		static int n_NativeEpos2AddSetCurrentTextArea_JJ (IntPtr jnienv, IntPtr native__this, long p0, long p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeEpos2AddSetCurrentTextArea (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddSetCurrentTextArea' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='long']]"
		[Register ("nativeEpos2AddSetCurrentTextArea", "(JJ)I", "GetNativeEpos2AddSetCurrentTextArea_JJHandler")]
		protected virtual unsafe int NativeEpos2AddSetCurrentTextArea (long p0, long p1)
		{
			const string __id = "nativeEpos2AddSetCurrentTextArea.(JJ)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2AddSetCurrentWindow_JJ;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddSetCurrentWindow_JJHandler ()
		{
			if (cb_nativeEpos2AddSetCurrentWindow_JJ == null)
				cb_nativeEpos2AddSetCurrentWindow_JJ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJJ_I (n_NativeEpos2AddSetCurrentWindow_JJ));
			return cb_nativeEpos2AddSetCurrentWindow_JJ;
		}

		static int n_NativeEpos2AddSetCurrentWindow_JJ (IntPtr jnienv, IntPtr native__this, long p0, long p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeEpos2AddSetCurrentWindow (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddSetCurrentWindow' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='long']]"
		[Register ("nativeEpos2AddSetCurrentWindow", "(JJ)I", "GetNativeEpos2AddSetCurrentWindow_JJHandler")]
		protected virtual unsafe int NativeEpos2AddSetCurrentWindow (long p0, long p1)
		{
			const string __id = "nativeEpos2AddSetCurrentWindow.(JJ)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2AddSetCursorPosition_JJJ;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddSetCursorPosition_JJJHandler ()
		{
			if (cb_nativeEpos2AddSetCursorPosition_JJJ == null)
				cb_nativeEpos2AddSetCursorPosition_JJJ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJJJ_I (n_NativeEpos2AddSetCursorPosition_JJJ));
			return cb_nativeEpos2AddSetCursorPosition_JJJ;
		}

		static int n_NativeEpos2AddSetCursorPosition_JJJ (IntPtr jnienv, IntPtr native__this, long p0, long p1, long p2)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeEpos2AddSetCursorPosition (p0, p1, p2);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddSetCursorPosition' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long']]"
		[Register ("nativeEpos2AddSetCursorPosition", "(JJJ)I", "GetNativeEpos2AddSetCursorPosition_JJJHandler")]
		protected virtual unsafe int NativeEpos2AddSetCursorPosition (long p0, long p1, long p2)
		{
			const string __id = "nativeEpos2AddSetCursorPosition.(JJJ)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2AddSetCursorType_JI;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddSetCursorType_JIHandler ()
		{
			if (cb_nativeEpos2AddSetCursorType_JI == null)
				cb_nativeEpos2AddSetCursorType_JI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJI_I (n_NativeEpos2AddSetCursorType_JI));
			return cb_nativeEpos2AddSetCursorType_JI;
		}

		static int n_NativeEpos2AddSetCursorType_JI (IntPtr jnienv, IntPtr native__this, long p0, int p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeEpos2AddSetCursorType (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddSetCursorType' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='int']]"
		[Register ("nativeEpos2AddSetCursorType", "(JI)I", "GetNativeEpos2AddSetCursorType_JIHandler")]
		protected virtual unsafe int NativeEpos2AddSetCursorType (long p0, int p1)
		{
			const string __id = "nativeEpos2AddSetCursorType.(JI)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2AddShowClock_J;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddShowClock_JHandler ()
		{
			if (cb_nativeEpos2AddShowClock_J == null)
				cb_nativeEpos2AddShowClock_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_I (n_NativeEpos2AddShowClock_J));
			return cb_nativeEpos2AddShowClock_J;
		}

		static int n_NativeEpos2AddShowClock_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeEpos2AddShowClock (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddShowClock' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeEpos2AddShowClock", "(J)I", "GetNativeEpos2AddShowClock_JHandler")]
		protected virtual unsafe int NativeEpos2AddShowClock (long p0)
		{
			const string __id = "nativeEpos2AddShowClock.(J)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2AddStartSlideShow_JJ;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddStartSlideShow_JJHandler ()
		{
			if (cb_nativeEpos2AddStartSlideShow_JJ == null)
				cb_nativeEpos2AddStartSlideShow_JJ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJJ_I (n_NativeEpos2AddStartSlideShow_JJ));
			return cb_nativeEpos2AddStartSlideShow_JJ;
		}

		static int n_NativeEpos2AddStartSlideShow_JJ (IntPtr jnienv, IntPtr native__this, long p0, long p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeEpos2AddStartSlideShow (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddStartSlideShow' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='long']]"
		[Register ("nativeEpos2AddStartSlideShow", "(JJ)I", "GetNativeEpos2AddStartSlideShow_JJHandler")]
		protected virtual unsafe int NativeEpos2AddStartSlideShow (long p0, long p1)
		{
			const string __id = "nativeEpos2AddStartSlideShow.(JJ)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2AddStopSlideShow_J;
#pragma warning disable 0169
		static Delegate GetNativeEpos2AddStopSlideShow_JHandler ()
		{
			if (cb_nativeEpos2AddStopSlideShow_J == null)
				cb_nativeEpos2AddStopSlideShow_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_I (n_NativeEpos2AddStopSlideShow_J));
			return cb_nativeEpos2AddStopSlideShow_J;
		}

		static int n_NativeEpos2AddStopSlideShow_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeEpos2AddStopSlideShow (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2AddStopSlideShow' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeEpos2AddStopSlideShow", "(J)I", "GetNativeEpos2AddStopSlideShow_JHandler")]
		protected virtual unsafe int NativeEpos2AddStopSlideShow (long p0)
		{
			const string __id = "nativeEpos2AddStopSlideShow.(J)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2ClearCommandBuffer_J;
#pragma warning disable 0169
		static Delegate GetNativeEpos2ClearCommandBuffer_JHandler ()
		{
			if (cb_nativeEpos2ClearCommandBuffer_J == null)
				cb_nativeEpos2ClearCommandBuffer_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_I (n_NativeEpos2ClearCommandBuffer_J));
			return cb_nativeEpos2ClearCommandBuffer_J;
		}

		static int n_NativeEpos2ClearCommandBuffer_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeEpos2ClearCommandBuffer (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2ClearCommandBuffer' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeEpos2ClearCommandBuffer", "(J)I", "GetNativeEpos2ClearCommandBuffer_JHandler")]
		protected virtual unsafe int NativeEpos2ClearCommandBuffer (long p0)
		{
			const string __id = "nativeEpos2ClearCommandBuffer.(J)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2DspAddText_JLjava_lang_String_JJIJJJ;
#pragma warning disable 0169
		static Delegate GetNativeEpos2DspAddText_JLjava_lang_String_JJIJJJHandler ()
		{
			if (cb_nativeEpos2DspAddText_JLjava_lang_String_JJIJJJ == null)
				cb_nativeEpos2DspAddText_JLjava_lang_String_JJIJJJ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJLJJIJJJ_I (n_NativeEpos2DspAddText_JLjava_lang_String_JJIJJJ));
			return cb_nativeEpos2DspAddText_JLjava_lang_String_JJIJJJ;
		}

		static int n_NativeEpos2DspAddText_JLjava_lang_String_JJIJJJ (IntPtr jnienv, IntPtr native__this, long p0, IntPtr native_p1, long p2, long p3, int p4, long p5, long p6, long p7)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.NativeEpos2DspAddText (p0, p1, p2, p3, p4, p5, p6, p7);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2DspAddText' and count(parameter)=8 and parameter[1][@type='long'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='long'] and parameter[4][@type='long'] and parameter[5][@type='int'] and parameter[6][@type='long'] and parameter[7][@type='long'] and parameter[8][@type='long']]"
		[Register ("nativeEpos2DspAddText", "(JLjava/lang/String;JJIJJJ)I", "GetNativeEpos2DspAddText_JLjava_lang_String_JJIJJJHandler")]
		protected virtual unsafe int NativeEpos2DspAddText (long p0, string? p1, long p2, long p3, int p4, long p5, long p6, long p7)
		{
			const string __id = "nativeEpos2DspAddText.(JLjava/lang/String;JJIJJJ)I";
			IntPtr native_p1 = JNIEnv.NewString ((string?)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [8];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue (p5);
				__args [6] = new JniArgumentValue (p6);
				__args [7] = new JniArgumentValue (p7);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
			}
		}

		static Delegate? cb_nativeEpos2GetAdmin_J;
#pragma warning disable 0169
		static Delegate GetNativeEpos2GetAdmin_JHandler ()
		{
			if (cb_nativeEpos2GetAdmin_J == null)
				cb_nativeEpos2GetAdmin_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_L (n_NativeEpos2GetAdmin_J));
			return cb_nativeEpos2GetAdmin_J;
		}

		static IntPtr n_NativeEpos2GetAdmin_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.NativeEpos2GetAdmin (p0));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2GetAdmin' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeEpos2GetAdmin", "(J)Ljava/lang/String;", "GetNativeEpos2GetAdmin_JHandler")]
		protected virtual unsafe string? NativeEpos2GetAdmin (long p0)
		{
			const string __id = "nativeEpos2GetAdmin.(J)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2GetLocation_J;
#pragma warning disable 0169
		static Delegate GetNativeEpos2GetLocation_JHandler ()
		{
			if (cb_nativeEpos2GetLocation_J == null)
				cb_nativeEpos2GetLocation_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_L (n_NativeEpos2GetLocation_J));
			return cb_nativeEpos2GetLocation_J;
		}

		static IntPtr n_NativeEpos2GetLocation_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.NativeEpos2GetLocation (p0));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2GetLocation' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeEpos2GetLocation", "(J)Ljava/lang/String;", "GetNativeEpos2GetLocation_JHandler")]
		protected virtual unsafe string? NativeEpos2GetLocation (long p0)
		{
			const string __id = "nativeEpos2GetLocation.(J)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2GetStatus_J;
#pragma warning disable 0169
		static Delegate GetNativeEpos2GetStatus_JHandler ()
		{
			if (cb_nativeEpos2GetStatus_J == null)
				cb_nativeEpos2GetStatus_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_L (n_NativeEpos2GetStatus_J));
			return cb_nativeEpos2GetStatus_J;
		}

		static IntPtr n_NativeEpos2GetStatus_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.NativeEpos2GetStatus (p0));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2GetStatus' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeEpos2GetStatus", "(J)Lcom/epson/epos2/linedisplay/DisplayStatusInfo;", "GetNativeEpos2GetStatus_JHandler")]
		protected virtual unsafe global::Com.Epson.Epos2.Linedisplay.DisplayStatusInfo? NativeEpos2GetStatus (long p0)
		{
			const string __id = "nativeEpos2GetStatus.(J)Lcom/epson/epos2/linedisplay/DisplayStatusInfo;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.DisplayStatusInfo> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate? cb_nativeEpos2SendData_J;
#pragma warning disable 0169
		static Delegate GetNativeEpos2SendData_JHandler ()
		{
			if (cb_nativeEpos2SendData_J == null)
				cb_nativeEpos2SendData_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_I (n_NativeEpos2SendData_J));
			return cb_nativeEpos2SendData_J;
		}

		static int n_NativeEpos2SendData_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeEpos2SendData (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='nativeEpos2SendData' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeEpos2SendData", "(J)I", "GetNativeEpos2SendData_JHandler")]
		protected virtual unsafe int NativeEpos2SendData (long p0)
		{
			const string __id = "nativeEpos2SendData.(J)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_sendData;
#pragma warning disable 0169
		static Delegate GetSendDataHandler ()
		{
			if (cb_sendData == null)
				cb_sendData = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_SendData));
			return cb_sendData;
		}

		static void n_SendData (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.SendData ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='sendData' and count(parameter)=0]"
		[Register ("sendData", "()V", "GetSendDataHandler")]
		public virtual unsafe void SendData ()
		{
			const string __id = "sendData.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_setConnectionEventListener_Lcom_epson_epos2_ConnectionListener_;
#pragma warning disable 0169
		static Delegate GetSetConnectionEventListener_Lcom_epson_epos2_ConnectionListener_Handler ()
		{
			if (cb_setConnectionEventListener_Lcom_epson_epos2_ConnectionListener_ == null)
				cb_setConnectionEventListener_Lcom_epson_epos2_ConnectionListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetConnectionEventListener_Lcom_epson_epos2_ConnectionListener_));
			return cb_setConnectionEventListener_Lcom_epson_epos2_ConnectionListener_;
		}

		static void n_SetConnectionEventListener_Lcom_epson_epos2_ConnectionListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_listener)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var listener = (global::Com.Epson.Epos2.IConnectionListener?)global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.IConnectionListener> (native_listener, JniHandleOwnership.DoNotTransfer);
			__this.SetConnectionEventListener (listener);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='setConnectionEventListener' and count(parameter)=1 and parameter[1][@type='com.epson.epos2.ConnectionListener']]"
		[Register ("setConnectionEventListener", "(Lcom/epson/epos2/ConnectionListener;)V", "GetSetConnectionEventListener_Lcom_epson_epos2_ConnectionListener_Handler")]
		public virtual unsafe void SetConnectionEventListener (global::Com.Epson.Epos2.IConnectionListener? listener)
		{
			const string __id = "setConnectionEventListener.(Lcom/epson/epos2/ConnectionListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((listener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) listener).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (listener);
			}
		}

		static Delegate? cb_setReceiveEventListener_Lcom_epson_epos2_linedisplay_ReceiveListener_;
#pragma warning disable 0169
		static Delegate GetSetReceiveEventListener_Lcom_epson_epos2_linedisplay_ReceiveListener_Handler ()
		{
			if (cb_setReceiveEventListener_Lcom_epson_epos2_linedisplay_ReceiveListener_ == null)
				cb_setReceiveEventListener_Lcom_epson_epos2_linedisplay_ReceiveListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetReceiveEventListener_Lcom_epson_epos2_linedisplay_ReceiveListener_));
			return cb_setReceiveEventListener_Lcom_epson_epos2_linedisplay_ReceiveListener_;
		}

		static void n_SetReceiveEventListener_Lcom_epson_epos2_linedisplay_ReceiveListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_target)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.LineDisplay> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var target = (global::Com.Epson.Epos2.Linedisplay.IReceiveListener?)global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Linedisplay.IReceiveListener> (native_target, JniHandleOwnership.DoNotTransfer);
			__this.SetReceiveEventListener (target);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.linedisplay']/class[@name='LineDisplay']/method[@name='setReceiveEventListener' and count(parameter)=1 and parameter[1][@type='com.epson.epos2.linedisplay.ReceiveListener']]"
		[Register ("setReceiveEventListener", "(Lcom/epson/epos2/linedisplay/ReceiveListener;)V", "GetSetReceiveEventListener_Lcom_epson_epos2_linedisplay_ReceiveListener_Handler")]
		public virtual unsafe void SetReceiveEventListener (global::Com.Epson.Epos2.Linedisplay.IReceiveListener? target)
		{
			const string __id = "setReceiveEventListener.(Lcom/epson/epos2/linedisplay/ReceiveListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((target == null) ? IntPtr.Zero : ((global::Java.Lang.Object) target).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (target);
			}
		}

	}
}
