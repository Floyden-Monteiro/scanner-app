//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Epson.Eposdevice {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']"
	[global::Android.Runtime.Register ("com/epson/eposdevice/Device", DoNotGenerateAcw=true)]
	public partial class Device : global::Java.Lang.Object {
		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/field[@name='DEV_TYPE_DISPLAY']"
		[Register ("DEV_TYPE_DISPLAY")]
		public const int DevTypeDisplay = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/field[@name='DEV_TYPE_KEYBOARD']"
		[Register ("DEV_TYPE_KEYBOARD")]
		public const int DevTypeKeyboard = (int) 2;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/field[@name='DEV_TYPE_PRINTER']"
		[Register ("DEV_TYPE_PRINTER")]
		public const int DevTypePrinter = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/field[@name='DEV_TYPE_SCANNER']"
		[Register ("DEV_TYPE_SCANNER")]
		public const int DevTypeScanner = (int) 3;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/field[@name='DEV_TYPE_SIMPLE_SERIAL']"
		[Register ("DEV_TYPE_SIMPLE_SERIAL")]
		public const int DevTypeSimpleSerial = (int) 4;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/field[@name='FALSE']"
		[Register ("FALSE")]
		public const int False = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/field[@name='PARAM_DEFAULT']"
		[Register ("PARAM_DEFAULT")]
		public const int ParamDefault = (int) -2;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/field[@name='PARAM_UNSPECIFIED']"
		[Register ("PARAM_UNSPECIFIED")]
		public const int ParamUnspecified = (int) -1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/field[@name='TRUE']"
		[Register ("TRUE")]
		public const int True = (int) 1;

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/epson/eposdevice/Device", typeof (Device));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected Device (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/constructor[@name='Device' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe Device () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/constructor[@name='Device' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register (".ctor", "(Landroid/content/Context;)V", "")]
		public unsafe Device (global::Android.Content.Context? context) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Landroid/content/Context;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (context);
			}
		}

		static Delegate? cb_getAdmin;
#pragma warning disable 0169
		static Delegate GetGetAdminHandler ()
		{
			if (cb_getAdmin == null)
				cb_getAdmin = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetAdmin));
			return cb_getAdmin;
		}

		static IntPtr n_GetAdmin (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.Admin);
		}
#pragma warning restore 0169

		public virtual unsafe string? Admin {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='getAdmin' and count(parameter)=0]"
			[Register ("getAdmin", "()Ljava/lang/String;", "GetGetAdminHandler")]
			get {
				const string __id = "getAdmin.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getCommBoxManager;
#pragma warning disable 0169
		static Delegate GetGetCommBoxManagerHandler ()
		{
			if (cb_getCommBoxManager == null)
				cb_getCommBoxManager = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetCommBoxManager));
			return cb_getCommBoxManager;
		}

		static IntPtr n_GetCommBoxManager (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.CommBoxManager);
		}
#pragma warning restore 0169

		public virtual unsafe global::Com.Epson.Eposdevice.Commbox.CommBoxManager? CommBoxManager {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='getCommBoxManager' and count(parameter)=0]"
			[Register ("getCommBoxManager", "()Lcom/epson/eposdevice/commbox/CommBoxManager;", "GetGetCommBoxManagerHandler")]
			get {
				const string __id = "getCommBoxManager.()Lcom/epson/eposdevice/commbox/CommBoxManager;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBoxManager> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_isConnected;
#pragma warning disable 0169
		static Delegate GetIsConnectedHandler ()
		{
			if (cb_isConnected == null)
				cb_isConnected = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsConnected));
			return cb_isConnected;
		}

		static bool n_IsConnected (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.IsConnected;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsConnected {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='isConnected' and count(parameter)=0]"
			[Register ("isConnected", "()Z", "GetIsConnectedHandler")]
			get {
				const string __id = "isConnected.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_isEmptyCallbacks;
#pragma warning disable 0169
		static Delegate GetIsEmptyCallbacksHandler ()
		{
			if (cb_isEmptyCallbacks == null)
				cb_isEmptyCallbacks = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsEmptyCallbacks));
			return cb_isEmptyCallbacks;
		}

		static bool n_IsEmptyCallbacks (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.IsEmptyCallbacks;
		}
#pragma warning restore 0169

		protected virtual unsafe bool IsEmptyCallbacks {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='isEmptyCallbacks' and count(parameter)=0]"
			[Register ("isEmptyCallbacks", "()Z", "GetIsEmptyCallbacksHandler")]
			get {
				const string __id = "isEmptyCallbacks.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getLocation;
#pragma warning disable 0169
		static Delegate GetGetLocationHandler ()
		{
			if (cb_getLocation == null)
				cb_getLocation = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetLocation));
			return cb_getLocation;
		}

		static IntPtr n_GetLocation (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.Location);
		}
#pragma warning restore 0169

		public virtual unsafe string? Location {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='getLocation' and count(parameter)=0]"
			[Register ("getLocation", "()Ljava/lang/String;", "GetGetLocationHandler")]
			get {
				const string __id = "getLocation.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_connect_Ljava_lang_String_Lcom_epson_eposdevice_ConnectListener_;
#pragma warning disable 0169
		static Delegate GetConnect_Ljava_lang_String_Lcom_epson_eposdevice_ConnectListener_Handler ()
		{
			if (cb_connect_Ljava_lang_String_Lcom_epson_eposdevice_ConnectListener_ == null)
				cb_connect_Ljava_lang_String_Lcom_epson_eposdevice_ConnectListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_Connect_Ljava_lang_String_Lcom_epson_eposdevice_ConnectListener_));
			return cb_connect_Ljava_lang_String_Lcom_epson_eposdevice_ConnectListener_;
		}

		static void n_Connect_Ljava_lang_String_Lcom_epson_eposdevice_ConnectListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_ipAddress, IntPtr native_target)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var ipAddress = JNIEnv.GetString (native_ipAddress, JniHandleOwnership.DoNotTransfer);
			var target = (global::Com.Epson.Eposdevice.IConnectListener?)global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.IConnectListener> (native_target, JniHandleOwnership.DoNotTransfer);
			__this.Connect (ipAddress, target);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='connect' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='com.epson.eposdevice.ConnectListener']]"
		[Register ("connect", "(Ljava/lang/String;Lcom/epson/eposdevice/ConnectListener;)V", "GetConnect_Ljava_lang_String_Lcom_epson_eposdevice_ConnectListener_Handler")]
		public virtual unsafe void Connect (string? ipAddress, global::Com.Epson.Eposdevice.IConnectListener? target)
		{
			const string __id = "connect.(Ljava/lang/String;Lcom/epson/eposdevice/ConnectListener;)V";
			IntPtr native_ipAddress = JNIEnv.NewString ((string?)ipAddress);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_ipAddress);
				__args [1] = new JniArgumentValue ((target == null) ? IntPtr.Zero : ((global::Java.Lang.Object) target).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_ipAddress);
				global::System.GC.KeepAlive (target);
			}
		}

		static Delegate? cb_createDevice_Ljava_lang_String_IIILcom_epson_eposdevice_CreateDeviceListener_;
#pragma warning disable 0169
		static Delegate GetCreateDevice_Ljava_lang_String_IIILcom_epson_eposdevice_CreateDeviceListener_Handler ()
		{
			if (cb_createDevice_Ljava_lang_String_IIILcom_epson_eposdevice_CreateDeviceListener_ == null)
				cb_createDevice_Ljava_lang_String_IIILcom_epson_eposdevice_CreateDeviceListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLIIIL_V (n_CreateDevice_Ljava_lang_String_IIILcom_epson_eposdevice_CreateDeviceListener_));
			return cb_createDevice_Ljava_lang_String_IIILcom_epson_eposdevice_CreateDeviceListener_;
		}

		static void n_CreateDevice_Ljava_lang_String_IIILcom_epson_eposdevice_CreateDeviceListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_deviceId, int deviceType, int crypto, int buffer, IntPtr native_target)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var deviceId = JNIEnv.GetString (native_deviceId, JniHandleOwnership.DoNotTransfer);
			var target = (global::Com.Epson.Eposdevice.ICreateDeviceListener?)global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.ICreateDeviceListener> (native_target, JniHandleOwnership.DoNotTransfer);
			__this.CreateDevice (deviceId, deviceType, crypto, buffer, target);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='createDevice' and count(parameter)=5 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='com.epson.eposdevice.CreateDeviceListener']]"
		[Register ("createDevice", "(Ljava/lang/String;IIILcom/epson/eposdevice/CreateDeviceListener;)V", "GetCreateDevice_Ljava_lang_String_IIILcom_epson_eposdevice_CreateDeviceListener_Handler")]
		public virtual unsafe void CreateDevice (string? deviceId, int deviceType, int crypto, int buffer, global::Com.Epson.Eposdevice.ICreateDeviceListener? target)
		{
			const string __id = "createDevice.(Ljava/lang/String;IIILcom/epson/eposdevice/CreateDeviceListener;)V";
			IntPtr native_deviceId = JNIEnv.NewString ((string?)deviceId);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (native_deviceId);
				__args [1] = new JniArgumentValue (deviceType);
				__args [2] = new JniArgumentValue (crypto);
				__args [3] = new JniArgumentValue (buffer);
				__args [4] = new JniArgumentValue ((target == null) ? IntPtr.Zero : ((global::Java.Lang.Object) target).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_deviceId);
				global::System.GC.KeepAlive (target);
			}
		}

		static Delegate? cb_deleteAllDeviceObject;
#pragma warning disable 0169
		static Delegate GetDeleteAllDeviceObjectHandler ()
		{
			if (cb_deleteAllDeviceObject == null)
				cb_deleteAllDeviceObject = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_DeleteAllDeviceObject));
			return cb_deleteAllDeviceObject;
		}

		static void n_DeleteAllDeviceObject (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.DeleteAllDeviceObject ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='deleteAllDeviceObject' and count(parameter)=0]"
		[Register ("deleteAllDeviceObject", "()V", "GetDeleteAllDeviceObjectHandler")]
		protected virtual unsafe void DeleteAllDeviceObject ()
		{
			const string __id = "deleteAllDeviceObject.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_deleteDevice_Ljava_lang_Object_Lcom_epson_eposdevice_DeleteDeviceListener_;
#pragma warning disable 0169
		static Delegate GetDeleteDevice_Ljava_lang_Object_Lcom_epson_eposdevice_DeleteDeviceListener_Handler ()
		{
			if (cb_deleteDevice_Ljava_lang_Object_Lcom_epson_eposdevice_DeleteDeviceListener_ == null)
				cb_deleteDevice_Ljava_lang_Object_Lcom_epson_eposdevice_DeleteDeviceListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_DeleteDevice_Ljava_lang_Object_Lcom_epson_eposdevice_DeleteDeviceListener_));
			return cb_deleteDevice_Ljava_lang_Object_Lcom_epson_eposdevice_DeleteDeviceListener_;
		}

		static void n_DeleteDevice_Ljava_lang_Object_Lcom_epson_eposdevice_DeleteDeviceListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_deviceObject, IntPtr native_target)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var deviceObject = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_deviceObject, JniHandleOwnership.DoNotTransfer);
			var target = (global::Com.Epson.Eposdevice.IDeleteDeviceListener?)global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.IDeleteDeviceListener> (native_target, JniHandleOwnership.DoNotTransfer);
			__this.DeleteDevice (deviceObject, target);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='deleteDevice' and count(parameter)=2 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='com.epson.eposdevice.DeleteDeviceListener']]"
		[Register ("deleteDevice", "(Ljava/lang/Object;Lcom/epson/eposdevice/DeleteDeviceListener;)V", "GetDeleteDevice_Ljava_lang_Object_Lcom_epson_eposdevice_DeleteDeviceListener_Handler")]
		public virtual unsafe void DeleteDevice (global::Java.Lang.Object? deviceObject, global::Com.Epson.Eposdevice.IDeleteDeviceListener? target)
		{
			const string __id = "deleteDevice.(Ljava/lang/Object;Lcom/epson/eposdevice/DeleteDeviceListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((deviceObject == null) ? IntPtr.Zero : ((global::Java.Lang.Object) deviceObject).Handle);
				__args [1] = new JniArgumentValue ((target == null) ? IntPtr.Zero : ((global::Java.Lang.Object) target).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (deviceObject);
				global::System.GC.KeepAlive (target);
			}
		}

		static Delegate? cb_disconnect;
#pragma warning disable 0169
		static Delegate GetDisconnectHandler ()
		{
			if (cb_disconnect == null)
				cb_disconnect = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Disconnect));
			return cb_disconnect;
		}

		static void n_Disconnect (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Disconnect ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='disconnect' and count(parameter)=0]"
		[Register ("disconnect", "()V", "GetDisconnectHandler")]
		public virtual unsafe void Disconnect ()
		{
			const string __id = "disconnect.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_initializeDeviceInstance;
#pragma warning disable 0169
		static Delegate GetInitializeDeviceInstanceHandler ()
		{
			if (cb_initializeDeviceInstance == null)
				cb_initializeDeviceInstance = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_InitializeDeviceInstance));
			return cb_initializeDeviceInstance;
		}

		static void n_InitializeDeviceInstance (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.InitializeDeviceInstance ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='initializeDeviceInstance' and count(parameter)=0]"
		[Register ("initializeDeviceInstance", "()V", "GetInitializeDeviceInstanceHandler")]
		protected virtual unsafe void InitializeDeviceInstance ()
		{
			const string __id = "initializeDeviceInstance.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_nativeOnDisconnect_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetNativeOnDisconnect_Ljava_lang_String_Handler ()
		{
			if (cb_nativeOnDisconnect_Ljava_lang_String_ == null)
				cb_nativeOnDisconnect_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_NativeOnDisconnect_Ljava_lang_String_));
			return cb_nativeOnDisconnect_Ljava_lang_String_;
		}

		static void n_NativeOnDisconnect_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_ipAddress)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var ipAddress = JNIEnv.GetString (native_ipAddress, JniHandleOwnership.DoNotTransfer);
			__this.NativeOnDisconnect (ipAddress);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='nativeOnDisconnect' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("nativeOnDisconnect", "(Ljava/lang/String;)V", "GetNativeOnDisconnect_Ljava_lang_String_Handler")]
		protected virtual unsafe void NativeOnDisconnect (string? ipAddress)
		{
			const string __id = "nativeOnDisconnect.(Ljava/lang/String;)V";
			IntPtr native_ipAddress = JNIEnv.NewString ((string?)ipAddress);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_ipAddress);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_ipAddress);
			}
		}

		static Delegate? cb_nativeOnReconnect_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetNativeOnReconnect_Ljava_lang_String_Handler ()
		{
			if (cb_nativeOnReconnect_Ljava_lang_String_ == null)
				cb_nativeOnReconnect_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_NativeOnReconnect_Ljava_lang_String_));
			return cb_nativeOnReconnect_Ljava_lang_String_;
		}

		static void n_NativeOnReconnect_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_ipAddress)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var ipAddress = JNIEnv.GetString (native_ipAddress, JniHandleOwnership.DoNotTransfer);
			__this.NativeOnReconnect (ipAddress);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='nativeOnReconnect' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("nativeOnReconnect", "(Ljava/lang/String;)V", "GetNativeOnReconnect_Ljava_lang_String_Handler")]
		protected virtual unsafe void NativeOnReconnect (string? ipAddress)
		{
			const string __id = "nativeOnReconnect.(Ljava/lang/String;)V";
			IntPtr native_ipAddress = JNIEnv.NewString ((string?)ipAddress);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_ipAddress);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_ipAddress);
			}
		}

		static Delegate? cb_nativeOnReconnecting_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetNativeOnReconnecting_Ljava_lang_String_Handler ()
		{
			if (cb_nativeOnReconnecting_Ljava_lang_String_ == null)
				cb_nativeOnReconnecting_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_NativeOnReconnecting_Ljava_lang_String_));
			return cb_nativeOnReconnecting_Ljava_lang_String_;
		}

		static void n_NativeOnReconnecting_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_ipAddress)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var ipAddress = JNIEnv.GetString (native_ipAddress, JniHandleOwnership.DoNotTransfer);
			__this.NativeOnReconnecting (ipAddress);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='nativeOnReconnecting' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("nativeOnReconnecting", "(Ljava/lang/String;)V", "GetNativeOnReconnecting_Ljava_lang_String_Handler")]
		protected virtual unsafe void NativeOnReconnecting (string? ipAddress)
		{
			const string __id = "nativeOnReconnecting.(Ljava/lang/String;)V";
			IntPtr native_ipAddress = JNIEnv.NewString ((string?)ipAddress);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_ipAddress);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_ipAddress);
			}
		}

		static Delegate? cb_outputException_Ljava_lang_String_Ljava_lang_Exception_;
#pragma warning disable 0169
		static Delegate GetOutputException_Ljava_lang_String_Ljava_lang_Exception_Handler ()
		{
			if (cb_outputException_Ljava_lang_String_Ljava_lang_Exception_ == null)
				cb_outputException_Ljava_lang_String_Ljava_lang_Exception_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_OutputException_Ljava_lang_String_Ljava_lang_Exception_));
			return cb_outputException_Ljava_lang_String_Ljava_lang_Exception_;
		}

		static void n_OutputException_Ljava_lang_String_Ljava_lang_Exception_ (IntPtr jnienv, IntPtr native__this, IntPtr native_methodName, IntPtr native_ex)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var methodName = JNIEnv.GetString (native_methodName, JniHandleOwnership.DoNotTransfer);
			var ex = global::Java.Lang.Object.GetObject<global::Java.Lang.Exception> (native_ex, JniHandleOwnership.DoNotTransfer);
			__this.OutputException (methodName, ex);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='outputException' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Exception']]"
		[Register ("outputException", "(Ljava/lang/String;Ljava/lang/Exception;)V", "GetOutputException_Ljava_lang_String_Ljava_lang_Exception_Handler")]
		protected virtual unsafe void OutputException (string? methodName, global::Java.Lang.Exception? ex)
		{
			const string __id = "outputException.(Ljava/lang/String;Ljava/lang/Exception;)V";
			IntPtr native_methodName = JNIEnv.NewString ((string?)methodName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_methodName);
				__args [1] = new JniArgumentValue ((ex == null) ? IntPtr.Zero : ((global::Java.Lang.Throwable) ex).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_methodName);
				global::System.GC.KeepAlive (ex);
			}
		}

		static Delegate? cb_outputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetOutputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler ()
		{
			if (cb_outputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_ == null)
				cb_outputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_OutputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_));
			return cb_outputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_;
		}

		static void n_OutputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_methodName, IntPtr native_param)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var methodName = JNIEnv.GetString (native_methodName, JniHandleOwnership.DoNotTransfer);
			var param = (global::Java.Lang.Object[]?) JNIEnv.GetArray (native_param, JniHandleOwnership.DoNotTransfer, typeof (global::Java.Lang.Object));
			__this.OutputLogCallFunction (methodName, param);
			if (param != null)
				JNIEnv.CopyArray (param, native_param);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='outputLogCallFunction' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("outputLogCallFunction", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		protected virtual unsafe void OutputLogCallFunction (string? methodName, params global::Java.Lang.Object[]? param)
		{
			const string __id = "outputLogCallFunction.(Ljava/lang/String;[Ljava/lang/Object;)V";
			IntPtr native_methodName = JNIEnv.NewString ((string?)methodName);
			IntPtr native_param = JNIEnv.NewArray (param);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_methodName);
				__args [1] = new JniArgumentValue (native_param);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_methodName);
				if (param != null) {
					JNIEnv.CopyArray (native_param, param);
					JNIEnv.DeleteLocalRef (native_param);
				}
				global::System.GC.KeepAlive (param);
			}
		}

		static Delegate? cb_outputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetOutputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_Handler ()
		{
			if (cb_outputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_ == null)
				cb_outputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_OutputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_));
			return cb_outputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_;
		}

		static void n_OutputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_methodName, IntPtr native_param)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var methodName = JNIEnv.GetString (native_methodName, JniHandleOwnership.DoNotTransfer);
			var param = (global::Java.Lang.Object[]?) JNIEnv.GetArray (native_param, JniHandleOwnership.DoNotTransfer, typeof (global::Java.Lang.Object));
			__this.OutputLogEvent (methodName, param);
			if (param != null)
				JNIEnv.CopyArray (param, native_param);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='outputLogEvent' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("outputLogEvent", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		protected virtual unsafe void OutputLogEvent (string? methodName, params global::Java.Lang.Object[]? param)
		{
			const string __id = "outputLogEvent.(Ljava/lang/String;[Ljava/lang/Object;)V";
			IntPtr native_methodName = JNIEnv.NewString ((string?)methodName);
			IntPtr native_param = JNIEnv.NewArray (param);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_methodName);
				__args [1] = new JniArgumentValue (native_param);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_methodName);
				if (param != null) {
					JNIEnv.CopyArray (native_param, param);
					JNIEnv.DeleteLocalRef (native_param);
				}
				global::System.GC.KeepAlive (param);
			}
		}

		static Delegate? cb_outputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetOutputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler ()
		{
			if (cb_outputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_ == null)
				cb_outputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_OutputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_));
			return cb_outputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_;
		}

		static void n_OutputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_methodName, IntPtr native_param)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var methodName = JNIEnv.GetString (native_methodName, JniHandleOwnership.DoNotTransfer);
			var param = (global::Java.Lang.Object[]?) JNIEnv.GetArray (native_param, JniHandleOwnership.DoNotTransfer, typeof (global::Java.Lang.Object));
			__this.OutputLogReturnFunction (methodName, param);
			if (param != null)
				JNIEnv.CopyArray (param, native_param);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='outputLogReturnFunction' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("outputLogReturnFunction", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		protected virtual unsafe void OutputLogReturnFunction (string? methodName, params global::Java.Lang.Object[]? param)
		{
			const string __id = "outputLogReturnFunction.(Ljava/lang/String;[Ljava/lang/Object;)V";
			IntPtr native_methodName = JNIEnv.NewString ((string?)methodName);
			IntPtr native_param = JNIEnv.NewArray (param);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_methodName);
				__args [1] = new JniArgumentValue (native_param);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_methodName);
				if (param != null) {
					JNIEnv.CopyArray (native_param, param);
					JNIEnv.DeleteLocalRef (native_param);
				}
				global::System.GC.KeepAlive (param);
			}
		}

		static Delegate? cb_setDisconnectEventCallback_Lcom_epson_eposdevice_DisconnectListener_;
#pragma warning disable 0169
		static Delegate GetSetDisconnectEventCallback_Lcom_epson_eposdevice_DisconnectListener_Handler ()
		{
			if (cb_setDisconnectEventCallback_Lcom_epson_eposdevice_DisconnectListener_ == null)
				cb_setDisconnectEventCallback_Lcom_epson_eposdevice_DisconnectListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetDisconnectEventCallback_Lcom_epson_eposdevice_DisconnectListener_));
			return cb_setDisconnectEventCallback_Lcom_epson_eposdevice_DisconnectListener_;
		}

		static void n_SetDisconnectEventCallback_Lcom_epson_eposdevice_DisconnectListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_disconnectListener)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var disconnectListener = (global::Com.Epson.Eposdevice.IDisconnectListener?)global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.IDisconnectListener> (native_disconnectListener, JniHandleOwnership.DoNotTransfer);
			__this.SetDisconnectEventCallback (disconnectListener);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='setDisconnectEventCallback' and count(parameter)=1 and parameter[1][@type='com.epson.eposdevice.DisconnectListener']]"
		[Register ("setDisconnectEventCallback", "(Lcom/epson/eposdevice/DisconnectListener;)V", "GetSetDisconnectEventCallback_Lcom_epson_eposdevice_DisconnectListener_Handler")]
		public virtual unsafe void SetDisconnectEventCallback (global::Com.Epson.Eposdevice.IDisconnectListener? disconnectListener)
		{
			const string __id = "setDisconnectEventCallback.(Lcom/epson/eposdevice/DisconnectListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((disconnectListener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) disconnectListener).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (disconnectListener);
			}
		}

		static Delegate? cb_setReconnectEventCallback_Lcom_epson_eposdevice_ReconnectListener_;
#pragma warning disable 0169
		static Delegate GetSetReconnectEventCallback_Lcom_epson_eposdevice_ReconnectListener_Handler ()
		{
			if (cb_setReconnectEventCallback_Lcom_epson_eposdevice_ReconnectListener_ == null)
				cb_setReconnectEventCallback_Lcom_epson_eposdevice_ReconnectListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetReconnectEventCallback_Lcom_epson_eposdevice_ReconnectListener_));
			return cb_setReconnectEventCallback_Lcom_epson_eposdevice_ReconnectListener_;
		}

		static void n_SetReconnectEventCallback_Lcom_epson_eposdevice_ReconnectListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_reconnectListener)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var reconnectListener = (global::Com.Epson.Eposdevice.IReconnectListener?)global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.IReconnectListener> (native_reconnectListener, JniHandleOwnership.DoNotTransfer);
			__this.SetReconnectEventCallback (reconnectListener);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='setReconnectEventCallback' and count(parameter)=1 and parameter[1][@type='com.epson.eposdevice.ReconnectListener']]"
		[Register ("setReconnectEventCallback", "(Lcom/epson/eposdevice/ReconnectListener;)V", "GetSetReconnectEventCallback_Lcom_epson_eposdevice_ReconnectListener_Handler")]
		public virtual unsafe void SetReconnectEventCallback (global::Com.Epson.Eposdevice.IReconnectListener? reconnectListener)
		{
			const string __id = "setReconnectEventCallback.(Lcom/epson/eposdevice/ReconnectListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((reconnectListener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) reconnectListener).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (reconnectListener);
			}
		}

		static Delegate? cb_setReconnectingEventCallback_Lcom_epson_eposdevice_ReconnectingListener_;
#pragma warning disable 0169
		static Delegate GetSetReconnectingEventCallback_Lcom_epson_eposdevice_ReconnectingListener_Handler ()
		{
			if (cb_setReconnectingEventCallback_Lcom_epson_eposdevice_ReconnectingListener_ == null)
				cb_setReconnectingEventCallback_Lcom_epson_eposdevice_ReconnectingListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetReconnectingEventCallback_Lcom_epson_eposdevice_ReconnectingListener_));
			return cb_setReconnectingEventCallback_Lcom_epson_eposdevice_ReconnectingListener_;
		}

		static void n_SetReconnectingEventCallback_Lcom_epson_eposdevice_ReconnectingListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_reconnectingListener)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var reconnectingListener = (global::Com.Epson.Eposdevice.IReconnectingListener?)global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.IReconnectingListener> (native_reconnectingListener, JniHandleOwnership.DoNotTransfer);
			__this.SetReconnectingEventCallback (reconnectingListener);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='setReconnectingEventCallback' and count(parameter)=1 and parameter[1][@type='com.epson.eposdevice.ReconnectingListener']]"
		[Register ("setReconnectingEventCallback", "(Lcom/epson/eposdevice/ReconnectingListener;)V", "GetSetReconnectingEventCallback_Lcom_epson_eposdevice_ReconnectingListener_Handler")]
		public virtual unsafe void SetReconnectingEventCallback (global::Com.Epson.Eposdevice.IReconnectingListener? reconnectingListener)
		{
			const string __id = "setReconnectingEventCallback.(Lcom/epson/eposdevice/ReconnectingListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((reconnectingListener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) reconnectingListener).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (reconnectingListener);
			}
		}

		static Delegate? cb_processOutputExceptionLog_IJLjava_lang_String_Ljava_lang_Exception_;
#pragma warning disable 0169
		static Delegate GetProcessOutputExceptionLog_IJLjava_lang_String_Ljava_lang_Exception_Handler ()
		{
			if (cb_processOutputExceptionLog_IJLjava_lang_String_Ljava_lang_Exception_ == null)
				cb_processOutputExceptionLog_IJLjava_lang_String_Ljava_lang_Exception_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIJLL_V (n_ProcessOutputExceptionLog_IJLjava_lang_String_Ljava_lang_Exception_));
			return cb_processOutputExceptionLog_IJLjava_lang_String_Ljava_lang_Exception_;
		}

		static void n_ProcessOutputExceptionLog_IJLjava_lang_String_Ljava_lang_Exception_ (IntPtr jnienv, IntPtr native__this, int type, long handle, IntPtr native_methodName, IntPtr native_ex)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var methodName = JNIEnv.GetString (native_methodName, JniHandleOwnership.DoNotTransfer);
			var ex = global::Java.Lang.Object.GetObject<global::Java.Lang.Exception> (native_ex, JniHandleOwnership.DoNotTransfer);
			__this.ProcessOutputExceptionLog (type, handle, methodName, ex);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='processOutputExceptionLog' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='long'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.Exception']]"
		[Register ("processOutputExceptionLog", "(IJLjava/lang/String;Ljava/lang/Exception;)V", "GetProcessOutputExceptionLog_IJLjava_lang_String_Ljava_lang_Exception_Handler")]
		protected virtual unsafe void ProcessOutputExceptionLog (int type, long handle, string? methodName, global::Java.Lang.Exception? ex)
		{
			const string __id = "processOutputExceptionLog.(IJLjava/lang/String;Ljava/lang/Exception;)V";
			IntPtr native_methodName = JNIEnv.NewString ((string?)methodName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (type);
				__args [1] = new JniArgumentValue (handle);
				__args [2] = new JniArgumentValue (native_methodName);
				__args [3] = new JniArgumentValue ((ex == null) ? IntPtr.Zero : ((global::Java.Lang.Throwable) ex).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_methodName);
				global::System.GC.KeepAlive (ex);
			}
		}

		static Delegate? cb_processOutputLogData_IJLjava_lang_String_arrayLjava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetProcessOutputLogData_IJLjava_lang_String_arrayLjava_lang_Object_Handler ()
		{
			if (cb_processOutputLogData_IJLjava_lang_String_arrayLjava_lang_Object_ == null)
				cb_processOutputLogData_IJLjava_lang_String_arrayLjava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIJLL_V (n_ProcessOutputLogData_IJLjava_lang_String_arrayLjava_lang_Object_));
			return cb_processOutputLogData_IJLjava_lang_String_arrayLjava_lang_Object_;
		}

		static void n_ProcessOutputLogData_IJLjava_lang_String_arrayLjava_lang_Object_ (IntPtr jnienv, IntPtr native__this, int type, long handle, IntPtr native_methoddName, IntPtr native__params)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var methoddName = JNIEnv.GetString (native_methoddName, JniHandleOwnership.DoNotTransfer);
			var @params = (global::Java.Lang.Object[]?) JNIEnv.GetArray (native__params, JniHandleOwnership.DoNotTransfer, typeof (global::Java.Lang.Object));
			__this.ProcessOutputLogData (type, handle, methoddName, @params);
			if (@params != null)
				JNIEnv.CopyArray (@params, native__params);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='processOutputLogData' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='long'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.Object[]']]"
		[Register ("processOutputLogData", "(IJLjava/lang/String;[Ljava/lang/Object;)V", "GetProcessOutputLogData_IJLjava_lang_String_arrayLjava_lang_Object_Handler")]
		protected virtual unsafe void ProcessOutputLogData (int type, long handle, string? methoddName, global::Java.Lang.Object[]? @params)
		{
			const string __id = "processOutputLogData.(IJLjava/lang/String;[Ljava/lang/Object;)V";
			IntPtr native_methoddName = JNIEnv.NewString ((string?)methoddName);
			IntPtr native__params = JNIEnv.NewArray (@params);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (type);
				__args [1] = new JniArgumentValue (handle);
				__args [2] = new JniArgumentValue (native_methoddName);
				__args [3] = new JniArgumentValue (native__params);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_methoddName);
				if (@params != null) {
					JNIEnv.CopyArray (native__params, @params);
					JNIEnv.DeleteLocalRef (native__params);
				}
				global::System.GC.KeepAlive (@params);
			}
		}

		static Delegate? cb_nativeCreateHandle_arrayJ;
#pragma warning disable 0169
		static Delegate GetNativeCreateHandle_arrayJHandler ()
		{
			if (cb_nativeCreateHandle_arrayJ == null)
				cb_nativeCreateHandle_arrayJ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_I (n_NativeCreateHandle_arrayJ));
			return cb_nativeCreateHandle_arrayJ;
		}

		static int n_NativeCreateHandle_arrayJ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p0 = (long[]?) JNIEnv.GetArray (native_p0, JniHandleOwnership.DoNotTransfer, typeof (long));
			int __ret = __this.NativeCreateHandle (p0);
			if (p0 != null)
				JNIEnv.CopyArray (p0, native_p0);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='nativeCreateHandle' and count(parameter)=1 and parameter[1][@type='long[]']]"
		[Register ("nativeCreateHandle", "([J)I", "GetNativeCreateHandle_arrayJHandler")]
		protected virtual unsafe int NativeCreateHandle (long[]? p0)
		{
			const string __id = "nativeCreateHandle.([J)I";
			IntPtr native_p0 = JNIEnv.NewArray (p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				if (p0 != null) {
					JNIEnv.CopyArray (native_p0, p0);
					JNIEnv.DeleteLocalRef (native_p0);
				}
				global::System.GC.KeepAlive (p0);
			}
		}

		static Delegate? cb_nativeDeleteHandle_J;
#pragma warning disable 0169
		static Delegate GetNativeDeleteHandle_JHandler ()
		{
			if (cb_nativeDeleteHandle_J == null)
				cb_nativeDeleteHandle_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_I (n_NativeDeleteHandle_J));
			return cb_nativeDeleteHandle_J;
		}

		static int n_NativeDeleteHandle_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeDeleteHandle (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='nativeDeleteHandle' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeDeleteHandle", "(J)I", "GetNativeDeleteHandle_JHandler")]
		protected virtual unsafe int NativeDeleteHandle (long p0)
		{
			const string __id = "nativeDeleteHandle.(J)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeDisconnect_J;
#pragma warning disable 0169
		static Delegate GetNativeDisconnect_JHandler ()
		{
			if (cb_nativeDisconnect_J == null)
				cb_nativeDisconnect_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_I (n_NativeDisconnect_J));
			return cb_nativeDisconnect_J;
		}

		static int n_NativeDisconnect_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeDisconnect (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='nativeDisconnect' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeDisconnect", "(J)I", "GetNativeDisconnect_JHandler")]
		protected virtual unsafe int NativeDisconnect (long p0)
		{
			const string __id = "nativeDisconnect.(J)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeGetAdmin_J;
#pragma warning disable 0169
		static Delegate GetNativeGetAdmin_JHandler ()
		{
			if (cb_nativeGetAdmin_J == null)
				cb_nativeGetAdmin_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_L (n_NativeGetAdmin_J));
			return cb_nativeGetAdmin_J;
		}

		static IntPtr n_NativeGetAdmin_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.NativeGetAdmin (p0));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='nativeGetAdmin' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeGetAdmin", "(J)Ljava/lang/String;", "GetNativeGetAdmin_JHandler")]
		protected virtual unsafe string? NativeGetAdmin (long p0)
		{
			const string __id = "nativeGetAdmin.(J)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate? cb_nativeGetCommBoxManager_JarrayJ;
#pragma warning disable 0169
		static Delegate GetNativeGetCommBoxManager_JarrayJHandler ()
		{
			if (cb_nativeGetCommBoxManager_JarrayJ == null)
				cb_nativeGetCommBoxManager_JarrayJ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJL_I (n_NativeGetCommBoxManager_JarrayJ));
			return cb_nativeGetCommBoxManager_JarrayJ;
		}

		static int n_NativeGetCommBoxManager_JarrayJ (IntPtr jnienv, IntPtr native__this, long p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p1 = (long[]?) JNIEnv.GetArray (native_p1, JniHandleOwnership.DoNotTransfer, typeof (long));
			int __ret = __this.NativeGetCommBoxManager (p0, p1);
			if (p1 != null)
				JNIEnv.CopyArray (p1, native_p1);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='nativeGetCommBoxManager' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='long[]']]"
		[Register ("nativeGetCommBoxManager", "(J[J)I", "GetNativeGetCommBoxManager_JarrayJHandler")]
		protected virtual unsafe int NativeGetCommBoxManager (long p0, long[]? p1)
		{
			const string __id = "nativeGetCommBoxManager.(J[J)I";
			IntPtr native_p1 = JNIEnv.NewArray (p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (native_p1);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				if (p1 != null) {
					JNIEnv.CopyArray (native_p1, p1);
					JNIEnv.DeleteLocalRef (native_p1);
				}
				global::System.GC.KeepAlive (p1);
			}
		}

		static Delegate? cb_nativeGetLocal_J;
#pragma warning disable 0169
		static Delegate GetNativeGetLocal_JHandler ()
		{
			if (cb_nativeGetLocal_J == null)
				cb_nativeGetLocal_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_L (n_NativeGetLocal_J));
			return cb_nativeGetLocal_J;
		}

		static IntPtr n_NativeGetLocal_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.NativeGetLocal (p0));
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='nativeGetLocal' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeGetLocal", "(J)Ljava/lang/String;", "GetNativeGetLocal_JHandler")]
		protected virtual unsafe string? NativeGetLocal (long p0)
		{
			const string __id = "nativeGetLocal.(J)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate? cb_nativeIsConnect_J;
#pragma warning disable 0169
		static Delegate GetNativeIsConnect_JHandler ()
		{
			if (cb_nativeIsConnect_J == null)
				cb_nativeIsConnect_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_Z (n_NativeIsConnect_J));
			return cb_nativeIsConnect_J;
		}

		static bool n_NativeIsConnect_J (IntPtr jnienv, IntPtr native__this, long p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NativeIsConnect (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='nativeIsConnect' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("nativeIsConnect", "(J)Z", "GetNativeIsConnect_JHandler")]
		protected virtual unsafe bool NativeIsConnect (long p0)
		{
			const string __id = "nativeIsConnect.(J)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_nativeLogOutput_IJLjava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetNativeLogOutput_IJLjava_lang_String_Ljava_lang_String_Handler ()
		{
			if (cb_nativeLogOutput_IJLjava_lang_String_Ljava_lang_String_ == null)
				cb_nativeLogOutput_IJLjava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIJLL_V (n_NativeLogOutput_IJLjava_lang_String_Ljava_lang_String_));
			return cb_nativeLogOutput_IJLjava_lang_String_Ljava_lang_String_;
		}

		static void n_NativeLogOutput_IJLjava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, int p0, long p1, IntPtr native_p2, IntPtr native_p3)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p2 = JNIEnv.GetString (native_p2, JniHandleOwnership.DoNotTransfer);
			var p3 = JNIEnv.GetString (native_p3, JniHandleOwnership.DoNotTransfer);
			__this.NativeLogOutput (p0, p1, p2, p3);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='nativeLogOutput' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='long'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]"
		[Register ("nativeLogOutput", "(IJLjava/lang/String;Ljava/lang/String;)V", "GetNativeLogOutput_IJLjava_lang_String_Ljava_lang_String_Handler")]
		protected virtual unsafe void NativeLogOutput (int p0, long p1, string? p2, string? p3)
		{
			const string __id = "nativeLogOutput.(IJLjava/lang/String;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString ((string?)p2);
			IntPtr native_p3 = JNIEnv.NewString ((string?)p3);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (native_p3);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
				JNIEnv.DeleteLocalRef (native_p3);
			}
		}

		static Delegate? cb_nativeReadLogSettings_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetNativeReadLogSettings_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler ()
		{
			if (cb_nativeReadLogSettings_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_ == null)
				cb_nativeReadLogSettings_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLLLLLLL_I (n_NativeReadLogSettings_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_));
			return cb_nativeReadLogSettings_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_;
		}

		static int n_NativeReadLogSettings_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1, IntPtr native_p2, IntPtr native_p3, IntPtr native_p4, IntPtr native_p5, IntPtr native_p6, IntPtr native_p7)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Device> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
			var p2 = JNIEnv.GetString (native_p2, JniHandleOwnership.DoNotTransfer);
			var p3 = JNIEnv.GetString (native_p3, JniHandleOwnership.DoNotTransfer);
			var p4 = JNIEnv.GetString (native_p4, JniHandleOwnership.DoNotTransfer);
			var p5 = JNIEnv.GetString (native_p5, JniHandleOwnership.DoNotTransfer);
			var p6 = JNIEnv.GetString (native_p6, JniHandleOwnership.DoNotTransfer);
			var p7 = JNIEnv.GetString (native_p7, JniHandleOwnership.DoNotTransfer);
			int __ret = __this.NativeReadLogSettings (p0, p1, p2, p3, p4, p5, p6, p7);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice']/class[@name='Device']/method[@name='nativeReadLogSettings' and count(parameter)=8 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='java.lang.String'] and parameter[8][@type='java.lang.String']]"
		[Register ("nativeReadLogSettings", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I", "GetNativeReadLogSettings_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")]
		protected virtual unsafe int NativeReadLogSettings (string? p0, string? p1, string? p2, string? p3, string? p4, string? p5, string? p6, string? p7)
		{
			const string __id = "nativeReadLogSettings.(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I";
			IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
			IntPtr native_p1 = JNIEnv.NewString ((string?)p1);
			IntPtr native_p2 = JNIEnv.NewString ((string?)p2);
			IntPtr native_p3 = JNIEnv.NewString ((string?)p3);
			IntPtr native_p4 = JNIEnv.NewString ((string?)p4);
			IntPtr native_p5 = JNIEnv.NewString ((string?)p5);
			IntPtr native_p6 = JNIEnv.NewString ((string?)p6);
			IntPtr native_p7 = JNIEnv.NewString ((string?)p7);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [8];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (native_p3);
				__args [4] = new JniArgumentValue (native_p4);
				__args [5] = new JniArgumentValue (native_p5);
				__args [6] = new JniArgumentValue (native_p6);
				__args [7] = new JniArgumentValue (native_p7);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				JNIEnv.DeleteLocalRef (native_p1);
				JNIEnv.DeleteLocalRef (native_p2);
				JNIEnv.DeleteLocalRef (native_p3);
				JNIEnv.DeleteLocalRef (native_p4);
				JNIEnv.DeleteLocalRef (native_p5);
				JNIEnv.DeleteLocalRef (native_p6);
				JNIEnv.DeleteLocalRef (native_p7);
			}
		}

	}
}
