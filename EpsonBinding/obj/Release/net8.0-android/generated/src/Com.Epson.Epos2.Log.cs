//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Epson.Epos2 {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.epson.epos2']/class[@name='Log']"
	[global::Android.Runtime.Register ("com/epson/epos2/Log", DoNotGenerateAcw=true)]
	public partial class Log : global::Java.Lang.Object {
		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2']/class[@name='Log']/field[@name='LOGLEVEL_LOW']"
		[Register ("LOGLEVEL_LOW")]
		public const int LoglevelLow = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2']/class[@name='Log']/field[@name='OUTPUT_DISABLE']"
		[Register ("OUTPUT_DISABLE")]
		public const int OutputDisable = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2']/class[@name='Log']/field[@name='OUTPUT_STORAGE']"
		[Register ("OUTPUT_STORAGE")]
		public const int OutputStorage = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2']/class[@name='Log']/field[@name='OUTPUT_TCP']"
		[Register ("OUTPUT_TCP")]
		public const int OutputTcp = (int) 2;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2']/class[@name='Log']/field[@name='PERIOD_PERMANENT']"
		[Register ("PERIOD_PERMANENT")]
		public const int PeriodPermanent = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.epos2']/class[@name='Log']/field[@name='PERIOD_TEMPORARY']"
		[Register ("PERIOD_TEMPORARY")]
		public const int PeriodTemporary = (int) 0;

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/epson/epos2/Log", typeof (Log));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected Log (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.epson.epos2']/class[@name='Log']/constructor[@name='Log' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe Log () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		public static unsafe string? SdkVersion {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2']/class[@name='Log']/method[@name='getSdkVersion' and count(parameter)=0]"
			[Register ("getSdkVersion", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getSdkVersion.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2']/class[@name='Log']/method[@name='setLogSettings' and count(parameter)=7 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='int']]"
		[Register ("setLogSettings", "(Landroid/content/Context;IILjava/lang/String;III)V", "")]
		public static unsafe void SetLogSettings (global::Android.Content.Context? context, int period, int output, string? ipAddress, int port, int logSize, int logLevel)
		{
			const string __id = "setLogSettings.(Landroid/content/Context;IILjava/lang/String;III)V";
			IntPtr native_ipAddress = JNIEnv.NewString ((string?)ipAddress);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [7];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue (period);
				__args [2] = new JniArgumentValue (output);
				__args [3] = new JniArgumentValue (native_ipAddress);
				__args [4] = new JniArgumentValue (port);
				__args [5] = new JniArgumentValue (logSize);
				__args [6] = new JniArgumentValue (logLevel);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_ipAddress);
				global::System.GC.KeepAlive (context);
			}
		}

	}
}
