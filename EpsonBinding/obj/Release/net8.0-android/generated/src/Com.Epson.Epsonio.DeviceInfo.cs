//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Epson.Epsonio {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.epson.epsonio']/class[@name='DeviceInfo']"
	[global::Android.Runtime.Register ("com/epson/epsonio/DeviceInfo", DoNotGenerateAcw=true)]
	public partial class DeviceInfo : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/epson/epsonio/DeviceInfo", typeof (DeviceInfo));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected DeviceInfo (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.epson.epsonio']/class[@name='DeviceInfo']/constructor[@name='DeviceInfo' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='java.lang.String']]"
		[Register (".ctor", "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "")]
		public unsafe DeviceInfo (int deviceType, string? printerName, string? deviceName, string? ipAddress, string? macAddress) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_printerName = JNIEnv.NewString ((string?)printerName);
			IntPtr native_deviceName = JNIEnv.NewString ((string?)deviceName);
			IntPtr native_ipAddress = JNIEnv.NewString ((string?)ipAddress);
			IntPtr native_macAddress = JNIEnv.NewString ((string?)macAddress);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (deviceType);
				__args [1] = new JniArgumentValue (native_printerName);
				__args [2] = new JniArgumentValue (native_deviceName);
				__args [3] = new JniArgumentValue (native_ipAddress);
				__args [4] = new JniArgumentValue (native_macAddress);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_printerName);
				JNIEnv.DeleteLocalRef (native_deviceName);
				JNIEnv.DeleteLocalRef (native_ipAddress);
				JNIEnv.DeleteLocalRef (native_macAddress);
			}
		}

		static Delegate? cb_getDeviceName;
#pragma warning disable 0169
		static Delegate GetGetDeviceNameHandler ()
		{
			if (cb_getDeviceName == null)
				cb_getDeviceName = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetDeviceName));
			return cb_getDeviceName;
		}

		static IntPtr n_GetDeviceName (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epsonio.DeviceInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.DeviceName);
		}
#pragma warning restore 0169

		public virtual unsafe string? DeviceName {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epsonio']/class[@name='DeviceInfo']/method[@name='getDeviceName' and count(parameter)=0]"
			[Register ("getDeviceName", "()Ljava/lang/String;", "GetGetDeviceNameHandler")]
			get {
				const string __id = "getDeviceName.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getDeviceType;
#pragma warning disable 0169
		static Delegate GetGetDeviceTypeHandler ()
		{
			if (cb_getDeviceType == null)
				cb_getDeviceType = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetDeviceType));
			return cb_getDeviceType;
		}

		static int n_GetDeviceType (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epsonio.DeviceInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.DeviceType;
		}
#pragma warning restore 0169

		public virtual unsafe int DeviceType {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epsonio']/class[@name='DeviceInfo']/method[@name='getDeviceType' and count(parameter)=0]"
			[Register ("getDeviceType", "()I", "GetGetDeviceTypeHandler")]
			get {
				const string __id = "getDeviceType.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getIpAddress;
#pragma warning disable 0169
		static Delegate GetGetIpAddressHandler ()
		{
			if (cb_getIpAddress == null)
				cb_getIpAddress = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetIpAddress));
			return cb_getIpAddress;
		}

		static IntPtr n_GetIpAddress (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epsonio.DeviceInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.IpAddress);
		}
#pragma warning restore 0169

		public virtual unsafe string? IpAddress {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epsonio']/class[@name='DeviceInfo']/method[@name='getIpAddress' and count(parameter)=0]"
			[Register ("getIpAddress", "()Ljava/lang/String;", "GetGetIpAddressHandler")]
			get {
				const string __id = "getIpAddress.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getMacAddress;
#pragma warning disable 0169
		static Delegate GetGetMacAddressHandler ()
		{
			if (cb_getMacAddress == null)
				cb_getMacAddress = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetMacAddress));
			return cb_getMacAddress;
		}

		static IntPtr n_GetMacAddress (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epsonio.DeviceInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.MacAddress);
		}
#pragma warning restore 0169

		public virtual unsafe string? MacAddress {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epsonio']/class[@name='DeviceInfo']/method[@name='getMacAddress' and count(parameter)=0]"
			[Register ("getMacAddress", "()Ljava/lang/String;", "GetGetMacAddressHandler")]
			get {
				const string __id = "getMacAddress.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getPrinterName;
#pragma warning disable 0169
		static Delegate GetGetPrinterNameHandler ()
		{
			if (cb_getPrinterName == null)
				cb_getPrinterName = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetPrinterName));
			return cb_getPrinterName;
		}

		static IntPtr n_GetPrinterName (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epsonio.DeviceInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.PrinterName);
		}
#pragma warning restore 0169

		public virtual unsafe string? PrinterName {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epsonio']/class[@name='DeviceInfo']/method[@name='getPrinterName' and count(parameter)=0]"
			[Register ("getPrinterName", "()Ljava/lang/String;", "GetGetPrinterNameHandler")]
			get {
				const string __id = "getPrinterName.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

	}
}
