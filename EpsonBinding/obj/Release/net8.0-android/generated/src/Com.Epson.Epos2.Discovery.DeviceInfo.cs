//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Epson.Epos2.Discovery {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.epson.epos2.discovery']/class[@name='DeviceInfo']"
	[global::Android.Runtime.Register ("com/epson/epos2/discovery/DeviceInfo", DoNotGenerateAcw=true)]
	public partial class DeviceInfo : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/epson/epos2/discovery/DeviceInfo", typeof (DeviceInfo));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected DeviceInfo (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.epson.epos2.discovery']/class[@name='DeviceInfo']/constructor[@name='DeviceInfo' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe DeviceInfo () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_getBdAddress;
#pragma warning disable 0169
		static Delegate GetGetBdAddressHandler ()
		{
			if (cb_getBdAddress == null)
				cb_getBdAddress = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetBdAddress));
			return cb_getBdAddress;
		}

		static IntPtr n_GetBdAddress (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Discovery.DeviceInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.BdAddress);
		}
#pragma warning restore 0169

		public virtual unsafe string? BdAddress {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.discovery']/class[@name='DeviceInfo']/method[@name='getBdAddress' and count(parameter)=0]"
			[Register ("getBdAddress", "()Ljava/lang/String;", "GetGetBdAddressHandler")]
			get {
				const string __id = "getBdAddress.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getDeviceName;
#pragma warning disable 0169
		static Delegate GetGetDeviceNameHandler ()
		{
			if (cb_getDeviceName == null)
				cb_getDeviceName = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetDeviceName));
			return cb_getDeviceName;
		}

		static IntPtr n_GetDeviceName (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Discovery.DeviceInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.DeviceName);
		}
#pragma warning restore 0169

		public virtual unsafe string? DeviceName {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.discovery']/class[@name='DeviceInfo']/method[@name='getDeviceName' and count(parameter)=0]"
			[Register ("getDeviceName", "()Ljava/lang/String;", "GetGetDeviceNameHandler")]
			get {
				const string __id = "getDeviceName.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getDeviceType;
#pragma warning disable 0169
		static Delegate GetGetDeviceTypeHandler ()
		{
			if (cb_getDeviceType == null)
				cb_getDeviceType = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetDeviceType));
			return cb_getDeviceType;
		}

		static int n_GetDeviceType (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Discovery.DeviceInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.DeviceType;
		}
#pragma warning restore 0169

		public virtual unsafe int DeviceType {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.discovery']/class[@name='DeviceInfo']/method[@name='getDeviceType' and count(parameter)=0]"
			[Register ("getDeviceType", "()I", "GetGetDeviceTypeHandler")]
			get {
				const string __id = "getDeviceType.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getIpAddress;
#pragma warning disable 0169
		static Delegate GetGetIpAddressHandler ()
		{
			if (cb_getIpAddress == null)
				cb_getIpAddress = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetIpAddress));
			return cb_getIpAddress;
		}

		static IntPtr n_GetIpAddress (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Discovery.DeviceInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.IpAddress);
		}
#pragma warning restore 0169

		public virtual unsafe string? IpAddress {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.discovery']/class[@name='DeviceInfo']/method[@name='getIpAddress' and count(parameter)=0]"
			[Register ("getIpAddress", "()Ljava/lang/String;", "GetGetIpAddressHandler")]
			get {
				const string __id = "getIpAddress.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getLeBdAddress;
#pragma warning disable 0169
		static Delegate GetGetLeBdAddressHandler ()
		{
			if (cb_getLeBdAddress == null)
				cb_getLeBdAddress = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetLeBdAddress));
			return cb_getLeBdAddress;
		}

		static IntPtr n_GetLeBdAddress (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Discovery.DeviceInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.LeBdAddress);
		}
#pragma warning restore 0169

		public virtual unsafe string? LeBdAddress {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.discovery']/class[@name='DeviceInfo']/method[@name='getLeBdAddress' and count(parameter)=0]"
			[Register ("getLeBdAddress", "()Ljava/lang/String;", "GetGetLeBdAddressHandler")]
			get {
				const string __id = "getLeBdAddress.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getMacAddress;
#pragma warning disable 0169
		static Delegate GetGetMacAddressHandler ()
		{
			if (cb_getMacAddress == null)
				cb_getMacAddress = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetMacAddress));
			return cb_getMacAddress;
		}

		static IntPtr n_GetMacAddress (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Discovery.DeviceInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.MacAddress);
		}
#pragma warning restore 0169

		public virtual unsafe string? MacAddress {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.discovery']/class[@name='DeviceInfo']/method[@name='getMacAddress' and count(parameter)=0]"
			[Register ("getMacAddress", "()Ljava/lang/String;", "GetGetMacAddressHandler")]
			get {
				const string __id = "getMacAddress.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getTarget;
#pragma warning disable 0169
		static Delegate GetGetTargetHandler ()
		{
			if (cb_getTarget == null)
				cb_getTarget = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetTarget));
			return cb_getTarget;
		}

		static IntPtr n_GetTarget (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Discovery.DeviceInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.Target);
		}
#pragma warning restore 0169

		public virtual unsafe string? Target {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.discovery']/class[@name='DeviceInfo']/method[@name='getTarget' and count(parameter)=0]"
			[Register ("getTarget", "()Ljava/lang/String;", "GetGetTargetHandler")]
			get {
				const string __id = "getTarget.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_setBdAddress_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetBdAddress_Ljava_lang_String_Handler ()
		{
			if (cb_setBdAddress_Ljava_lang_String_ == null)
				cb_setBdAddress_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetBdAddress_Ljava_lang_String_));
			return cb_setBdAddress_Ljava_lang_String_;
		}

		static void n_SetBdAddress_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_bdAddress)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Discovery.DeviceInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var bdAddress = JNIEnv.GetString (native_bdAddress, JniHandleOwnership.DoNotTransfer);
			__this.SetBdAddress (bdAddress);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.discovery']/class[@name='DeviceInfo']/method[@name='setBdAddress' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("setBdAddress", "(Ljava/lang/String;)V", "GetSetBdAddress_Ljava_lang_String_Handler")]
		protected virtual unsafe void SetBdAddress (string? bdAddress)
		{
			const string __id = "setBdAddress.(Ljava/lang/String;)V";
			IntPtr native_bdAddress = JNIEnv.NewString ((string?)bdAddress);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_bdAddress);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_bdAddress);
			}
		}

		static Delegate? cb_setDeviceName_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetDeviceName_Ljava_lang_String_Handler ()
		{
			if (cb_setDeviceName_Ljava_lang_String_ == null)
				cb_setDeviceName_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetDeviceName_Ljava_lang_String_));
			return cb_setDeviceName_Ljava_lang_String_;
		}

		static void n_SetDeviceName_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_deviceName)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Discovery.DeviceInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var deviceName = JNIEnv.GetString (native_deviceName, JniHandleOwnership.DoNotTransfer);
			__this.SetDeviceName (deviceName);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.discovery']/class[@name='DeviceInfo']/method[@name='setDeviceName' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("setDeviceName", "(Ljava/lang/String;)V", "GetSetDeviceName_Ljava_lang_String_Handler")]
		protected virtual unsafe void SetDeviceName (string? deviceName)
		{
			const string __id = "setDeviceName.(Ljava/lang/String;)V";
			IntPtr native_deviceName = JNIEnv.NewString ((string?)deviceName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_deviceName);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_deviceName);
			}
		}

		static Delegate? cb_setDeviceType_I;
#pragma warning disable 0169
		static Delegate GetSetDeviceType_IHandler ()
		{
			if (cb_setDeviceType_I == null)
				cb_setDeviceType_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetDeviceType_I));
			return cb_setDeviceType_I;
		}

		static void n_SetDeviceType_I (IntPtr jnienv, IntPtr native__this, int deviceType)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Discovery.DeviceInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.SetDeviceType (deviceType);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.discovery']/class[@name='DeviceInfo']/method[@name='setDeviceType' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setDeviceType", "(I)V", "GetSetDeviceType_IHandler")]
		protected virtual unsafe void SetDeviceType (int deviceType)
		{
			const string __id = "setDeviceType.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (deviceType);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_setIpAddress_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetIpAddress_Ljava_lang_String_Handler ()
		{
			if (cb_setIpAddress_Ljava_lang_String_ == null)
				cb_setIpAddress_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetIpAddress_Ljava_lang_String_));
			return cb_setIpAddress_Ljava_lang_String_;
		}

		static void n_SetIpAddress_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_ipAddress)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Discovery.DeviceInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var ipAddress = JNIEnv.GetString (native_ipAddress, JniHandleOwnership.DoNotTransfer);
			__this.SetIpAddress (ipAddress);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.discovery']/class[@name='DeviceInfo']/method[@name='setIpAddress' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("setIpAddress", "(Ljava/lang/String;)V", "GetSetIpAddress_Ljava_lang_String_Handler")]
		protected virtual unsafe void SetIpAddress (string? ipAddress)
		{
			const string __id = "setIpAddress.(Ljava/lang/String;)V";
			IntPtr native_ipAddress = JNIEnv.NewString ((string?)ipAddress);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_ipAddress);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_ipAddress);
			}
		}

		static Delegate? cb_setLeBdAddress_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetLeBdAddress_Ljava_lang_String_Handler ()
		{
			if (cb_setLeBdAddress_Ljava_lang_String_ == null)
				cb_setLeBdAddress_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetLeBdAddress_Ljava_lang_String_));
			return cb_setLeBdAddress_Ljava_lang_String_;
		}

		static void n_SetLeBdAddress_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_leBdAddress)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Discovery.DeviceInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var leBdAddress = JNIEnv.GetString (native_leBdAddress, JniHandleOwnership.DoNotTransfer);
			__this.SetLeBdAddress (leBdAddress);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.discovery']/class[@name='DeviceInfo']/method[@name='setLeBdAddress' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("setLeBdAddress", "(Ljava/lang/String;)V", "GetSetLeBdAddress_Ljava_lang_String_Handler")]
		protected virtual unsafe void SetLeBdAddress (string? leBdAddress)
		{
			const string __id = "setLeBdAddress.(Ljava/lang/String;)V";
			IntPtr native_leBdAddress = JNIEnv.NewString ((string?)leBdAddress);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_leBdAddress);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_leBdAddress);
			}
		}

		static Delegate? cb_setMacAddress_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetMacAddress_Ljava_lang_String_Handler ()
		{
			if (cb_setMacAddress_Ljava_lang_String_ == null)
				cb_setMacAddress_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetMacAddress_Ljava_lang_String_));
			return cb_setMacAddress_Ljava_lang_String_;
		}

		static void n_SetMacAddress_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_macAddress)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Discovery.DeviceInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var macAddress = JNIEnv.GetString (native_macAddress, JniHandleOwnership.DoNotTransfer);
			__this.SetMacAddress (macAddress);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.discovery']/class[@name='DeviceInfo']/method[@name='setMacAddress' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("setMacAddress", "(Ljava/lang/String;)V", "GetSetMacAddress_Ljava_lang_String_Handler")]
		protected virtual unsafe void SetMacAddress (string? macAddress)
		{
			const string __id = "setMacAddress.(Ljava/lang/String;)V";
			IntPtr native_macAddress = JNIEnv.NewString ((string?)macAddress);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_macAddress);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_macAddress);
			}
		}

		static Delegate? cb_setTarget_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetTarget_Ljava_lang_String_Handler ()
		{
			if (cb_setTarget_Ljava_lang_String_ == null)
				cb_setTarget_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetTarget_Ljava_lang_String_));
			return cb_setTarget_Ljava_lang_String_;
		}

		static void n_SetTarget_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_target)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Epos2.Discovery.DeviceInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var target = JNIEnv.GetString (native_target, JniHandleOwnership.DoNotTransfer);
			__this.SetTarget (target);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.epos2.discovery']/class[@name='DeviceInfo']/method[@name='setTarget' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("setTarget", "(Ljava/lang/String;)V", "GetSetTarget_Ljava_lang_String_Handler")]
		protected virtual unsafe void SetTarget (string? target)
		{
			const string __id = "setTarget.(Ljava/lang/String;)V";
			IntPtr native_target = JNIEnv.NewString ((string?)target);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_target);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_target);
			}
		}

	}
}
