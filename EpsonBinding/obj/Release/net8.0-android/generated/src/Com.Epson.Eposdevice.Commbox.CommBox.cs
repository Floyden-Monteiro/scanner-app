//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Epson.Eposdevice.Commbox {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBox']"
	[global::Android.Runtime.Register ("com/epson/eposdevice/commbox/CommBox", DoNotGenerateAcw=true)]
	public abstract partial class CommBox : global::Java.Lang.Object {
		// Metadata.xml XPath class reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBox.CommBoxHistoryCallbackAdapter']"
		[global::Android.Runtime.Register ("com/epson/eposdevice/commbox/CommBox$CommBoxHistoryCallbackAdapter", DoNotGenerateAcw=true)]
		protected internal partial class CommBoxHistoryCallbackAdapter : global::Java.Lang.Object {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/epson/eposdevice/commbox/CommBox$CommBoxHistoryCallbackAdapter", typeof (CommBoxHistoryCallbackAdapter));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected CommBoxHistoryCallbackAdapter (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBox.CommBoxHistoryCallbackAdapter']/constructor[@name='CommBox.CommBoxHistoryCallbackAdapter' and count(parameter)=2 and parameter[1][@type='com.epson.eposdevice.commbox.CommBox'] and parameter[2][@type='com.epson.eposdevice.commbox.GetCommHistoryListener']]"
			[Register (".ctor", "(Lcom/epson/eposdevice/commbox/CommBox;Lcom/epson/eposdevice/commbox/GetCommHistoryListener;)V", "")]
			public unsafe CommBoxHistoryCallbackAdapter (global::Com.Epson.Eposdevice.Commbox.CommBox? __self, global::Com.Epson.Eposdevice.Commbox.IGetCommHistoryListener? target) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType!) + ";Lcom/epson/eposdevice/commbox/GetCommHistoryListener;)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					__args [1] = new JniArgumentValue ((target == null) ? IntPtr.Zero : ((global::Java.Lang.Object) target).Handle);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (__self);
					global::System.GC.KeepAlive (target);
				}
			}

			static Delegate? cb_addHistory_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetAddHistory_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler ()
			{
				if (cb_addHistory_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_ == null)
					cb_addHistory_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLL_V (n_AddHistory_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_));
				return cb_addHistory_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_;
			}

			static void n_AddHistory_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_senderId, IntPtr native_receiverId, IntPtr native_message)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBox.CommBoxHistoryCallbackAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var senderId = JNIEnv.GetString (native_senderId, JniHandleOwnership.DoNotTransfer);
				var receiverId = JNIEnv.GetString (native_receiverId, JniHandleOwnership.DoNotTransfer);
				var message = JNIEnv.GetString (native_message, JniHandleOwnership.DoNotTransfer);
				__this.AddHistory (senderId, receiverId, message);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBox.CommBoxHistoryCallbackAdapter']/method[@name='addHistory' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]"
			[Register ("addHistory", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetAddHistory_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")]
			public virtual unsafe void AddHistory (string? senderId, string? receiverId, string? message)
			{
				const string __id = "addHistory.(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V";
				IntPtr native_senderId = JNIEnv.NewString ((string?)senderId);
				IntPtr native_receiverId = JNIEnv.NewString ((string?)receiverId);
				IntPtr native_message = JNIEnv.NewString ((string?)message);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [3];
					__args [0] = new JniArgumentValue (native_senderId);
					__args [1] = new JniArgumentValue (native_receiverId);
					__args [2] = new JniArgumentValue (native_message);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_senderId);
					JNIEnv.DeleteLocalRef (native_receiverId);
					JNIEnv.DeleteLocalRef (native_message);
				}
			}

			static Delegate? cb_onCommBoxHistory_JLjava_lang_String_IJ;
#pragma warning disable 0169
			static Delegate GetOnCommBoxHistory_JLjava_lang_String_IJHandler ()
			{
				if (cb_onCommBoxHistory_JLjava_lang_String_IJ == null)
					cb_onCommBoxHistory_JLjava_lang_String_IJ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJLIJ_V (n_OnCommBoxHistory_JLjava_lang_String_IJ));
				return cb_onCommBoxHistory_JLjava_lang_String_IJ;
			}

			static void n_OnCommBoxHistory_JLjava_lang_String_IJ (IntPtr jnienv, IntPtr native__this, long commBoxHandle, IntPtr native_ipAddress, int code, long sequence)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBox.CommBoxHistoryCallbackAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var ipAddress = JNIEnv.GetString (native_ipAddress, JniHandleOwnership.DoNotTransfer);
				__this.OnCommBoxHistory (commBoxHandle, ipAddress, code, sequence);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBox.CommBoxHistoryCallbackAdapter']/method[@name='onCommBoxHistory' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='int'] and parameter[4][@type='long']]"
			[Register ("onCommBoxHistory", "(JLjava/lang/String;IJ)V", "GetOnCommBoxHistory_JLjava_lang_String_IJHandler")]
			public virtual unsafe void OnCommBoxHistory (long commBoxHandle, string? ipAddress, int code, long sequence)
			{
				const string __id = "onCommBoxHistory.(JLjava/lang/String;IJ)V";
				IntPtr native_ipAddress = JNIEnv.NewString ((string?)ipAddress);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [4];
					__args [0] = new JniArgumentValue (commBoxHandle);
					__args [1] = new JniArgumentValue (native_ipAddress);
					__args [2] = new JniArgumentValue (code);
					__args [3] = new JniArgumentValue (sequence);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_ipAddress);
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBox.CommBoxSendDataCallbackAdapter']"
		[global::Android.Runtime.Register ("com/epson/eposdevice/commbox/CommBox$CommBoxSendDataCallbackAdapter", DoNotGenerateAcw=true)]
		protected internal partial class CommBoxSendDataCallbackAdapter : global::Java.Lang.Object {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/epson/eposdevice/commbox/CommBox$CommBoxSendDataCallbackAdapter", typeof (CommBoxSendDataCallbackAdapter));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected CommBoxSendDataCallbackAdapter (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBox.CommBoxSendDataCallbackAdapter']/constructor[@name='CommBox.CommBoxSendDataCallbackAdapter' and count(parameter)=2 and parameter[1][@type='com.epson.eposdevice.commbox.CommBox'] and parameter[2][@type='com.epson.eposdevice.commbox.SendDataListener']]"
			[Register (".ctor", "(Lcom/epson/eposdevice/commbox/CommBox;Lcom/epson/eposdevice/commbox/SendDataListener;)V", "")]
			public unsafe CommBoxSendDataCallbackAdapter (global::Com.Epson.Eposdevice.Commbox.CommBox? __self, global::Com.Epson.Eposdevice.Commbox.ISendDataListener? target) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType!) + ";Lcom/epson/eposdevice/commbox/SendDataListener;)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					__args [1] = new JniArgumentValue ((target == null) ? IntPtr.Zero : ((global::Java.Lang.Object) target).Handle);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (__self);
					global::System.GC.KeepAlive (target);
				}
			}

			static Delegate? cb_onCommBoxSendData_JLjava_lang_String_IJJ;
#pragma warning disable 0169
			static Delegate GetOnCommBoxSendData_JLjava_lang_String_IJJHandler ()
			{
				if (cb_onCommBoxSendData_JLjava_lang_String_IJJ == null)
					cb_onCommBoxSendData_JLjava_lang_String_IJJ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJLIJJ_V (n_OnCommBoxSendData_JLjava_lang_String_IJJ));
				return cb_onCommBoxSendData_JLjava_lang_String_IJJ;
			}

			static void n_OnCommBoxSendData_JLjava_lang_String_IJJ (IntPtr jnienv, IntPtr native__this, long commBoxHandle, IntPtr native_ipAddress, int code, long count, long sequence)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBox.CommBoxSendDataCallbackAdapter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var ipAddress = JNIEnv.GetString (native_ipAddress, JniHandleOwnership.DoNotTransfer);
				__this.OnCommBoxSendData (commBoxHandle, ipAddress, code, count, sequence);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBox.CommBoxSendDataCallbackAdapter']/method[@name='onCommBoxSendData' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='long']]"
			[Register ("onCommBoxSendData", "(JLjava/lang/String;IJJ)V", "GetOnCommBoxSendData_JLjava_lang_String_IJJHandler")]
			public virtual unsafe void OnCommBoxSendData (long commBoxHandle, string? ipAddress, int code, long count, long sequence)
			{
				const string __id = "onCommBoxSendData.(JLjava/lang/String;IJJ)V";
				IntPtr native_ipAddress = JNIEnv.NewString ((string?)ipAddress);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [5];
					__args [0] = new JniArgumentValue (commBoxHandle);
					__args [1] = new JniArgumentValue (native_ipAddress);
					__args [2] = new JniArgumentValue (code);
					__args [3] = new JniArgumentValue (count);
					__args [4] = new JniArgumentValue (sequence);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_ipAddress);
				}
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/epson/eposdevice/commbox/CommBox", typeof (CommBox));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected CommBox (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBox']/constructor[@name='CommBox' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register (".ctor", "(J)V", "")]
		protected unsafe CommBox (long handle) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(J)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_getInnerHandle;
#pragma warning disable 0169
		static Delegate GetGetInnerHandleHandler ()
		{
			if (cb_getInnerHandle == null)
				cb_getInnerHandle = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_J (n_GetInnerHandle));
			return cb_getInnerHandle;
		}

		static long n_GetInnerHandle (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBox> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.InnerHandle;
		}
#pragma warning restore 0169

		protected virtual unsafe long InnerHandle {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBox']/method[@name='getInnerHandle' and count(parameter)=0]"
			[Register ("getInnerHandle", "()J", "GetGetInnerHandleHandler")]
			get {
				const string __id = "getInnerHandle.()J";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt64Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getCommHistory_arrayILcom_epson_eposdevice_commbox_GetCommHistoryListener_;
#pragma warning disable 0169
		static Delegate GetGetCommHistory_arrayILcom_epson_eposdevice_commbox_GetCommHistoryListener_Handler ()
		{
			if (cb_getCommHistory_arrayILcom_epson_eposdevice_commbox_GetCommHistoryListener_ == null)
				cb_getCommHistory_arrayILcom_epson_eposdevice_commbox_GetCommHistoryListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_GetCommHistory_arrayILcom_epson_eposdevice_commbox_GetCommHistoryListener_));
			return cb_getCommHistory_arrayILcom_epson_eposdevice_commbox_GetCommHistoryListener_;
		}

		static void n_GetCommHistory_arrayILcom_epson_eposdevice_commbox_GetCommHistoryListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_sequence, IntPtr native_target)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBox> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var sequence = (int[]?) JNIEnv.GetArray (native_sequence, JniHandleOwnership.DoNotTransfer, typeof (int));
			var target = (global::Com.Epson.Eposdevice.Commbox.IGetCommHistoryListener?)global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.IGetCommHistoryListener> (native_target, JniHandleOwnership.DoNotTransfer);
			__this.GetCommHistory (sequence, target);
			if (sequence != null)
				JNIEnv.CopyArray (sequence, native_sequence);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBox']/method[@name='getCommHistory' and count(parameter)=2 and parameter[1][@type='int[]'] and parameter[2][@type='com.epson.eposdevice.commbox.GetCommHistoryListener']]"
		[Register ("getCommHistory", "([ILcom/epson/eposdevice/commbox/GetCommHistoryListener;)V", "GetGetCommHistory_arrayILcom_epson_eposdevice_commbox_GetCommHistoryListener_Handler")]
		public virtual unsafe void GetCommHistory (int[]? sequence, global::Com.Epson.Eposdevice.Commbox.IGetCommHistoryListener? target)
		{
			const string __id = "getCommHistory.([ILcom/epson/eposdevice/commbox/GetCommHistoryListener;)V";
			IntPtr native_sequence = JNIEnv.NewArray (sequence);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_sequence);
				__args [1] = new JniArgumentValue ((target == null) ? IntPtr.Zero : ((global::Java.Lang.Object) target).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (sequence != null) {
					JNIEnv.CopyArray (native_sequence, sequence);
					JNIEnv.DeleteLocalRef (native_sequence);
				}
				global::System.GC.KeepAlive (sequence);
				global::System.GC.KeepAlive (target);
			}
		}

		static Delegate? cb_innerDeleteInstance;
#pragma warning disable 0169
		static Delegate GetInnerDeleteInstanceHandler ()
		{
			if (cb_innerDeleteInstance == null)
				cb_innerDeleteInstance = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_InnerDeleteInstance));
			return cb_innerDeleteInstance;
		}

		static void n_InnerDeleteInstance (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBox> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.InnerDeleteInstance ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBox']/method[@name='innerDeleteInstance' and count(parameter)=0]"
		[Register ("innerDeleteInstance", "()V", "GetInnerDeleteInstanceHandler")]
		protected virtual unsafe void InnerDeleteInstance ()
		{
			const string __id = "innerDeleteInstance.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_nativeOnCommBoxReceive_JLjava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetNativeOnCommBoxReceive_JLjava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler ()
		{
			if (cb_nativeOnCommBoxReceive_JLjava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_ == null)
				cb_nativeOnCommBoxReceive_JLjava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJLLLL_V (n_NativeOnCommBoxReceive_JLjava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_));
			return cb_nativeOnCommBoxReceive_JLjava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_;
		}

		static void n_NativeOnCommBoxReceive_JLjava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, long commBoxHandle, IntPtr native_ipAddress, IntPtr native_senderId, IntPtr native_receiverId, IntPtr native_message)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBox> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var ipAddress = JNIEnv.GetString (native_ipAddress, JniHandleOwnership.DoNotTransfer);
			var senderId = JNIEnv.GetString (native_senderId, JniHandleOwnership.DoNotTransfer);
			var receiverId = JNIEnv.GetString (native_receiverId, JniHandleOwnership.DoNotTransfer);
			var message = JNIEnv.GetString (native_message, JniHandleOwnership.DoNotTransfer);
			__this.NativeOnCommBoxReceive (commBoxHandle, ipAddress, senderId, receiverId, message);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBox']/method[@name='nativeOnCommBoxReceive' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='java.lang.String']]"
		[Register ("nativeOnCommBoxReceive", "(JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetNativeOnCommBoxReceive_JLjava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")]
		protected virtual unsafe void NativeOnCommBoxReceive (long commBoxHandle, string? ipAddress, string? senderId, string? receiverId, string? message)
		{
			const string __id = "nativeOnCommBoxReceive.(JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V";
			IntPtr native_ipAddress = JNIEnv.NewString ((string?)ipAddress);
			IntPtr native_senderId = JNIEnv.NewString ((string?)senderId);
			IntPtr native_receiverId = JNIEnv.NewString ((string?)receiverId);
			IntPtr native_message = JNIEnv.NewString ((string?)message);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (commBoxHandle);
				__args [1] = new JniArgumentValue (native_ipAddress);
				__args [2] = new JniArgumentValue (native_senderId);
				__args [3] = new JniArgumentValue (native_receiverId);
				__args [4] = new JniArgumentValue (native_message);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_ipAddress);
				JNIEnv.DeleteLocalRef (native_senderId);
				JNIEnv.DeleteLocalRef (native_receiverId);
				JNIEnv.DeleteLocalRef (native_message);
			}
		}

		static Delegate? cb_outputBoxException_Ljava_lang_String_Ljava_lang_Exception_;
#pragma warning disable 0169
		static Delegate GetOutputBoxException_Ljava_lang_String_Ljava_lang_Exception_Handler ()
		{
			if (cb_outputBoxException_Ljava_lang_String_Ljava_lang_Exception_ == null)
				cb_outputBoxException_Ljava_lang_String_Ljava_lang_Exception_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_OutputBoxException_Ljava_lang_String_Ljava_lang_Exception_));
			return cb_outputBoxException_Ljava_lang_String_Ljava_lang_Exception_;
		}

		static void n_OutputBoxException_Ljava_lang_String_Ljava_lang_Exception_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBox> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = global::Java.Lang.Object.GetObject<global::Java.Lang.Exception> (native_p1, JniHandleOwnership.DoNotTransfer);
			__this.OutputBoxException (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBox']/method[@name='outputBoxException' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Exception']]"
		[Register ("outputBoxException", "(Ljava/lang/String;Ljava/lang/Exception;)V", "GetOutputBoxException_Ljava_lang_String_Ljava_lang_Exception_Handler")]
		protected abstract void OutputBoxException (string? p0, global::Java.Lang.Exception? p1);

		static Delegate? cb_outputBoxLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetOutputBoxLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler ()
		{
			if (cb_outputBoxLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_ == null)
				cb_outputBoxLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_OutputBoxLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_));
			return cb_outputBoxLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_;
		}

		static void n_OutputBoxLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBox> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = (global::Java.Lang.Object[]?) JNIEnv.GetArray (native_p1, JniHandleOwnership.DoNotTransfer, typeof (global::Java.Lang.Object));
			__this.OutputBoxLogCallFunction (p0, p1);
			if (p1 != null)
				JNIEnv.CopyArray (p1, native_p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBox']/method[@name='outputBoxLogCallFunction' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("outputBoxLogCallFunction", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputBoxLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		protected abstract void OutputBoxLogCallFunction (string? p0, params global::Java.Lang.Object[]? p1);

		static Delegate? cb_outputBoxLogEvent_Ljava_lang_String_arrayLjava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetOutputBoxLogEvent_Ljava_lang_String_arrayLjava_lang_Object_Handler ()
		{
			if (cb_outputBoxLogEvent_Ljava_lang_String_arrayLjava_lang_Object_ == null)
				cb_outputBoxLogEvent_Ljava_lang_String_arrayLjava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_OutputBoxLogEvent_Ljava_lang_String_arrayLjava_lang_Object_));
			return cb_outputBoxLogEvent_Ljava_lang_String_arrayLjava_lang_Object_;
		}

		static void n_OutputBoxLogEvent_Ljava_lang_String_arrayLjava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBox> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = (global::Java.Lang.Object[]?) JNIEnv.GetArray (native_p1, JniHandleOwnership.DoNotTransfer, typeof (global::Java.Lang.Object));
			__this.OutputBoxLogEvent (p0, p1);
			if (p1 != null)
				JNIEnv.CopyArray (p1, native_p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBox']/method[@name='outputBoxLogEvent' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("outputBoxLogEvent", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputBoxLogEvent_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		protected abstract void OutputBoxLogEvent (string? p0, params global::Java.Lang.Object[]? p1);

		static Delegate? cb_outputBoxLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetOutputBoxLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler ()
		{
			if (cb_outputBoxLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_ == null)
				cb_outputBoxLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_OutputBoxLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_));
			return cb_outputBoxLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_;
		}

		static void n_OutputBoxLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBox> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = (global::Java.Lang.Object[]?) JNIEnv.GetArray (native_p1, JniHandleOwnership.DoNotTransfer, typeof (global::Java.Lang.Object));
			__this.OutputBoxLogReturnFunction (p0, p1);
			if (p1 != null)
				JNIEnv.CopyArray (p1, native_p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBox']/method[@name='outputBoxLogReturnFunction' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("outputBoxLogReturnFunction", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputBoxLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		protected abstract void OutputBoxLogReturnFunction (string? p0, params global::Java.Lang.Object[]? p1);

		static Delegate? cb_sendData_Ljava_lang_String_Ljava_lang_String_arrayILcom_epson_eposdevice_commbox_SendDataListener_;
#pragma warning disable 0169
		static Delegate GetSendData_Ljava_lang_String_Ljava_lang_String_arrayILcom_epson_eposdevice_commbox_SendDataListener_Handler ()
		{
			if (cb_sendData_Ljava_lang_String_Ljava_lang_String_arrayILcom_epson_eposdevice_commbox_SendDataListener_ == null)
				cb_sendData_Ljava_lang_String_Ljava_lang_String_arrayILcom_epson_eposdevice_commbox_SendDataListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLLL_V (n_SendData_Ljava_lang_String_Ljava_lang_String_arrayILcom_epson_eposdevice_commbox_SendDataListener_));
			return cb_sendData_Ljava_lang_String_Ljava_lang_String_arrayILcom_epson_eposdevice_commbox_SendDataListener_;
		}

		static void n_SendData_Ljava_lang_String_Ljava_lang_String_arrayILcom_epson_eposdevice_commbox_SendDataListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_message, IntPtr native_memberId, IntPtr native_sequence, IntPtr native_target)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBox> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var message = JNIEnv.GetString (native_message, JniHandleOwnership.DoNotTransfer);
			var memberId = JNIEnv.GetString (native_memberId, JniHandleOwnership.DoNotTransfer);
			var sequence = (int[]?) JNIEnv.GetArray (native_sequence, JniHandleOwnership.DoNotTransfer, typeof (int));
			var target = (global::Com.Epson.Eposdevice.Commbox.ISendDataListener?)global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.ISendDataListener> (native_target, JniHandleOwnership.DoNotTransfer);
			__this.SendData (message, memberId, sequence, target);
			if (sequence != null)
				JNIEnv.CopyArray (sequence, native_sequence);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBox']/method[@name='sendData' and count(parameter)=4 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='int[]'] and parameter[4][@type='com.epson.eposdevice.commbox.SendDataListener']]"
		[Register ("sendData", "(Ljava/lang/String;Ljava/lang/String;[ILcom/epson/eposdevice/commbox/SendDataListener;)V", "GetSendData_Ljava_lang_String_Ljava_lang_String_arrayILcom_epson_eposdevice_commbox_SendDataListener_Handler")]
		public virtual unsafe void SendData (string? message, string? memberId, int[]? sequence, global::Com.Epson.Eposdevice.Commbox.ISendDataListener? target)
		{
			const string __id = "sendData.(Ljava/lang/String;Ljava/lang/String;[ILcom/epson/eposdevice/commbox/SendDataListener;)V";
			IntPtr native_message = JNIEnv.NewString ((string?)message);
			IntPtr native_memberId = JNIEnv.NewString ((string?)memberId);
			IntPtr native_sequence = JNIEnv.NewArray (sequence);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (native_message);
				__args [1] = new JniArgumentValue (native_memberId);
				__args [2] = new JniArgumentValue (native_sequence);
				__args [3] = new JniArgumentValue ((target == null) ? IntPtr.Zero : ((global::Java.Lang.Object) target).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_message);
				JNIEnv.DeleteLocalRef (native_memberId);
				if (sequence != null) {
					JNIEnv.CopyArray (native_sequence, sequence);
					JNIEnv.DeleteLocalRef (native_sequence);
				}
				global::System.GC.KeepAlive (sequence);
				global::System.GC.KeepAlive (target);
			}
		}

		static Delegate? cb_setReceiveEventCallback_Lcom_epson_eposdevice_commbox_ReceiveListener_;
#pragma warning disable 0169
		static Delegate GetSetReceiveEventCallback_Lcom_epson_eposdevice_commbox_ReceiveListener_Handler ()
		{
			if (cb_setReceiveEventCallback_Lcom_epson_eposdevice_commbox_ReceiveListener_ == null)
				cb_setReceiveEventCallback_Lcom_epson_eposdevice_commbox_ReceiveListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetReceiveEventCallback_Lcom_epson_eposdevice_commbox_ReceiveListener_));
			return cb_setReceiveEventCallback_Lcom_epson_eposdevice_commbox_ReceiveListener_;
		}

		static void n_SetReceiveEventCallback_Lcom_epson_eposdevice_commbox_ReceiveListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_target)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.CommBox> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var target = (global::Com.Epson.Eposdevice.Commbox.IReceiveListener?)global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Commbox.IReceiveListener> (native_target, JniHandleOwnership.DoNotTransfer);
			__this.SetReceiveEventCallback (target);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBox']/method[@name='setReceiveEventCallback' and count(parameter)=1 and parameter[1][@type='com.epson.eposdevice.commbox.ReceiveListener']]"
		[Register ("setReceiveEventCallback", "(Lcom/epson/eposdevice/commbox/ReceiveListener;)V", "GetSetReceiveEventCallback_Lcom_epson_eposdevice_commbox_ReceiveListener_Handler")]
		public virtual unsafe void SetReceiveEventCallback (global::Com.Epson.Eposdevice.Commbox.IReceiveListener? target)
		{
			const string __id = "setReceiveEventCallback.(Lcom/epson/eposdevice/commbox/ReceiveListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((target == null) ? IntPtr.Zero : ((global::Java.Lang.Object) target).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (target);
			}
		}

		#region "Event implementation for Com.Epson.Eposdevice.Commbox.IReceiveListener"

		public event EventHandler<global::Com.Epson.Eposdevice.Commbox.ReceiveEventArgs> ReceiveEventCallback {
			add {
				global::Java.Interop.EventHelper.AddEventHandler<global::Com.Epson.Eposdevice.Commbox.IReceiveListener, global::Com.Epson.Eposdevice.Commbox.IReceiveListenerImplementor>(
				ref weak_implementor_SetReceiveEventCallback,
				__CreateIReceiveListenerImplementor,
				SetReceiveEventCallback,
				__h => __h.Handler += value);
			}
			remove {
				global::Java.Interop.EventHelper.RemoveEventHandler<global::Com.Epson.Eposdevice.Commbox.IReceiveListener, global::Com.Epson.Eposdevice.Commbox.IReceiveListenerImplementor>(
				ref weak_implementor_SetReceiveEventCallback,
				global::Com.Epson.Eposdevice.Commbox.IReceiveListenerImplementor.__IsEmpty,
				__v => SetReceiveEventCallback (null),
				__h => __h.Handler -= value);
			}
		}

		WeakReference? weak_implementor_SetReceiveEventCallback;

		global::Com.Epson.Eposdevice.Commbox.IReceiveListenerImplementor __CreateIReceiveListenerImplementor ()
		{
			return new global::Com.Epson.Eposdevice.Commbox.IReceiveListenerImplementor (this);
		}

		#endregion

	}

	[global::Android.Runtime.Register ("com/epson/eposdevice/commbox/CommBox", DoNotGenerateAcw=true)]
	internal partial class CommBoxInvoker : CommBox {
		public CommBoxInvoker (IntPtr handle, JniHandleOwnership transfer) : base (handle, transfer)
		{
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/epson/eposdevice/commbox/CommBox", typeof (CommBoxInvoker));

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBox']/method[@name='outputBoxException' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Exception']]"
		[Register ("outputBoxException", "(Ljava/lang/String;Ljava/lang/Exception;)V", "GetOutputBoxException_Ljava_lang_String_Ljava_lang_Exception_Handler")]
		protected override unsafe void OutputBoxException (string? p0, global::Java.Lang.Exception? p1)
		{
			const string __id = "outputBoxException.(Ljava/lang/String;Ljava/lang/Exception;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Throwable) p1).Handle);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBox']/method[@name='outputBoxLogCallFunction' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("outputBoxLogCallFunction", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputBoxLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		protected override unsafe void OutputBoxLogCallFunction (string? p0, params global::Java.Lang.Object[]? p1)
		{
			const string __id = "outputBoxLogCallFunction.(Ljava/lang/String;[Ljava/lang/Object;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
			IntPtr native_p1 = JNIEnv.NewArray (p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				if (p1 != null) {
					JNIEnv.CopyArray (native_p1, p1);
					JNIEnv.DeleteLocalRef (native_p1);
				}
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBox']/method[@name='outputBoxLogEvent' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("outputBoxLogEvent", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputBoxLogEvent_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		protected override unsafe void OutputBoxLogEvent (string? p0, params global::Java.Lang.Object[]? p1)
		{
			const string __id = "outputBoxLogEvent.(Ljava/lang/String;[Ljava/lang/Object;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
			IntPtr native_p1 = JNIEnv.NewArray (p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				if (p1 != null) {
					JNIEnv.CopyArray (native_p1, p1);
					JNIEnv.DeleteLocalRef (native_p1);
				}
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.commbox']/class[@name='CommBox']/method[@name='outputBoxLogReturnFunction' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("outputBoxLogReturnFunction", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputBoxLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		protected override unsafe void OutputBoxLogReturnFunction (string? p0, params global::Java.Lang.Object[]? p1)
		{
			const string __id = "outputBoxLogReturnFunction.(Ljava/lang/String;[Ljava/lang/Object;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
			IntPtr native_p1 = JNIEnv.NewArray (p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				if (p1 != null) {
					JNIEnv.CopyArray (native_p1, p1);
					JNIEnv.DeleteLocalRef (native_p1);
				}
				global::System.GC.KeepAlive (p1);
			}
		}

	}
}
