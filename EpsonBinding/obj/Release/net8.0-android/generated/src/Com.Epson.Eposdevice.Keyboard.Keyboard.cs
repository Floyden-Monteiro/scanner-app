//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Epson.Eposdevice.Keyboard {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']"
	[global::Android.Runtime.Register ("com/epson/eposdevice/keyboard/Keyboard", DoNotGenerateAcw=true)]
	public abstract partial class Keyboard : global::Java.Lang.Object {
		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_0']"
		[Register ("VK_0")]
		public const sbyte Vk0 = (sbyte) 48;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_1']"
		[Register ("VK_1")]
		public const sbyte Vk1 = (sbyte) 49;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_2']"
		[Register ("VK_2")]
		public const sbyte Vk2 = (sbyte) 50;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_3']"
		[Register ("VK_3")]
		public const sbyte Vk3 = (sbyte) 51;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_4']"
		[Register ("VK_4")]
		public const sbyte Vk4 = (sbyte) 52;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_5']"
		[Register ("VK_5")]
		public const sbyte Vk5 = (sbyte) 53;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_6']"
		[Register ("VK_6")]
		public const sbyte Vk6 = (sbyte) 54;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_7']"
		[Register ("VK_7")]
		public const sbyte Vk7 = (sbyte) 55;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_8']"
		[Register ("VK_8")]
		public const sbyte Vk8 = (sbyte) 56;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_9']"
		[Register ("VK_9")]
		public const sbyte Vk9 = (sbyte) 57;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_A']"
		[Register ("VK_A")]
		public const sbyte VkA = (sbyte) 65;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_ADD']"
		[Register ("VK_ADD")]
		public const sbyte VkAdd = (sbyte) 107;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_B']"
		[Register ("VK_B")]
		public const sbyte VkB = (sbyte) 66;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_BACK']"
		[Register ("VK_BACK")]
		public const sbyte VkBack = (sbyte) 8;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_C']"
		[Register ("VK_C")]
		public const sbyte VkC = (sbyte) 67;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_CAPITAL']"
		[Register ("VK_CAPITAL")]
		public const sbyte VkCapital = (sbyte) 20;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_CONTROL']"
		[Register ("VK_CONTROL")]
		public const sbyte VkControl = (sbyte) 17;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_CONVERT']"
		[Register ("VK_CONVERT")]
		public const sbyte VkConvert = (sbyte) 28;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_D']"
		[Register ("VK_D")]
		public const sbyte VkD = (sbyte) 68;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_DELETE']"
		[Register ("VK_DELETE")]
		public const sbyte VkDelete = (sbyte) 46;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_DOWN']"
		[Register ("VK_DOWN")]
		public const sbyte VkDown = (sbyte) 40;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_E']"
		[Register ("VK_E")]
		public const sbyte VkE = (sbyte) 69;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_END']"
		[Register ("VK_END")]
		public const sbyte VkEnd = (sbyte) 35;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_ESCAPE']"
		[Register ("VK_ESCAPE")]
		public const sbyte VkEscape = (sbyte) 27;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_F']"
		[Register ("VK_F")]
		public const sbyte VkF = (sbyte) 70;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_F1']"
		[Register ("VK_F1")]
		public const sbyte VkF1 = (sbyte) 112;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_F10']"
		[Register ("VK_F10")]
		public const sbyte VkF10 = (sbyte) 121;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_F11']"
		[Register ("VK_F11")]
		public const sbyte VkF11 = (sbyte) 122;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_F12']"
		[Register ("VK_F12")]
		public const sbyte VkF12 = (sbyte) 123;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_F2']"
		[Register ("VK_F2")]
		public const sbyte VkF2 = (sbyte) 113;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_F3']"
		[Register ("VK_F3")]
		public const sbyte VkF3 = (sbyte) 114;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_F4']"
		[Register ("VK_F4")]
		public const sbyte VkF4 = (sbyte) 115;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_F5']"
		[Register ("VK_F5")]
		public const sbyte VkF5 = (sbyte) 116;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_F6']"
		[Register ("VK_F6")]
		public const sbyte VkF6 = (sbyte) 117;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_F7']"
		[Register ("VK_F7")]
		public const sbyte VkF7 = (sbyte) 118;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_F8']"
		[Register ("VK_F8")]
		public const sbyte VkF8 = (sbyte) 119;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_F9']"
		[Register ("VK_F9")]
		public const sbyte VkF9 = (sbyte) 120;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_G']"
		[Register ("VK_G")]
		public const sbyte VkG = (sbyte) 71;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_H']"
		[Register ("VK_H")]
		public const sbyte VkH = (sbyte) 72;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_HOME']"
		[Register ("VK_HOME")]
		public const sbyte VkHome = (sbyte) 36;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_I']"
		[Register ("VK_I")]
		public const sbyte VkI = (sbyte) 73;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_INSERT']"
		[Register ("VK_INSERT")]
		public const sbyte VkInsert = (sbyte) 45;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_J']"
		[Register ("VK_J")]
		public const sbyte VkJ = (sbyte) 74;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_K']"
		[Register ("VK_K")]
		public const sbyte VkK = (sbyte) 75;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_L']"
		[Register ("VK_L")]
		public const sbyte VkL = (sbyte) 76;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_LEFT']"
		[Register ("VK_LEFT")]
		public const sbyte VkLeft = (sbyte) 37;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_M']"
		[Register ("VK_M")]
		public const sbyte VkM = (sbyte) 77;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_MENU']"
		[Register ("VK_MENU")]
		public const sbyte VkMenu = (sbyte) 18;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_MULTIPLY']"
		[Register ("VK_MULTIPLY")]
		public const sbyte VkMultiply = (sbyte) 106;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_N']"
		[Register ("VK_N")]
		public const sbyte VkN = (sbyte) 78;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_NEXT']"
		[Register ("VK_NEXT")]
		public const sbyte VkNext = (sbyte) 34;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_NONCONVERT']"
		[Register ("VK_NONCONVERT")]
		public const sbyte VkNonconvert = (sbyte) 29;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_O']"
		[Register ("VK_O")]
		public const sbyte VkO = (sbyte) 79;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_OEM_1']"
		[Register ("VK_OEM_1")]
		public const sbyte VkOem1 = (sbyte) -70;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_OEM_2']"
		[Register ("VK_OEM_2")]
		public const sbyte VkOem2 = (sbyte) -65;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_OEM_3']"
		[Register ("VK_OEM_3")]
		public const sbyte VkOem3 = (sbyte) -64;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_OEM_4']"
		[Register ("VK_OEM_4")]
		public const sbyte VkOem4 = (sbyte) -37;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_OEM_5']"
		[Register ("VK_OEM_5")]
		public const sbyte VkOem5 = (sbyte) -36;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_OEM_6']"
		[Register ("VK_OEM_6")]
		public const sbyte VkOem6 = (sbyte) -35;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_OEM_7']"
		[Register ("VK_OEM_7")]
		public const sbyte VkOem7 = (sbyte) -34;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_OEM_ATTN']"
		[Register ("VK_OEM_ATTN")]
		public const sbyte VkOemAttn = (sbyte) -16;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_OEM_COMMA']"
		[Register ("VK_OEM_COMMA")]
		public const sbyte VkOemComma = (sbyte) -68;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_OEM_MINUS']"
		[Register ("VK_OEM_MINUS")]
		public const sbyte VkOemMinus = (sbyte) -67;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_OEM_PERIOD']"
		[Register ("VK_OEM_PERIOD")]
		public const sbyte VkOemPeriod = (sbyte) -66;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_OEM_PLUS']"
		[Register ("VK_OEM_PLUS")]
		public const sbyte VkOemPlus = (sbyte) -69;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_P']"
		[Register ("VK_P")]
		public const sbyte VkP = (sbyte) 80;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_PRIOR']"
		[Register ("VK_PRIOR")]
		public const sbyte VkPrior = (sbyte) 33;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_Q']"
		[Register ("VK_Q")]
		public const sbyte VkQ = (sbyte) 81;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_R']"
		[Register ("VK_R")]
		public const sbyte VkR = (sbyte) 82;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_RETURN']"
		[Register ("VK_RETURN")]
		public const sbyte VkReturn = (sbyte) 13;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_RIGHT']"
		[Register ("VK_RIGHT")]
		public const sbyte VkRight = (sbyte) 39;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_S']"
		[Register ("VK_S")]
		public const sbyte VkS = (sbyte) 83;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_SHIFT']"
		[Register ("VK_SHIFT")]
		public const sbyte VkShift = (sbyte) 16;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_SPACE']"
		[Register ("VK_SPACE")]
		public const sbyte VkSpace = (sbyte) 32;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_SUBTRACT']"
		[Register ("VK_SUBTRACT")]
		public const sbyte VkSubtract = (sbyte) 109;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_T']"
		[Register ("VK_T")]
		public const sbyte VkT = (sbyte) 84;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_TAB']"
		[Register ("VK_TAB")]
		public const sbyte VkTab = (sbyte) 9;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_U']"
		[Register ("VK_U")]
		public const sbyte VkU = (sbyte) 85;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_UP']"
		[Register ("VK_UP")]
		public const sbyte VkUp = (sbyte) 38;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_V']"
		[Register ("VK_V")]
		public const sbyte VkV = (sbyte) 86;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_W']"
		[Register ("VK_W")]
		public const sbyte VkW = (sbyte) 87;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_X']"
		[Register ("VK_X")]
		public const sbyte VkX = (sbyte) 88;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_Y']"
		[Register ("VK_Y")]
		public const sbyte VkY = (sbyte) 89;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/field[@name='VK_Z']"
		[Register ("VK_Z")]
		public const sbyte VkZ = (sbyte) 90;

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/epson/eposdevice/keyboard/Keyboard", typeof (Keyboard));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected Keyboard (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/constructor[@name='Keyboard' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register (".ctor", "(J)V", "")]
		protected unsafe Keyboard (long kbdHandle) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(J)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (kbdHandle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_getInnerHandle;
#pragma warning disable 0169
		static Delegate GetGetInnerHandleHandler ()
		{
			if (cb_getInnerHandle == null)
				cb_getInnerHandle = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_J (n_GetInnerHandle));
			return cb_getInnerHandle;
		}

		static long n_GetInnerHandle (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.InnerHandle;
		}
#pragma warning restore 0169

		protected virtual unsafe long InnerHandle {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/method[@name='getInnerHandle' and count(parameter)=0]"
			[Register ("getInnerHandle", "()J", "GetGetInnerHandleHandler")]
			get {
				const string __id = "getInnerHandle.()J";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt64Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_checkHandle;
#pragma warning disable 0169
		static Delegate GetCheckHandleHandler ()
		{
			if (cb_checkHandle == null)
				cb_checkHandle = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_CheckHandle));
			return cb_checkHandle;
		}

		static void n_CheckHandle (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.CheckHandle ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/method[@name='checkHandle' and count(parameter)=0]"
		[Register ("checkHandle", "()V", "GetCheckHandleHandler")]
		protected virtual unsafe void CheckHandle ()
		{
			const string __id = "checkHandle.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_innerDeleteInstance;
#pragma warning disable 0169
		static Delegate GetInnerDeleteInstanceHandler ()
		{
			if (cb_innerDeleteInstance == null)
				cb_innerDeleteInstance = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_InnerDeleteInstance));
			return cb_innerDeleteInstance;
		}

		static void n_InnerDeleteInstance (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.InnerDeleteInstance ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/method[@name='innerDeleteInstance' and count(parameter)=0]"
		[Register ("innerDeleteInstance", "()V", "GetInnerDeleteInstanceHandler")]
		protected virtual unsafe void InnerDeleteInstance ()
		{
			const string __id = "innerDeleteInstance.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_nativeOnKbdKeyPress_Ljava_lang_String_Ljava_lang_String_ILjava_lang_String_;
#pragma warning disable 0169
		static Delegate GetNativeOnKbdKeyPress_Ljava_lang_String_Ljava_lang_String_ILjava_lang_String_Handler ()
		{
			if (cb_nativeOnKbdKeyPress_Ljava_lang_String_Ljava_lang_String_ILjava_lang_String_ == null)
				cb_nativeOnKbdKeyPress_Ljava_lang_String_Ljava_lang_String_ILjava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLIL_V (n_NativeOnKbdKeyPress_Ljava_lang_String_Ljava_lang_String_ILjava_lang_String_));
			return cb_nativeOnKbdKeyPress_Ljava_lang_String_Ljava_lang_String_ILjava_lang_String_;
		}

		static void n_NativeOnKbdKeyPress_Ljava_lang_String_Ljava_lang_String_ILjava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_ipAddress, IntPtr native_deviceId, int keyCode, IntPtr native_ascii)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var ipAddress = JNIEnv.GetString (native_ipAddress, JniHandleOwnership.DoNotTransfer);
			var deviceId = JNIEnv.GetString (native_deviceId, JniHandleOwnership.DoNotTransfer);
			var ascii = JNIEnv.GetString (native_ascii, JniHandleOwnership.DoNotTransfer);
			__this.NativeOnKbdKeyPress (ipAddress, deviceId, keyCode, ascii);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/method[@name='nativeOnKbdKeyPress' and count(parameter)=4 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='int'] and parameter[4][@type='java.lang.String']]"
		[Register ("nativeOnKbdKeyPress", "(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V", "GetNativeOnKbdKeyPress_Ljava_lang_String_Ljava_lang_String_ILjava_lang_String_Handler")]
		protected virtual unsafe void NativeOnKbdKeyPress (string? ipAddress, string? deviceId, int keyCode, string? ascii)
		{
			const string __id = "nativeOnKbdKeyPress.(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V";
			IntPtr native_ipAddress = JNIEnv.NewString ((string?)ipAddress);
			IntPtr native_deviceId = JNIEnv.NewString ((string?)deviceId);
			IntPtr native_ascii = JNIEnv.NewString ((string?)ascii);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (native_ipAddress);
				__args [1] = new JniArgumentValue (native_deviceId);
				__args [2] = new JniArgumentValue (keyCode);
				__args [3] = new JniArgumentValue (native_ascii);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_ipAddress);
				JNIEnv.DeleteLocalRef (native_deviceId);
				JNIEnv.DeleteLocalRef (native_ascii);
			}
		}

		static Delegate? cb_nativeOnKbdString_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_I;
#pragma warning disable 0169
		static Delegate GetNativeOnKbdString_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_IHandler ()
		{
			if (cb_nativeOnKbdString_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_I == null)
				cb_nativeOnKbdString_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLLI_V (n_NativeOnKbdString_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_I));
			return cb_nativeOnKbdString_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_I;
		}

		static void n_NativeOnKbdString_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_I (IntPtr jnienv, IntPtr native__this, IntPtr native_ipAddress, IntPtr native_deviceId, IntPtr native_input, int prefix)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var ipAddress = JNIEnv.GetString (native_ipAddress, JniHandleOwnership.DoNotTransfer);
			var deviceId = JNIEnv.GetString (native_deviceId, JniHandleOwnership.DoNotTransfer);
			var input = JNIEnv.GetString (native_input, JniHandleOwnership.DoNotTransfer);
			__this.NativeOnKbdString (ipAddress, deviceId, input, prefix);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/method[@name='nativeOnKbdString' and count(parameter)=4 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='int']]"
		[Register ("nativeOnKbdString", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V", "GetNativeOnKbdString_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_IHandler")]
		protected virtual unsafe void NativeOnKbdString (string? ipAddress, string? deviceId, string? input, int prefix)
		{
			const string __id = "nativeOnKbdString.(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V";
			IntPtr native_ipAddress = JNIEnv.NewString ((string?)ipAddress);
			IntPtr native_deviceId = JNIEnv.NewString ((string?)deviceId);
			IntPtr native_input = JNIEnv.NewString ((string?)input);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (native_ipAddress);
				__args [1] = new JniArgumentValue (native_deviceId);
				__args [2] = new JniArgumentValue (native_input);
				__args [3] = new JniArgumentValue (prefix);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_ipAddress);
				JNIEnv.DeleteLocalRef (native_deviceId);
				JNIEnv.DeleteLocalRef (native_input);
			}
		}

		static Delegate? cb_outputException_Ljava_lang_String_Ljava_lang_Exception_;
#pragma warning disable 0169
		static Delegate GetOutputException_Ljava_lang_String_Ljava_lang_Exception_Handler ()
		{
			if (cb_outputException_Ljava_lang_String_Ljava_lang_Exception_ == null)
				cb_outputException_Ljava_lang_String_Ljava_lang_Exception_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_OutputException_Ljava_lang_String_Ljava_lang_Exception_));
			return cb_outputException_Ljava_lang_String_Ljava_lang_Exception_;
		}

		static void n_OutputException_Ljava_lang_String_Ljava_lang_Exception_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = global::Java.Lang.Object.GetObject<global::Java.Lang.Exception> (native_p1, JniHandleOwnership.DoNotTransfer);
			__this.OutputException (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/method[@name='outputException' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Exception']]"
		[Register ("outputException", "(Ljava/lang/String;Ljava/lang/Exception;)V", "GetOutputException_Ljava_lang_String_Ljava_lang_Exception_Handler")]
		protected abstract void OutputException (string? p0, global::Java.Lang.Exception? p1);

		static Delegate? cb_outputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetOutputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler ()
		{
			if (cb_outputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_ == null)
				cb_outputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_OutputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_));
			return cb_outputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_;
		}

		static void n_OutputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = (global::Java.Lang.Object[]?) JNIEnv.GetArray (native_p1, JniHandleOwnership.DoNotTransfer, typeof (global::Java.Lang.Object));
			__this.OutputLogCallFunction (p0, p1);
			if (p1 != null)
				JNIEnv.CopyArray (p1, native_p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/method[@name='outputLogCallFunction' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("outputLogCallFunction", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		protected abstract void OutputLogCallFunction (string? p0, params global::Java.Lang.Object[]? p1);

		static Delegate? cb_outputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetOutputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_Handler ()
		{
			if (cb_outputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_ == null)
				cb_outputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_OutputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_));
			return cb_outputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_;
		}

		static void n_OutputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = (global::Java.Lang.Object[]?) JNIEnv.GetArray (native_p1, JniHandleOwnership.DoNotTransfer, typeof (global::Java.Lang.Object));
			__this.OutputLogEvent (p0, p1);
			if (p1 != null)
				JNIEnv.CopyArray (p1, native_p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/method[@name='outputLogEvent' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("outputLogEvent", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		protected abstract void OutputLogEvent (string? p0, params global::Java.Lang.Object[]? p1);

		static Delegate? cb_outputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetOutputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler ()
		{
			if (cb_outputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_ == null)
				cb_outputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_OutputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_));
			return cb_outputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_;
		}

		static void n_OutputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = (global::Java.Lang.Object[]?) JNIEnv.GetArray (native_p1, JniHandleOwnership.DoNotTransfer, typeof (global::Java.Lang.Object));
			__this.OutputLogReturnFunction (p0, p1);
			if (p1 != null)
				JNIEnv.CopyArray (p1, native_p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/method[@name='outputLogReturnFunction' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("outputLogReturnFunction", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		protected abstract void OutputLogReturnFunction (string? p0, params global::Java.Lang.Object[]? p1);

		static Delegate? cb_setKeyPressEventCallback_Lcom_epson_eposdevice_keyboard_KeyPressListener_;
#pragma warning disable 0169
		static Delegate GetSetKeyPressEventCallback_Lcom_epson_eposdevice_keyboard_KeyPressListener_Handler ()
		{
			if (cb_setKeyPressEventCallback_Lcom_epson_eposdevice_keyboard_KeyPressListener_ == null)
				cb_setKeyPressEventCallback_Lcom_epson_eposdevice_keyboard_KeyPressListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetKeyPressEventCallback_Lcom_epson_eposdevice_keyboard_KeyPressListener_));
			return cb_setKeyPressEventCallback_Lcom_epson_eposdevice_keyboard_KeyPressListener_;
		}

		static void n_SetKeyPressEventCallback_Lcom_epson_eposdevice_keyboard_KeyPressListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_target)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var target = (global::Com.Epson.Eposdevice.Keyboard.IKeyPressListener?)global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Keyboard.IKeyPressListener> (native_target, JniHandleOwnership.DoNotTransfer);
			__this.SetKeyPressEventCallback (target);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/method[@name='setKeyPressEventCallback' and count(parameter)=1 and parameter[1][@type='com.epson.eposdevice.keyboard.KeyPressListener']]"
		[Register ("setKeyPressEventCallback", "(Lcom/epson/eposdevice/keyboard/KeyPressListener;)V", "GetSetKeyPressEventCallback_Lcom_epson_eposdevice_keyboard_KeyPressListener_Handler")]
		public virtual unsafe void SetKeyPressEventCallback (global::Com.Epson.Eposdevice.Keyboard.IKeyPressListener? target)
		{
			const string __id = "setKeyPressEventCallback.(Lcom/epson/eposdevice/keyboard/KeyPressListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((target == null) ? IntPtr.Zero : ((global::Java.Lang.Object) target).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (target);
			}
		}

		static Delegate? cb_setPrefix_arrayB;
#pragma warning disable 0169
		static Delegate GetSetPrefix_arrayBHandler ()
		{
			if (cb_setPrefix_arrayB == null)
				cb_setPrefix_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetPrefix_arrayB));
			return cb_setPrefix_arrayB;
		}

		static void n_SetPrefix_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_data)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var data = (byte[]?) JNIEnv.GetArray (native_data, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.SetPrefix (data);
			if (data != null)
				JNIEnv.CopyArray (data, native_data);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/method[@name='setPrefix' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("setPrefix", "([B)V", "GetSetPrefix_arrayBHandler")]
		public virtual unsafe void SetPrefix (byte[]? data)
		{
			const string __id = "setPrefix.([B)V";
			IntPtr native_data = JNIEnv.NewArray (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_data);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (data != null) {
					JNIEnv.CopyArray (native_data, data);
					JNIEnv.DeleteLocalRef (native_data);
				}
				global::System.GC.KeepAlive (data);
			}
		}

		static Delegate? cb_setStringEventCallback_Lcom_epson_eposdevice_keyboard_StringListener_;
#pragma warning disable 0169
		static Delegate GetSetStringEventCallback_Lcom_epson_eposdevice_keyboard_StringListener_Handler ()
		{
			if (cb_setStringEventCallback_Lcom_epson_eposdevice_keyboard_StringListener_ == null)
				cb_setStringEventCallback_Lcom_epson_eposdevice_keyboard_StringListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetStringEventCallback_Lcom_epson_eposdevice_keyboard_StringListener_));
			return cb_setStringEventCallback_Lcom_epson_eposdevice_keyboard_StringListener_;
		}

		static void n_SetStringEventCallback_Lcom_epson_eposdevice_keyboard_StringListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_target)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var target = (global::Com.Epson.Eposdevice.Keyboard.IStringListener?)global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Keyboard.IStringListener> (native_target, JniHandleOwnership.DoNotTransfer);
			__this.SetStringEventCallback (target);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/method[@name='setStringEventCallback' and count(parameter)=1 and parameter[1][@type='com.epson.eposdevice.keyboard.StringListener']]"
		[Register ("setStringEventCallback", "(Lcom/epson/eposdevice/keyboard/StringListener;)V", "GetSetStringEventCallback_Lcom_epson_eposdevice_keyboard_StringListener_Handler")]
		public virtual unsafe void SetStringEventCallback (global::Com.Epson.Eposdevice.Keyboard.IStringListener? target)
		{
			const string __id = "setStringEventCallback.(Lcom/epson/eposdevice/keyboard/StringListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((target == null) ? IntPtr.Zero : ((global::Java.Lang.Object) target).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (target);
			}
		}

		static Delegate? cb_nativeKbdSetPrefix_JarrayB;
#pragma warning disable 0169
		static Delegate GetNativeKbdSetPrefix_JarrayBHandler ()
		{
			if (cb_nativeKbdSetPrefix_JarrayB == null)
				cb_nativeKbdSetPrefix_JarrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJL_I (n_NativeKbdSetPrefix_JarrayB));
			return cb_nativeKbdSetPrefix_JarrayB;
		}

		static int n_NativeKbdSetPrefix_JarrayB (IntPtr jnienv, IntPtr native__this, long p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposdevice.Keyboard.Keyboard> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p1 = (byte[]?) JNIEnv.GetArray (native_p1, JniHandleOwnership.DoNotTransfer, typeof (byte));
			int __ret = __this.NativeKbdSetPrefix (p0, p1);
			if (p1 != null)
				JNIEnv.CopyArray (p1, native_p1);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/method[@name='nativeKbdSetPrefix' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='byte[]']]"
		[Register ("nativeKbdSetPrefix", "(J[B)I", "GetNativeKbdSetPrefix_JarrayBHandler")]
		protected virtual unsafe int NativeKbdSetPrefix (long p0, byte[]? p1)
		{
			const string __id = "nativeKbdSetPrefix.(J[B)I";
			IntPtr native_p1 = JNIEnv.NewArray (p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (native_p1);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				if (p1 != null) {
					JNIEnv.CopyArray (native_p1, p1);
					JNIEnv.DeleteLocalRef (native_p1);
				}
				global::System.GC.KeepAlive (p1);
			}
		}

		#region "Event implementation for Com.Epson.Eposdevice.Keyboard.IKeyPressListener"

		public event EventHandler<global::Com.Epson.Eposdevice.Keyboard.KeyPressEventArgs> KeyPressEventCallback {
			add {
				global::Java.Interop.EventHelper.AddEventHandler<global::Com.Epson.Eposdevice.Keyboard.IKeyPressListener, global::Com.Epson.Eposdevice.Keyboard.IKeyPressListenerImplementor>(
				ref weak_implementor_SetKeyPressEventCallback,
				__CreateIKeyPressListenerImplementor,
				SetKeyPressEventCallback,
				__h => __h.Handler += value);
			}
			remove {
				global::Java.Interop.EventHelper.RemoveEventHandler<global::Com.Epson.Eposdevice.Keyboard.IKeyPressListener, global::Com.Epson.Eposdevice.Keyboard.IKeyPressListenerImplementor>(
				ref weak_implementor_SetKeyPressEventCallback,
				global::Com.Epson.Eposdevice.Keyboard.IKeyPressListenerImplementor.__IsEmpty,
				__v => SetKeyPressEventCallback (null),
				__h => __h.Handler -= value);
			}
		}

		WeakReference? weak_implementor_SetKeyPressEventCallback;

		global::Com.Epson.Eposdevice.Keyboard.IKeyPressListenerImplementor __CreateIKeyPressListenerImplementor ()
		{
			return new global::Com.Epson.Eposdevice.Keyboard.IKeyPressListenerImplementor (this);
		}

		#endregion

		#region "Event implementation for Com.Epson.Eposdevice.Keyboard.IStringListener"

		public event EventHandler<global::Com.Epson.Eposdevice.Keyboard.StringEventArgs> StringEventCallback {
			add {
				global::Java.Interop.EventHelper.AddEventHandler<global::Com.Epson.Eposdevice.Keyboard.IStringListener, global::Com.Epson.Eposdevice.Keyboard.IStringListenerImplementor>(
				ref weak_implementor_SetStringEventCallback,
				__CreateIStringListenerImplementor,
				SetStringEventCallback,
				__h => __h.Handler += value);
			}
			remove {
				global::Java.Interop.EventHelper.RemoveEventHandler<global::Com.Epson.Eposdevice.Keyboard.IStringListener, global::Com.Epson.Eposdevice.Keyboard.IStringListenerImplementor>(
				ref weak_implementor_SetStringEventCallback,
				global::Com.Epson.Eposdevice.Keyboard.IStringListenerImplementor.__IsEmpty,
				__v => SetStringEventCallback (null),
				__h => __h.Handler -= value);
			}
		}

		WeakReference? weak_implementor_SetStringEventCallback;

		global::Com.Epson.Eposdevice.Keyboard.IStringListenerImplementor __CreateIStringListenerImplementor ()
		{
			return new global::Com.Epson.Eposdevice.Keyboard.IStringListenerImplementor (this);
		}

		#endregion

	}

	[global::Android.Runtime.Register ("com/epson/eposdevice/keyboard/Keyboard", DoNotGenerateAcw=true)]
	internal partial class KeyboardInvoker : Keyboard {
		public KeyboardInvoker (IntPtr handle, JniHandleOwnership transfer) : base (handle, transfer)
		{
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/epson/eposdevice/keyboard/Keyboard", typeof (KeyboardInvoker));

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/method[@name='outputException' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Exception']]"
		[Register ("outputException", "(Ljava/lang/String;Ljava/lang/Exception;)V", "GetOutputException_Ljava_lang_String_Ljava_lang_Exception_Handler")]
		protected override unsafe void OutputException (string? p0, global::Java.Lang.Exception? p1)
		{
			const string __id = "outputException.(Ljava/lang/String;Ljava/lang/Exception;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Throwable) p1).Handle);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/method[@name='outputLogCallFunction' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("outputLogCallFunction", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputLogCallFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		protected override unsafe void OutputLogCallFunction (string? p0, params global::Java.Lang.Object[]? p1)
		{
			const string __id = "outputLogCallFunction.(Ljava/lang/String;[Ljava/lang/Object;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
			IntPtr native_p1 = JNIEnv.NewArray (p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				if (p1 != null) {
					JNIEnv.CopyArray (native_p1, p1);
					JNIEnv.DeleteLocalRef (native_p1);
				}
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/method[@name='outputLogEvent' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("outputLogEvent", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputLogEvent_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		protected override unsafe void OutputLogEvent (string? p0, params global::Java.Lang.Object[]? p1)
		{
			const string __id = "outputLogEvent.(Ljava/lang/String;[Ljava/lang/Object;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
			IntPtr native_p1 = JNIEnv.NewArray (p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				if (p1 != null) {
					JNIEnv.CopyArray (native_p1, p1);
					JNIEnv.DeleteLocalRef (native_p1);
				}
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposdevice.keyboard']/class[@name='Keyboard']/method[@name='outputLogReturnFunction' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("outputLogReturnFunction", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetOutputLogReturnFunction_Ljava_lang_String_arrayLjava_lang_Object_Handler")]
		protected override unsafe void OutputLogReturnFunction (string? p0, params global::Java.Lang.Object[]? p1)
		{
			const string __id = "outputLogReturnFunction.(Ljava/lang/String;[Ljava/lang/Object;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
			IntPtr native_p1 = JNIEnv.NewArray (p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				if (p1 != null) {
					JNIEnv.CopyArray (native_p1, p1);
					JNIEnv.DeleteLocalRef (native_p1);
				}
				global::System.GC.KeepAlive (p1);
			}
		}

	}
}
