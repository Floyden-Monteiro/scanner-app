//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Epson.Eposprint {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.epson.eposprint']/class[@name='EposException']"
	[global::Android.Runtime.Register ("com/epson/eposprint/EposException", DoNotGenerateAcw=true)]
	public partial class EposException : global::Java.Lang.Exception {
		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposprint']/class[@name='EposException']/field[@name='ERR_CONNECT']"
		[Register ("ERR_CONNECT")]
		public const int ErrConnect = (int) 3;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposprint']/class[@name='EposException']/field[@name='ERR_FAILURE']"
		[Register ("ERR_FAILURE")]
		public const int ErrFailure = (int) 255;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposprint']/class[@name='EposException']/field[@name='ERR_ILLEGAL']"
		[Register ("ERR_ILLEGAL")]
		public const int ErrIllegal = (int) 6;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposprint']/class[@name='EposException']/field[@name='ERR_MEMORY']"
		[Register ("ERR_MEMORY")]
		public const int ErrMemory = (int) 5;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposprint']/class[@name='EposException']/field[@name='ERR_OFF_LINE']"
		[Register ("ERR_OFF_LINE")]
		public const int ErrOffLine = (int) 9;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposprint']/class[@name='EposException']/field[@name='ERR_OPEN']"
		[Register ("ERR_OPEN")]
		public const int ErrOpen = (int) 2;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposprint']/class[@name='EposException']/field[@name='ERR_PARAM']"
		[Register ("ERR_PARAM")]
		public const int ErrParam = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposprint']/class[@name='EposException']/field[@name='ERR_PROCESSING']"
		[Register ("ERR_PROCESSING")]
		public const int ErrProcessing = (int) 7;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposprint']/class[@name='EposException']/field[@name='ERR_TIMEOUT']"
		[Register ("ERR_TIMEOUT")]
		public const int ErrTimeout = (int) 4;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposprint']/class[@name='EposException']/field[@name='ERR_UNSUPPORTED']"
		[Register ("ERR_UNSUPPORTED")]
		public const int ErrUnsupported = (int) 8;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.epson.eposprint']/class[@name='EposException']/field[@name='SUCCESS']"
		[Register ("SUCCESS")]
		public const int Success = (int) 0;

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/epson/eposprint/EposException", typeof (EposException));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected EposException (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.epson.eposprint']/class[@name='EposException']/constructor[@name='EposException' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register (".ctor", "(I)V", "")]
		public unsafe EposException (int value) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(I)V";

			if (((global::Java.Lang.Throwable) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (value);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.epson.eposprint']/class[@name='EposException']/constructor[@name='EposException' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register (".ctor", "(II)V", "")]
		public unsafe EposException (int value, int status) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(II)V";

			if (((global::Java.Lang.Throwable) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (value);
				__args [1] = new JniArgumentValue (status);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.epson.eposprint']/class[@name='EposException']/constructor[@name='EposException' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[Register (".ctor", "(III)V", "")]
		public unsafe EposException (int value, int status, int battery) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(III)V";

			if (((global::Java.Lang.Throwable) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (value);
				__args [1] = new JniArgumentValue (status);
				__args [2] = new JniArgumentValue (battery);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.epson.eposprint']/class[@name='EposException']/constructor[@name='EposException' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Throwable']]"
		[Register (".ctor", "(Ljava/lang/String;Ljava/lang/Throwable;)V", "")]
		public unsafe EposException (string? message, global::Java.Lang.Throwable? cause) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Ljava/lang/String;Ljava/lang/Throwable;)V";

			if (((global::Java.Lang.Throwable) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_message = JNIEnv.NewString ((string?)message);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_message);
				__args [1] = new JniArgumentValue ((cause == null) ? IntPtr.Zero : ((global::Java.Lang.Throwable) cause).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_message);
				global::System.GC.KeepAlive (cause);
			}
		}

		static Delegate? cb_getBatteryStatus;
#pragma warning disable 0169
		static Delegate GetGetBatteryStatusHandler ()
		{
			if (cb_getBatteryStatus == null)
				cb_getBatteryStatus = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetBatteryStatus));
			return cb_getBatteryStatus;
		}

		static int n_GetBatteryStatus (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposprint.EposException> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.BatteryStatus;
		}
#pragma warning restore 0169

		public virtual unsafe int BatteryStatus {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposprint']/class[@name='EposException']/method[@name='getBatteryStatus' and count(parameter)=0]"
			[Register ("getBatteryStatus", "()I", "GetGetBatteryStatusHandler")]
			get {
				const string __id = "getBatteryStatus.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getErrorStatus;
#pragma warning disable 0169
		static Delegate GetGetErrorStatusHandler ()
		{
			if (cb_getErrorStatus == null)
				cb_getErrorStatus = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetErrorStatus));
			return cb_getErrorStatus;
		}

		static int n_GetErrorStatus (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposprint.EposException> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.ErrorStatus;
		}
#pragma warning restore 0169

		public virtual unsafe int ErrorStatus {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposprint']/class[@name='EposException']/method[@name='getErrorStatus' and count(parameter)=0]"
			[Register ("getErrorStatus", "()I", "GetGetErrorStatusHandler")]
			get {
				const string __id = "getErrorStatus.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getPrinterStatus;
#pragma warning disable 0169
		static Delegate GetGetPrinterStatusHandler ()
		{
			if (cb_getPrinterStatus == null)
				cb_getPrinterStatus = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetPrinterStatus));
			return cb_getPrinterStatus;
		}

		static int n_GetPrinterStatus (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Epson.Eposprint.EposException> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.PrinterStatus;
		}
#pragma warning restore 0169

		public virtual unsafe int PrinterStatus {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.epson.eposprint']/class[@name='EposException']/method[@name='getPrinterStatus' and count(parameter)=0]"
			[Register ("getPrinterStatus", "()I", "GetGetPrinterStatusHandler")]
			get {
				const string __id = "getPrinterStatus.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

	}
}
